[
  {
    "title": "Abstract",
    "subsections": [
      {
        "content": "A security configuration checklist is a document that contains instructions or procedures for configuring an information technology (IT) product to an operational environment, for verifying that the product has been configured properly, and/or for identifying unauthorized changes to the product. Using these checklists can minimize the attack surface, reduce vulnerabilities, lessen the impact of successful attacks, and identify changes that might otherwise go undetected. To facilitate development of checklists and to make checklists more organized and usable, NIST established the National Checklist Program (NCP). This publication explains how to use the NCP to find and retrieve checklists, and it also describes the policies, procedures, and general requirements for participation in the NCP."
      }
    ]
  },
  {
    "title": "Executive Summary",
    "subsections": [
      {
        "content": "A security configuration checklist (also called a lockdown, hardening guide, or benchmark) is a series of instructions or procedures for configuring an IT product to a particular operational environment, for verifying that the product has been configured properly, and/or for identifying unauthorized changes to the product. The IT product may be commercial, open source, government-off-the-shelf (GOTS), etc. Checklists can comprise templates or automated scripts, patch information, Extensible Markup Language (XML) files, and other procedures. Checklists are intended to be tailored by each organization to meet its particular security and operational requirements. Typically, checklists are created by IT vendors for their own products; however, checklists are also created by other organizations, such as academia, consortia, and government agencies. The use of well-written, standardized checklists can markedly reduce the vulnerability exposure of IT products. Checklists can be particularly helpful to small organizations and to individuals with limited resources for securing their systems."
      },
      {
        "content": "NIST maintains the National Checklist Repository, which is a publicly available resource that contains information on a variety of security configuration checklists for specific IT products or categories of IT products. The repository, which is located at https://checklists.nist.gov/, contains information that describes each checklist. The repository also hosts copies of some checklists, primarily those developed by the federal government, and has links to the location of other checklists. Users can browse and search the repository to locate a particular checklist using a variety of criteria. Having a centralized checklist repository makes it easier for organizations to find the current, authoritative versions of security checklists and to determine which ones best meet their needs."
      },
      {
        "content": "This document is intended for users and developers of security configuration checklists. For checklist users, this document makes recommendations for how they should select checklists from the NIST National Checklist Repository, evaluate and test checklists, and apply them to IT products. For checklist developers, this document sets forth the policies, procedures, and general requirements for participation in the NIST National Checklist Program (NCP)."
      },
      {
        "title": "Major recommendations made in this document for checklist users and developers include the following:# Security Checklists for Operating Systems and Applications",
        "content": [
          {
            "text": "Organizations should apply checklists to operating systems and applications to reduce the number of vulnerabilities that attackers can attempt to exploit and to lessen the impact of successful attacks. There is no checklist that can make a system or product 100 percent secure, and using checklists does not eliminate the need for ongoing security maintenance, such as patch installation."
          },
          {
            "text": "However, using checklists that emphasize both hardening of systems against software flaws (e.g., by applying patches and eliminating unnecessary functionality) and configuring systems securely will typically reduce the number of ways in which the systems can be attacked, resulting in greater levels of product security and protection from future threats. Checklists can also be used to verify the configuration of some types of security controls for system assessments, such as confirming compliance with certain Federal Information Security Modernization Act (FISMA) requirements or other sets of security requirements."
          }
        ]
      },
      {
        "title": "Federal Requirements",
        "content": [
          {
            "text": "Federal agencies are required to use appropriate security configuration checklists from the NCP when available. In January 2017, Part 39 of the Federal Acquisition Regulation (FAR) was updated. Paragraph (c) of section 39.101 states, \"In acquiring information technology, agencies shall include the appropriate information technology security policies and requirements, including use of common security configurations available from the National Institute of Standards and Technology's website at https://checklists.nist.gov. Agency contracting officers should consult with the requiring official to ensure the appropriate standards are incorporated.\" [1] Also, FISMA requires each Federal agency to determine minimally acceptable system configuration requirements and to ensure compliance with them [2]."
          },
          {
            "text": "Accordingly, Federal agencies, as well as vendors of products for the Federal government, should acquire or implement and share such checklists using the NIST repository. NIST encourages checklist developers to assert mappings to the security controls delineated in NIST Special Publication (SP) 800-53 to facilitate FISMA compliance checking for Federal agencies."
          }
        ]
      }
    ]
  },
  {
    "title": "When multiple checklists are available for a particular product",
    "subsections": [
      {
        "content": "Organizations should take into consideration the degree of automation and use of standards of each checklist. Generally, SCAP checklists can be used more consistently and efficiently than others. There may be other significant differences among checklists; for example, one checklist may include software bundled with an operating system (e.g., web browser and email client) while another checklist addresses that operating system only."
      },
      {
        "content": "Another example is the assumptions on which the checklists are based (e.g., operational environment). A checklist user should identify such differences and determine which checklist(s) seem appropriate and merit further analysis."
      },
      {
        "title": "Checklist source",
        "content": [
          {
            "text": "Checklist source is particularly important for users from Federal civilian agencies, who should first search for government-authorized or mandated checklists (e.g., mandated by Part 39 of the FAR [1]). In general, these users should search for NIST-produced checklists, which are tailored for civilian agency use. If no NIST-produced checklist is available, then agency-produced checklists from the Defense Information Systems Agency (DISA) or the National Security Agency (NSA) should be used if available. If formal government-authorized checklists do not exist, organizations are encouraged to use vendor-produced checklists. If vendor-produced checklists are not available, other checklists that are posted on the NCP website may be used."
          }
        ]
      },
      {
        "title": "Customization and testing",
        "content": [
          {
            "text": "Checklist users should customize and test checklists before applying them to production systems. A checklist that is not mandatory for an organization to adopt should be considered a starting point for an organization to customize. Although the settings are based on sound knowledge of security threats and vulnerabilities, they cannot take into account organization-specific security and operational requirements, existing security controls, and other factors that may necessitate changes. Organizations should carefully evaluate the checklist settings and give them considerable weight, then make any changes necessary to adapt the settings to the organization's environment, requirements, policies, and security objectives. This is particularly true for checklists intended for an environment with significantly different security needs."
          },
          {
            "text": "All deviations from the checklist settings should be documented for future reference, and include the reason behind each deviation and the impact of deviating from the setting."
          }
        ]
      },
      {
        "title": "Testing before application",
        "content": [
          {
            "text": "Before applying a checklist that will be used to alter product settings, users should first test it on non-critical systems, preferably in a controlled non-operational environment. Each checklist in the NIST repository has been tested by its developer, but there are often significant differences between a developer's testing environment and an organization's operational environment, and some of these differences may affect checklist deployment. In some cases, a security control modification can have a negative impact on a product's functionality and usability, or on other products or security controls. Consequently, it is important to perform testing to determine the impact on system security, functionality, and usability; to document the results of testing; and to take appropriate steps to address any significant issues.\n```# Issues"
          },
          {
            "text": "Checklist users should take their operational environments into account when selecting checklists, and checklist developers should target their checklists to one or more operational environments. Checklists are significantly more useful when they can run in common operational environments. The NCP has identified several broad and specialized operational environments, such as Standalone and Managed, and at least one of the environments should be common to most of the audiences. Thoroughly identifying and describing these environments will make it easier for users to select the security checklists that are most appropriate for their particular operating environments, and will allow developers to better target their checklists to the general security characteristics associated with their operating environments."
          },
          {
            "text": "NIST strongly encourages IT product vendors to develop security configuration checklists for their products and contribute them to the NIST National Checklist Repository. NIST encourages IT product vendors to develop security configuration checklists for their products, since the vendors have the most expertise on the possible security configuration settings and the best understanding of how the settings relate to and affect each other. Vendors that create security configuration checklists should submit them for inclusion in the National Checklist Repository through the NCP. The NCP provides a process and guidance for developing checklists in a consistent fashion. For checklist developers, steps include initial development of the checklist, checklist testing, documenting the checklist according to the guidelines of the NCP, and submitting a checklist package to NIST. NIST screens the checklist according to program requirements and then releases the checklist for public review, which lasts 30 days. After the public review period and subsequent resolution of issues, the checklist is listed on the NIST checklist repository with its information. Checklist maintenance may potentially be performed by the vendor, resulting in the release of updated checklists. NIST retires or archives checklists as they become outdated or incorrect."
          }
        ]
      },
      {
        "title": "1. Introduction",
        "content": [
          {
            "subsection": "1.1 Purpose and Scope",
            "text": []
          },
          {
            "text": "This document describes the use, benefits, and management of checklists, and explains how to use the NIST National Checklist Program (NCP) to find and retrieve checklists. The document also describes the policies, procedures, and general requirements for participation in the NCP."
          },
          {
            "subsection": "1.2 Document Organization",
            "text": []
          },
          {
            "text": "Section 2 contains an overview of checklists and describes the advantages of the NIST NCP and how it works. Section 3 provides additional details on pre-defined checklist operational environments that are used in the NCP to help developers create checklists that are consistent with security practices. The material presented in Section 3 can also help checklist users select the checklists that best match their own operational environments. Section 4 contains information for potential checklist users. It describes how to use the NCP to find and retrieve checklists that best match the identified needs. It also contains# Guidance on How to Implement Checklists"
          },
          {
            "text": "Including how to analyze the specific operating environment and then tailor checklists as applicable. Section 5 provides guidance for current and prospective checklist developers. This guidance contains information on the procedures for preparing and submitting a checklist to NIST for inclusion in the checklist repository."
          }
        ]
      },
      {
        "title": "Appendices",
        "content": [
          {
            "text": "\nAppendix A lists references for this document.\nAppendix B contains the programmatic and legal requirements that must be satisfied to participate in the NCP.\nAppendix C contains the NCP participation and logo usage agreement form.\nAppendix D details additional requirements that United States Government Configuration Baseline (USGCB) checklists must meet.\nAppendix E contains a list of acronyms used in this document.\nAppendix F presents a glossary of the terms used in this document.\nAppendix G provides the change log for the most recent release of the document.\n"
          }
        ]
      },
      {
        "title": "2. The NIST National Checklist Program",
        "content": [
          {
            "text": "There are many threats to users' computers, and new vulnerabilities in IT products (e.g., operating systems and applications) are discovered daily. Patches may not be immediately available for new vulnerabilities, causing the need to rapidly deploy temporary mitigation through reconfiguration until patches are available. Also, because IT products often are intended for a wide variety of audiences, restrictive security settings are usually not enabled by default, which means that many IT products are immediately vulnerable in their default configuration. It is a complicated, arduous, and time-consuming task even for experienced system administrators to know what a reasonable set of security settings is for many different IT products."
          },
          {
            "text": "Although the solutions to IT security are complex, one simple yet effective tool is the security configuration checklist. To facilitate development of security configuration checklists and to meet the requirements of the Cyber Security Research and Development Act of 2002 (Public Law 107-305) (CSRDA) [3], NIST developed the National Checklist Program (NCP) for IT Products. This section contains an overview of the NCP. It begins by describing the contents of checklists and giving examples of the types of IT products for which checklists are often created. It next explains the benefits of using security configuration checklists, such as improving the base level of security for an organization. It also explains the goals and benefits of the NCP, which include increasing the quality, usability, and availability of checklists."
          },
          {
            "subsection": "2.1 Security Configuration Checklists",
            "text": []
          },
          {
            "text": "A security configuration checklist (also referred to as a lockdown guide, hardening guide, security guide, security technical implementation guide [STIG], or benchmark) is essentially a document that contains instructions or procedures for configuring an IT product to an operational environment, for verifying that the product has been configured properly, and/or for identifying unauthorized configuration changes to the product. The IT product may be commercial, open source, government-off-the-shelf (GOTS), etc.# Using Well-Written, Standardized Configuration Checklists"
          },
          {
            "text": "Using well-written, standardized configuration checklists can reduce the vulnerability exposure of IT products and be particularly helpful to small organizations and individuals in securing their systems."
          },
          {
            "text": "Checklists can be developed not only by IT vendors, but also by other organizations with technical competence in IT product security. A security configuration checklist might include any of the following:"
          },
          {
            "text": "\nConfiguration files that automatically set or verify various security-related settings (e.g., executables, security templates that modify settings, Security Content Automation Protocol (SCAP) XML (Extensible Markup Language) files, and scripts).\nDocumentation (e.g., text file) that guides the checklist user to manually configure an IT product.\nDocuments that explain the recommended methods to securely install and configure a device.\nPolicy and programmatic documents that set forth guidelines for such things as auditing, authentication mechanisms (e.g., passwords), and perimeter security.\n"
          },
          {
            "text": "Not all instructions in a security configuration checklist need to strictly address security settings. Checklists can also include specialized security functions, such as looking for artifacts of an attack on a host, or administrative practices such as enabling energy saving features."
          },
          {
            "text": "Typically, a system administrator or end user follows the instructions in the checklist to configure a product or system to the level of security implemented in the checklist, or to verify that a product or system is already configured properly. The system administrator may need to modify the checklist to incorporate the local security policy."
          }
        ]
      },
      {
        "title": "Examples of Devices and Software for Security Checklists",
        "content": [
          {
            "text": "Examples of the types of devices and software for which security checklists are intended are as follows:"
          },
          {
            "text": "\nGeneral-purpose operating systems and mobile operating systems.\nCommon applications such as email clients, web browsers, word processors, personal firewalls, and antivirus software.\nInfrastructure devices such as routers, switches, firewalls, virtual private network (VPN) gateways, intrusion detection systems (IDS), wireless access points, and telecommunication systems.\nApplication servers such as Domain Name System (DNS), Dynamic Host Configuration Protocol (DHCP), web, Simple Mail Transfer Protocol (SMTP), and database servers.\nOther network devices such as scanners, printers, and copiers.\n"
          }
        ]
      },
      {
        "title": "Benefits of Using Security Checklists",
        "content": [
          {
            "text": "Security checklists, when developed correctly, can help users configure IT products so that they have more protection than the defaults provide. Applying checklists to operating systems and applications can reduce the number of vulnerabilities that attackers can attempt to exploit and lessen the impact of successful attacks. Using checklists improves the consistency and predictability of system security, particularly in conjunction with user training and awareness activities and other supporting security controls. Additional benefits associated with using checklists include the following:"
          },
          {
            "text": "\nProvides a base level of security to protect against common and dangerous local and remote threats (e.g., malware, denial-of-service attacks, unauthorized access, and inappropriate usage).\n\nVerifies the configuration of certain technical security controls for system.# Assessments\n\n\nConfirming compliance with certain Federal Information Security Modernization Act (FISMA) requirements or other sets of requirements, and understanding the exposure caused by misconfigurations.\n\n\nSignificantly reduces the time required to research and develop appropriate security configurations for installed IT products.\n\n\nAllows smaller organizations to leverage outside resources to implement recommended practice security configurations.\n\n\nReduces the likelihood of public loss of confidence or embarrassment resulting from a compromise of systems (for example, a major breach of personally identifiable information (PII)).\n\n"
          },
          {
            "text": "Verifies the configuration of certain technical security controls for system.# Assessments"
          },
          {
            "text": "Confirming compliance with certain Federal Information Security Modernization Act (FISMA) requirements or other sets of requirements, and understanding the exposure caused by misconfigurations."
          },
          {
            "text": "Significantly reduces the time required to research and develop appropriate security configurations for installed IT products."
          },
          {
            "text": "Allows smaller organizations to leverage outside resources to implement recommended practice security configurations."
          },
          {
            "text": "Reduces the likelihood of public loss of confidence or embarrassment resulting from a compromise of systems (for example, a major breach of personally identifiable information (PII))."
          },
          {
            "text": "Although using security checklists for security compliance purposes can significantly improve overall levels of security in organizations, using a checklist cannot make a system or a product 100 percent secure. However, using checklists that emphasize hardening of systems against the hidden software flaws will typically result in greater levels of product security and protection from future threats (e.g., zero-day vulnerabilities). IT vendors that configure their products using checklists that adhere to the FISMA-associated security control requirements will provide more consistency in configuration settings within the federal agencies. This configuration will also provide a much more cost-effective method for establishing and verifying the minimum configuration settings, even if the agencies must modify the checklists to fine-tune the configuration settings for their specific applications and operational environments."
          }
        ]
      },
      {
        "title": "2.3 Overview of NIST National Checklist Program",
        "content": [
          {
            "text": "Many organizations have created checklists; however, these checklists vary widely in terms of quality and usability, and they may become outdated as software updates and upgrades are released. Without a central checklist repository, finding security checklists can be difficult. In addition, checklists may differ significantly from one another in terms of the purpose of the checklist or the level of security provided. Also, it may be difficult to determine if the checklist is current or how the checklist should be implemented."
          },
          {
            "text": "To facilitate development of security checklists for IT products and to make checklists more organized and usable, NIST established the NCP. The goals of the NCP are to:"
          },
          {
            "text": "\n\nFacilitate development and sharing of checklists by providing a formal framework for vendors and other checklist developers to submit checklists to NIST.\n\n\nProvide guidance to developers to help them create standardized, high-quality checklists that conform to common operational environments.\n\n\nHelp developers and users by providing guidelines for making checklists better documented and more usable.\n\n\nEncourage software vendors and other parties to develop checklists.\n\n\nProvide a managed process for the review, update, and maintenance of checklists.\n\n\nProvide an easy-to-use repository of checklist information.\n\n\nProvide checklist content in a standardized format.\n\n\nEncourage the use of automation technologies for applying checklists.# Federal Agencies and Security Configuration Checklists\n\n"
          },
          {
            "text": "Facilitate development and sharing of checklists by providing a formal framework for vendors and other checklist developers to submit checklists to NIST."
          },
          {
            "text": "Provide guidance to developers to help them create standardized, high-quality checklists that conform to common operational environments."
          },
          {
            "text": "Help developers and users by providing guidelines for making checklists better documented and more usable."
          },
          {
            "text": "Encourage software vendors and other parties to develop checklists."
          },
          {
            "text": "Provide a managed process for the review, update, and maintenance of checklists."
          },
          {
            "text": "Provide an easy-to-use repository of checklist information."
          },
          {
            "text": "Provide checklist content in a standardized format."
          },
          {
            "text": "Encourage the use of automation technologies for applying checklists.# Federal Agencies and Security Configuration Checklists"
          },
          {
            "text": "Federal agencies are required to use appropriate security configuration checklists from the NCP when available. In January 2017, Part 39 of the Federal Acquisition Regulation (FAR) was updated. Paragraph (c) of section 39.101 states, \"In acquiring information technology, agencies shall include the appropriate information technology security policies and requirements, including use of common security configurations available from the National Institute of Standards and Technology's website at https://checklists.nist.gov. Agency contracting officers should consult with the requiring official to ensure the appropriate standards are incorporated.\" [1]"
          }
        ]
      }
    ]
  },
  {
    "title": "CURRENT_PAGE_RAW_OCR_TEXT",
    "subsections": [
      {
        "content": "Program is available at https://nvd.nist.gov/general/email-list."
      }
    ]
  },
  {
    "title": "Managed Environments",
    "subsections": [
      {
        "content": "Managed checklists are intended for advanced end users and system administrators. The managed nature of typical Managed environments gives administrators centralized control over various settings on devices. Authentication, account, and policy management can also be administered centrally to maintain a consistent security posture across an organization."
      },
      {
        "content": "The Managed environment is more restrictive and provides less functionality than the Standalone environment. However, because of the supported and controlled nature of the Managed environment, it is typically easier to use more functionally restrictive settings in Managed environments than in Standalone environments. Managed environments also tend to implement several layers of defense (e.g., firewalls, antivirus servers, IDSs, patch management systems, and email filtering), which provides greater protection for systems."
      }
    ]
  },
  {
    "title": "3.4 Legacy Environments",
    "subsections": [
      {
        "content": "A Legacy environment is another example of a Custom environment. A Legacy environment contains older systems or applications that may need to be secured to meet today's threats, but they often use older, less secure communication mechanisms and need to be able to communicate with other systems. Non-legacy systems operating in a Legacy environment may need less restrictive security settings so that they can communicate with legacy systems and applications. Legacy environments are often subsets of other environments."
      }
    ]
  },
  {
    "title": "3.5 United States Government Environment",
    "subsections": [
      {
        "content": "A United States Government environment is another example of a Custom environment. This environment contains federal government systems. These systems need to be secured according to prescribed configurations as mandated by policy. For example, the Federal Desktop Core Configuration (FDCC) is a security configuration policy mandated by the Office of Management and Budget (OMB). The original checklists developed in support of the FDCC policy exist for multiple versions of Microsoft Windows, Windows Firewall, and Internet Explorer. These checklists are broader than previous checklists, incorporating settings for Web browsers, personal firewalls, and other software. The configuration settings also include non security-related settings aimed at improving performance, energy efficiency, compatibility, and interoperability. The settings are largely based on the configuration settings recommended by Microsoft in its security guides, but they have been customized to take into account federal government security requirements. Many federal systems have been required to use these checklists by OMB's FDCC mandate."
      },
      {
        "content": "Since that time, the US government has focused on developing a new set of security configuration checklists to augment the existing checklists in support of the FDCC policy. These new checklists are known as the United States Government Configuration Baseline (USGCB). Like the original checklists, the USGCB checklists also support the FDCC policy, and the USGCB checklists address a wide variety of security and non-security settings that are largely based on settings recommended by product vendors but customized to meet federal requirements. The USGCB initiative was created in 2010 by the Technology Infrastructure Subcommittee (TIS) of the CIO Council Architecture and Infrastructure Committee (AIC) as an evolution of the FDCC policy. The USGCB checklists are referred to as \"baselines\" because they define minimum sets of configurations that must be implemented. New USGCB baselines were released to replace the original FDCC checklists (Windows XP, Windows Vista, and Internet Explorer 7), and the original FDCC checklists were deprecated at that time. USGCB checklists have also been created for other platforms, namely Red Hat Enterprise Linux Desktop."
      },
      {
        "content": "The USGCB configuration settings are intended to be deployed primarily to managed systems. The original checklists in support of the FDCC policy and USGCB baselines are intended to be applied to systems primarily through automated tools. Organizations should thoroughly test.\n``````markdown"
      }
    ]
  },
  {
    "title": "CURRENT_PAGE_RAW_OCR_TEXT",
    "subsections": [
      {
        "content": "All checklists and baselines before deploying them in operational environments because a number of their settings, such as cryptographic algorithm options and wireless services, may impact system functionality. After deployment, settings may also be checked through automated means for compliance with checklists and baselines."
      },
      {
        "title": "4. Checklist Usage",
        "content": [
          {
            "text": "This section describes a high-level process for checklist users to follow when retrieving and using checklists. Although all checklist users, ranging from home users to system administrators, have their own specific requirements, the process described will apply to most situations. This section includes guidance on conducting an initial analysis of local environment threats and risks, and lists the potential impacts of such attacks. It then describes a process for selecting and retrieving checklists through the NIST checklist repository, and recommends steps for analyzing, tailoring, and applying the checklist."
          },
          {
            "text": "Figure 1 shows the general process for using checklists. The general steps involved in acquiring and using checklists are simple and straightforward:"
          },
          {
            "text": "\nUsers gather their local requirements (e.g., IT products, the operating environment, and associated security needs) and then acquire or purchase the IT product that best suits their needs.\nUsers browse the checklist repository to retrieve checklists that match the user's operational environment and security requirements. If a product is intended to be secure by default, it is still important to check the NIST checklist repository for updates to that checklist.\nUsers review the checklists and select the checklist that best meets their requirements, then tailor and document the checklist as necessary to take into account local policies and functional requirements, test the checklist, and provide feedback to NIST and checklist developers.\nUsers prepare to deploy the checklist, such as making configuration or data backups, and then apply the checklist in production.\n"
          },
          {
            "text": "The following sections describe the details of the activities included in each of these steps."
          },
          {
            "subsection": "4.1 Determining Local Requirements",
            "text": []
          },
          {
            "text": "Organizations usually conduct a requirements analysis before actually selecting and purchasing a particular IT product. Such an analysis would include identifying the needs of the organization (what the product must do) and the security requirements for the product (e.g., relevant security policies). Individual end users can conduct the same process, although it could be quite informal. Because it is difficult to add security later, it is best to assess requirements upfront when incorporating security into IT operations, big or small."
          },
          {
            "text": "When planning security, it is essential to first define the threats that must be mitigated. Organizations that use checklists should conduct risk assessments to identify the specific threats against their systems and determine the effectiveness of existing security controls in counteracting the threats; they then should perform risk mitigation to decide what additional measures (if any) should be implemented, as discussed.\n```# in NIST SP 800-37 Revision 1, Guide for Applying the Risk Management Framework to Federal Information Systems: A Security Life Cycle Approach"
          },
          {
            "text": "Performing risk assessments and mitigation helps organizations better understand their needs and decide whether or not they need to modify or enhance selected checklists."
          },
          {
            "text": "The risk mitigation methodology includes steps that are straightforward and simple, even for an individual home user who may not be especially savvy with regard to IT security. Important steps include the following:"
          },
          {
            "text": "\n\nIdentify Functional Needs. What must the product do? Identifying upfront the end user's requirements, such as remote access for telecommuters or a web server to make internal information available to employees, is necessary to ensure that the security controls selected are appropriate; that is, that they implement an appropriate security solution and still allow the system to meet its requirements for functionality.\n\n\nIdentify Threats and Vulnerabilities. A threat is the potential for a particular threat-source to successfully exercise a particular vulnerability. A vulnerability is a weakness that can be accidentally triggered or intentionally exploited. The goal of this step is to identify potential threat-sources that are applicable to the IT product or system being considered, as well as the vulnerabilities that could be exploited by the potential threat-sources.\n\n\nIdentify Security Needs. The goal of this step is to determine the controls needed to minimize or eliminate the likelihood (or probability) of a threat exercising a product or system vulnerability. It answers the question, \"What security features must the product provide?\" Armed with this information, the organization can make wiser choices about which IT product best meets its needs.\n\n"
          },
          {
            "text": "Identify Functional Needs. What must the product do? Identifying upfront the end user's requirements, such as remote access for telecommuters or a web server to make internal information available to employees, is necessary to ensure that the security controls selected are appropriate; that is, that they implement an appropriate security solution and still allow the system to meet its requirements for functionality."
          },
          {
            "text": "Identify Threats and Vulnerabilities. A threat is the potential for a particular threat-source to successfully exercise a particular vulnerability. A vulnerability is a weakness that can be accidentally triggered or intentionally exploited. The goal of this step is to identify potential threat-sources that are applicable to the IT product or system being considered, as well as the vulnerabilities that could be exploited by the potential threat-sources."
          },
          {
            "text": "Identify Security Needs. The goal of this step is to determine the controls needed to minimize or eliminate the likelihood (or probability) of a threat exercising a product or system vulnerability. It answers the question, \"What security features must the product provide?\" Armed with this information, the organization can make wiser choices about which IT product best meets its needs."
          },
          {
            "text": "NIST has also written several documents and guides to help federal agencies when selecting information security products and when acquiring and using tested/evaluated products. Another key resource available at NIST for identifying vulnerability-related information about IT products is the National Vulnerability Database (NVD). This website provides a search engine for identified system vulnerabilities and information on patches that are available to correct the vulnerabilities."
          }
        ]
      },
      {
        "title": "4.2 Browsing and Retrieving Checklists",
        "content": [
          {
            "text": "After determining local requirements and identifying an IT product, a checklist user is ready to browse the NIST checklist repository. To help users obtain checklists that can be processed by SCAP-validated products, the checklists are categorized by content type (degree of automation and standardization) and authority (the organization responsible for producing the original security configuration guidance represented by the checklist). Users can browse the checklists based on the content type, IT product, or authority and through a keyword search that searches the checklist name and summary for user-specified terms. The search results show the detailed checklist information and a link to any SCAP content for the checklist, as well as links to any supporting resources associated with the checklist. Selecting a particular# Checklist Overview"
          },
          {
            "text": "The checklist will show a description template that includes extensive information to help users decide whether the checklist will suit their specific purposes. Depending on a user's needs, role, and skills (e.g., home user versus enterprise administrator), some fields in the description will be more important than others."
          }
        ]
      },
      {
        "title": "Multiple Applications and Operating Systems",
        "content": [
          {
            "text": "Some checklists address more than one application or operating system, such as several products from a single organization. To help users navigate the site from the checklist detail page, a Checklist Group link is available; it represents the grouping of checklists based on a common source material. For example, the DISA (Defense Information Systems Agency) Desktop Checklist contains configuration settings for multiple products including browsers and antivirus products. The NCP decomposes the checklist information according to these individual targets, but keeps them conveniently linked to the same source document via the Checklist Group."
          }
        ]
      },
      {
        "title": "Variations in Checklists",
        "content": [
          {
            "text": "In some cases, multiple checklists are available for a particular version of a product. Such checklists are often similar, but they have important differences, such as the degree of automation provided, the intended audience (e.g., providing general recommendations versus complying with Federal agency-specific requirements), and the checklist purpose (reconfiguring a product versus identifying a successful compromise of the product). To assist checklist users in being able to readily identify the major differences among checklists, NIST categorized checklists by content type, such as:"
          },
          {
            "text": "\nProse. Prose checklists provide narrative descriptions of how a person can manually alter a product's configuration.\nAutomated. Automated checklists document their security settings in a machine-readable format, either standard or proprietary. An example is a product-specific configuration script. These checklists may include some elements of SCAP (for example, they may contain CCE [Common Configuration Enumeration] identifiers), but do not fully adhere to the SCAP specification.\nSCAP Content. SCAP content checklists adhere to the SCAP specification in NIST SP 800-126 for documenting security settings in machine-readable standardized SCAP formats. SCAP content checklists can be processed by SCAP-validated products, which have been validated by an accredited independent testing laboratory as conforming to applicable SCAP specifications and requirements.\n"
          }
        ]
      },
      {
        "title": "SCAP Content Validation",
        "content": [
          {
            "text": "SCAP content that is available on the National Checklist Program repository has been evaluated with the NIST SCAP Content Validation Tool (SCAPVal). This evaluation ensures the checklist conforms to the SCAP specification. The SCAPVal tool does not evaluate the checklist for logic errors such as use of an \"equal to\" operator when \"equal to or greater than\" should have been used."
          },
          {
            "text": "Some SCAP content checklists have been vetted with at least one governance organization authority. These SCAP checklists are known to run on SCAP-enabled tools and include low-level security setting mappings (for example, standardized identifiers for individual security configuration issues) that can be externally mapped to high-level security requirements as represented.# CURRENT_PAGE_RAW_OCR_TEXT"
          }
        ]
      },
      {
        "title": "in various security frameworks",
        "content": [
          {
            "text": "(e.g., SP 800-53 controls for FISMA). The USGCB checklists described in Section 3.5 are examples of vetted SCAP content checklists."
          },
          {
            "text": "When multiple checklists are available for a particular product, organizations should take into consideration the degree of automation and use of standards of each checklist. Generally, SCAP-expressed checklists can be used more consistently and efficiently than others. There may be other significant differences among checklists; for example, one checklist may include software bundled with an operating system (e.g., web browser and email client) while another checklist addresses that operating system only. Another example is the assumptions on which the checklists are based (e.g., operational environment). A checklist user should identify such differences and determine which checklist(s) seem appropriate and merit further analysis."
          },
          {
            "text": "Checklist source is particularly important for users from Federal civilian agencies, who should first search for government-authorized or mandated checklists. In general, these users should search for NIST-produced checklists, which are tailored for civilian agency use. If no NIST-produced checklist is available, then agency-produced checklists from the Defense Information Systems Agency (DISA) or the National Security Agency (NSA) should be used if available. If formal government-authorized checklists do not exist, organizations are encouraged to use vendor-produced checklists. If vendor-produced checklists are not available, other checklists that are posted on the NCP website may be used."
          },
          {
            "text": "Organizations often submit checklists with associated alphanumeric version identifiers (e.g., R1.2.0). Unfortunately, these identifiers do not have universal meanings. Some organizations may change the version number when new checks are added, old technology is deleted, patches are added, or simply based on a review date. Conversely, other organizations may update their checklist and not change the version numbers. To clarify updates to checklists, NCP uses the concept of a \"Checklist Revision.\" A Checklist Revision indicates that something has changed even if the version identifier did not change. For example, if the organization does not change the version number on the document, but the content has been updated (e.g., patches were added for a given month), the current checklist will be listed as archived and the checklist with the updated patch content will show as the current checklist. Likewise, if the submitting organization updates the version identifier, then the NCP will list the current checklist as archived and link to the new checklist. From the checklist detail page, a user can navigate to the checklist history via the \"Archived Revisions\" link."
          }
        ]
      },
      {
        "title": "4.3 Reviewing, Customizing and Documenting, and Testing Checklists",
        "content": [
          {
            "text": "Checklist users should download all documentation for the checklist and review it carefully. The documentation should explain any required preparatory activities, such as backing up a system. Because a checklist may not exactly match a user's specific requirements, reviewing a checklist is useful in determining whether the checklist may need to be tailored and whether the system or product will require further changes after applying the checklist.# The User's Review and Security Checklists"
          },
          {
            "text": "The user's review can identify the impact on an organization's current policies and practices if a given security checklist is used. An organization may determine that some aspects of the checklist do not conform to certain organization-specific security and operational needs and requirements. Organizations should carefully evaluate the checklist settings and give them considerable weight, then make any changes necessary to adapt the settings to the organization's environment, requirements, policies, and security objectives. This is particularly true for checklists intended for an environment with significantly different security needs."
          },
          {
            "text": "Organizations should tailor the checklists to reflect local rules, regulations, and mandates; for example, federal civilian agencies would need to ensure that checklists reflect compliance with encryption requirements from Federal Information Processing Standard (FIPS) 140, Security Requirements for Cryptographic Modules. Because the checklist may be used many times within the organization, the checklist itself might need to be modified. This is especially likely if the checklist includes a script or template to be applied to systems."
          },
          {
            "text": "At this point, all deviations from the settings in the checklist should be documented for future reference. The documentation should include the reason behind each deviation, including the impact of retaining the setting and the impact of deviating from the setting. This documentation helps in managing changes to the checklist over the life cycle of the product being secured. Feedback on the checklist can be sent to NIST as well as to the checklist developers. Feedback is especially important to developers in gauging whether the checklist is well written and the settings are applicable to the targeted environment."
          },
          {
            "text": "Before applying a checklist that will be used to alter product settings, users should first test it on noncritical systems, preferably in a controlled non-operational environment. Such testing may be difficult for home or small business users who do not have extra systems and networks for testing purposes. Each checklist in the NIST checklist repository has been tested by its developer, but there are often significant differences between a developer's testing environment and an organization's operational environment, and some of these differences may affect checklist deployment."
          },
          {
            "text": "The testing configuration of the IT product should match the deployment configuration. In some cases, a security control modification can have a negative impact on a product's functionality and usability, or on other products or security controls. For example, installing a patch could inadvertently break another patch, or enabling a firewall could inadvertently block antivirus software from updating its signatures or disrupt patch management software. Consequently, it is important to perform testing to determine the impact on system security, functionality, and usability; to document the results of testing; and to take appropriate steps to address any significant issues."
          },
          {
            "text": "Section 4.4 contains recommendations for performing backups and other suggestions to prevent or recover from potential damage or unwanted effects that could occur if applying an untested checklist."
          },
          {
            "text": "Before using a checklist to verify product settings without altering them, users...# Checklist Testing for IT Products"
          },
          {
            "text": "Should test it. If the checklist is automated, users should also test the tool or tools that will be used with the checklist to ensure that they do not inadvertently disrupt the functionality of the system or alter the configuration of the product. Checklist testing should be performed to identify discrepancies between the expected and actual settings, which could indicate errors in the checklist, such as environment-specific characteristics for which the checklist was not modified."
          }
        ]
      },
      {
        "title": "4.4 Applying Checklists to IT Products",
        "content": [
          {
            "text": "A checklist can be applied to an IT product in one of two ways: modifying the product's settings or verifying the existing settings. The following provides recommendations for both ways of applying checklists:"
          },
          {
            "subsection": "Setting Modification",
            "text": []
          },
          {
            "text": "\nEven after reviewing and testing a checklist, users should handle deployment carefully to minimize any issues that might arise from applying the checklist.\nFor users who are unable to test a checklist in a non-operational environment (e.g., home users), it is important to carefully review the checklist documentation completely and to determine if an initial backup is required. The Rollback Capability field in the checklist description will indicate whether the results of applying the checklist can be reversed to return the product to its original configuration. Regardless of this setting, it is strongly recommended that a user back up the IT product's configuration before installing the checklist recommendations.\nAt a minimum, users should back up all critical data files in their computing environment. If possible, the user should make a full backup of the system to ensure that the system can be restored to its pre-checklist state if necessary. (Making a full backup is recommended before making any major system change; it does not apply only to implementing a checklist.) Large organizations should also follow this procedure and, if possible, first select several operational systems as pilots to provide \"real-world\" testing for the checklist before enterprise-wide deployment.\n"
          },
          {
            "subsection": "Setting Verification",
            "text": []
          },
          {
            "text": "\nEven after reviewing and testing a checklist, users should handle verification carefully to ensure that product settings are not inadvertently altered.\n"
          },
          {
            "text": "After initially applying a checklist, an organization may need to acquire and apply revised versions of the checklist in the future. Depending on the product being secured, a checklist may be updated periodically based on a set schedule or updated as needed, frequently or infrequently. For selected checklists, NIST may maintain a mailing address list of users, and users who subscribe to the list will receive announcements of updates or other issues connected with the checklist. Instructions for subscribing to the mailing address list will be included in the selected checklist's description on the checklist repository. An organization that acquires an updated checklist would perform the same steps already described in this section while taking advantage of knowledge gained and documented from applying previous versions of the checklist.# The Checklist"
          }
        ]
      },
      {
        "title": "4.5 Providing Feedback on Checklists",
        "content": [
          {
            "text": "NIST welcomes all \"bug\" reports, comments, and suggestions from checklist users in regard to individual checklists or the repository itself. Such feedback should be directed to checklists@nist.gov."
          },
          {
            "text": "Some of the questions that checklist users may want to consider when evaluating a checklist include the following:"
          },
          {
            "text": "\nDocumentation\nDoes it explain the security objectives?\n\nDoes it contain a complete, clear, and concise description of the checklist settings?\n\n\nRecommended Practices\n\nAre the checklist settings consistent with recommended practices?\n\nDo the checklist settings take into account recent vulnerabilities?\n\n\nImpact of Settings\n\nHas the checklist developer tested the checklist settings on the product in an operationally realistic environment and determined that the application of the checklist settings causes the product to meet the security objectives of the checklist?\nDo any of the checklist settings cause the product to become inoperable or unstable?\n\nDo any of the checklist settings reduce product functionality? If so, is this documented?\n\n\nEase of Implementation\n\nIs the checklist straightforward to apply?\nAre the instructions concise, sound, and complete?\nIs the required skill level identified?\nAre procedures to verify that the installation is successful included?\nIs there guidance for uninstalling the checklist or restoring the product to the state before installation?\n\nIf the checklist cannot be rolled back, does the documentation recommend other preparatory measures such as backups?\n\n\nAssistance\n\nIs checklist-related help available?\nDoes the documentation contain information for troubleshooting if errors occur or if the checklist settings cause the product to operate incorrectly?\nIs there assistance available for qualified users of the product?\nIf the checklist developer is NOT the IT product's vendor, does the documentation indicate whether the checklist has been sponsored or endorsed by the IT product's vendor?\n"
          },
          {
            "text": "Does it contain a complete, clear, and concise description of the checklist settings?"
          },
          {
            "text": "Recommended Practices"
          },
          {
            "text": "Do the checklist settings take into account recent vulnerabilities?"
          },
          {
            "text": "Impact of Settings"
          },
          {
            "text": "Do any of the checklist settings reduce product functionality? If so, is this documented?"
          },
          {
            "text": "Ease of Implementation"
          },
          {
            "text": "If the checklist cannot be rolled back, does the documentation recommend other preparatory measures such as backups?"
          },
          {
            "text": "Assistance"
          }
        ]
      },
      {
        "title": "5. Checklist Development",
        "content": [
          {
            "text": "This section describes the general process for developing security configuration checklists and submitting them to the NCP. It includes an overview of the process NIST will follow to screen the checklist submissions and publish them in its repository, and the process NIST and developers will follow to update the checklist or to archive the checklist. Individual developers and organizations that want to submit checklists to NIST should review the appendices of this document, which contain the administrative requirements for participation in the NCP. Before submitting a checklist to NIST, developers should ensure they have the most recent version of this document. The most recent version is available as a separate file at https://nvd.nist.gov/ncp/participation."
          },
          {
            "text": "The checklist life cycle comprises the following steps:"
          },
          {
            "text": "\n\nInitial Checklist Development: The developer becomes familiar with the...# Procedures and Requirements of the Checklist Program\n\n\nChecklist Development: The developer becomes familiar with the procedures and requirements of the checklist program, and then performs the initial development of the checklist, including selection of a target environment.\n\n\nChecklist Testing: The developer tests the checklist in the target environment and corrects any problems with the checklist.\n\n\nChecklist Documented: The developer documents the checklist according to the guidelines of the program.\n\n\nChecklist Submitted to NIST: The developer submits the checklist and documentation package to NIST for screening and public review.\n\n\nNIST Screening: NIST screens the checklist package's information and confirms that any SCAP data stream content is well-formed, then addresses any issues with the developer prior to public review.\n\n\nPublic Review and Feedback: NIST holds a 30-day public review of the candidate checklist, then the developer addresses comments as necessary.\n\n\nFinal Listing on Checklist Repository: NIST lists the checklist on the repository as final and announces the checklist's availability.\n\n\nChecklist Maintenance and Archival: Anyone can provide feedback on the checklist throughout its life. The developer updates the checklist periodically as necessary. The checklist is archived when it is no longer being maintained or is no longer needed.\n\n"
          },
          {
            "text": "Initial Checklist Development: The developer becomes familiar with the...# Procedures and Requirements of the Checklist Program"
          },
          {
            "text": "Checklist Development: The developer becomes familiar with the procedures and requirements of the checklist program, and then performs the initial development of the checklist, including selection of a target environment."
          },
          {
            "text": "Checklist Testing: The developer tests the checklist in the target environment and corrects any problems with the checklist."
          },
          {
            "text": "Checklist Documented: The developer documents the checklist according to the guidelines of the program."
          },
          {
            "text": "Checklist Submitted to NIST: The developer submits the checklist and documentation package to NIST for screening and public review."
          },
          {
            "text": "NIST Screening: NIST screens the checklist package's information and confirms that any SCAP data stream content is well-formed, then addresses any issues with the developer prior to public review."
          },
          {
            "text": "Public Review and Feedback: NIST holds a 30-day public review of the candidate checklist, then the developer addresses comments as necessary."
          },
          {
            "text": "Final Listing on Checklist Repository: NIST lists the checklist on the repository as final and announces the checklist's availability."
          },
          {
            "text": "Checklist Maintenance and Archival: Anyone can provide feedback on the checklist throughout its life. The developer updates the checklist periodically as necessary. The checklist is archived when it is no longer being maintained or is no longer needed."
          },
          {
            "text": "Each step should be carried out to ensure the checklist is accurate, tested, and documented during its development and subsequent publication, update, or archival. The following sections describe considerations for each step. USGCB checklists for the US Government environment follow the steps in this section, but they must meet additional requirements as detailed in Appendix D."
          }
        ]
      },
      {
        "title": "5.1 Developer Steps for Creating, Testing, and Submitting Checklists",
        "content": [
          {
            "text": "The first four steps in the development methodology listed above involve the developer creating, testing, documenting, and submitting checklists. Sections 5.1.1 through 5.1.4 describe each of these steps in greater detail."
          },
          {
            "subsection": "5.1.1 Initial Checklist Development",
            "text": []
          },
          {
            "text": "During initial checklist development, a developer becomes familiar with the requirements of the checklist program and all procedures involved during the checklist life cycle (as described throughout this section). At this point, a developer would presumably agree to the requirements for participation in the NCP before continuing to develop the checklist. The participation requirements are described in this document, but are presented in administrative and programmatic terms in Appendix B, which is intended less for technical developers and more for those in developer organizations who must formally agree to NCP requirements. The participation agreement is contained in Appendix C."
          },
          {
            "text": "After agreeing to NCP requirements, the developer decides in which operational environment (see Section 3) the checklist should be implemented, and builds the checklist accordingly. The output of this step is an initial checklist for the product. NIST recognizes that detailed checklist development cannot be covered extensively in this document.# Developers and Security Checklists"
          },
          {
            "text": "Developers may find publications on commonly accepted technical security principles and practices, as catalogued in NIST SP 800-53 [7] and NIST SP 800-27, Engineering Principles for Information Technology Security (A Baseline for Achieving Security) [5], to be helpful when developing a checklist. There are also many publications related to SCAP available at https://scap.nist.gov/."
          },
          {
            "text": "In terms of vulnerability coverage, the security objectives should take into account the most up-to-date vulnerabilities and generally be consistent with recognized sources of vulnerability-related information, including the Department of Homeland Security's (DHS) United States Computer Emergency Readiness Team (US-CERT), the Computer Emergency Response Team/Coordination Center (CERT/CC), and NIST's NVD."
          },
          {
            "text": "Developers of checklists for products that are used by the federal government should consult the FISMA-associated security control requirements. NIST SP 800-53 [7] provides a catalog of security controls, using groups of the controls to create three minimum security control sets for federal information systems\u2014low, moderate, and high impact as specified in FIPS 199, Standards for Security Categorization of Federal Information and Information Systems [9]. Developers of IT products that will be used in federal information systems are encouraged to help federal agencies meet the mandatory requirements in FISMA by creating checklists that provide recommended configuration settings in a variety of operational environments or for information systems of differing impact levels, as described in FIPS 199 and SP 800-53. Developers are also encouraged to consider requirements imposed by the Health Insurance Portability and Accountability Act (HIPAA) and other sources."
          }
        ]
      },
      {
        "title": "5.1.2 Checklist Testing",
        "content": [
          {
            "text": "Before a checklist is submitted to NIST, it should be fully tested in a configuration that meets the target environment and platform. The checklist should be tested with a variety of applications and hardware platforms, if applicable. Ideally, at least some testing should be performed in a production or mirrored production environment. The testing data does not need to be submitted to NIST; however, the developer should retain the data for review as appropriate."
          },
          {
            "text": "Selecting the most appropriate set of security controls can be a daunting task because many security controls have limited system functionality and usability. In some cases, a security control can have a negative impact on other security controls. For example, installing a patch could inadvertently break another patch. Therefore, it is important to perform testing for all security controls to determine what impact they have on system security, functionality, and usability, and to take appropriate steps to address any significant issues."
          },
          {
            "text": "NIST has produced SP 800-115, Technical Guide to Information Security Testing and Assessment [8], to help administrators in testing systems for vulnerabilities and configuration problems. Although this publication is focused more on testing systems than testing individual IT products, it may be useful to checklist developers."
          }
        ]
      },
      {
        "title": "5.1.3 Checklist Documented# The Quality of Checklist Documentation",
        "content": [
          {
            "text": "The quality of checklist documentation often makes a major difference in the checklist's effectiveness."
          },
          {
            "text": "The checklist documentation should clearly explain how to use the checklist, with concise, sound, and complete instructions. The skill level required to use the checklist should be identified, as well as the targeted environment. The documentation should also explain the significance of individual settings, including any changes to product functionality. If applicable, the documentation should also include procedures to verify that the checklist installation is successful, as well as guidance for uninstalling the checklist or restoring the product to its state before installation of the checklist. In some cases, it may not be possible to roll back checklist settings, in which case the checklist documentation should recommend procedures such as backups and system restoration as applicable."
          },
          {
            "text": "The testing methodology, such as how the checklist was tested and what platforms were used, should be documented. The checklist documentation should also contain information for troubleshooting if errors occur or if the checklist settings cause the product to operate incorrectly. Ideally, assistance is available for (registered) users of the product if there are problems."
          }
        ]
      },
      {
        "title": "Checklist Developers",
        "content": [
          {
            "text": "Checklist developers must complete an online checklist description form for each checklist. Table 1 shows the fields in the checklist description form that developers are to complete. The developer needs to complete the fields as indicated to describe the checklist accurately and minimize user confusion as to what the checklist accomplishes."
          }
        ]
      },
      {
        "title": "Summary of Well-Structured Checklist Documentation",
        "content": [
          {
            "text": "In summary, well-structured checklist documentation includes the following, as appropriate:"
          },
          {
            "text": "\nStatement of the security objectives, including the expected behavior of the product after applying the checklist\nThe intended audience (e.g., end user, system administrator) and the level of technical skill required to use the checklist\nExplanation of the checklist settings, including each setting's effect on operation of the product and any functionality the settings enable or disable\nBackup procedures or any other initial steps required before applying the checklist\nAs appropriate, step-by-step instructions for applying the checklist (e.g., screen shots, illustrated procedures) and verifying that the installation is successful\nTroubleshooting instructions or other information and references.\n"
          }
        ]
      }
    ]
  },
  {
    "title": "Information and Materials Needed for Checklist Submission",
    "subsections": [
      {
        "content": "In addition, the website allows checklist developers to view the checklists they have submitted, see tasks that have been assigned to them (such as fixing errors on a previously submitted checklist), update existing checklists, and perform other actions. NIST also provides web services for submitting, fetching, and maintaining checklists. To request access to the NCP Submission website or associated web services, email checklists@nist.gov."
      }
    ]
  },
  {
    "title": "Current Page Raw OCR Text",
    "subsections": [
      {
        "content": "On the product and how frequently updates occur, NIST may maintain a mailing address for the associated checklists. Users who subscribe to the mailing list can receive announcements of updates or other issues connected with a checklist. The selected checklist's description (on the checklist repository) will contain instructions for subscribing to the mailing address list."
      },
      {
        "content": "After the final checklist is listed, NIST will periodically review the checklist to determine if it is still relevant or if changes need to be made to it. If the developer decides to update the checklist at any time, NIST will announce that the checklist is in the process of being updated. If the revised checklist contains major changes, it will be accepted as if it were a new submission, and will be required to undergo the same review process as a new submission."
      },
      {
        "content": "At NIST's or the developer's discretion, the checklist can be removed from the repository or marked as an archive. Typical reasons for such actions would be that the product is no longer supported or is obsolete, or that the developer no longer wishes to provide support for the checklist.\n```"
      }
    ]
  }
]