[
  {
    "title": "Abstract",
    "subsections": [
      {
        "content": "Bluetooth wireless technology is an open standard for short-range radio frequency communication used primarily to establish wireless personal area networks (WPANs), and has been integrated into many types of business and consumer devices. This publication provides information on the security capabilities of Bluetooth and gives recommendations to organizations employing Bluetooth wireless technologies on securing them effectively. The Bluetooth versions within the scope of this publication are versions 1.1, 1.2, 2.0 + Enhanced Data Rate (EDR), 2.1 + EDR, 3.0 + High Speed (HS), 4.0, 4.1, and 4.2. Versions 4.0 and later support the low energy feature of Bluetooth."
      }
    ]
  },
  {
    "title": "Executive Summary",
    "subsections": [
      {
        "content": "Bluetooth is an open standard for short-range radio frequency (RF) communication. Bluetooth wireless technology is used primarily to establish wireless personal area networks (WPANs). Bluetooth has been integrated into many types of business and consumer devices, including cell phones, laptops, automobiles, medical devices, printers, keyboards, mice, headsets, and, more recently, medical devices and personal devices (such as smart watches, music speakers, home appliances, fitness monitors, and trackers). This allows users to form ad hoc networks between a wide variety of devices to transfer voice and data. This document provides an overview of Bluetooth wireless technology and discusses related security concerns."
      },
      {
        "content": "Several Bluetooth versions are currently in use in commercial devices, while the most current version can be found at bluetooth.com. At the time of writing, Bluetooth 4.0 (adopted June 2010) is the most prevalent. The most recent versions include Bluetooth 4.1 and Bluetooth 4.2. Bluetooth 4.1 (adopted December 2013) improved the strengths of the Basic Rate/Enhanced Data Rate (BR/EDR) technology cryptographic key, device authentication, and encryption by making use of Federal Information Processing Standard (FIPS)-approved algorithms. Bluetooth 4.2 (adopted December 2014) improved the strength of the low energy technology cryptographic key by making use of FIPS-approved algorithms, and provided means to convert BR/EDR technology keys to low energy technology keys and vice versa. This publication addresses the security of all versions of Bluetooth."
      },
      {
        "content": "Bluetooth wireless technology and associated devices are susceptible to general wireless networking threats, such as denial of service (DoS) attacks, eavesdropping, man-in-the-middle (MITM) attacks, message modification, and resource misappropriation. They are also threatened by more specific attacks related to Bluetooth wireless technology that target known vulnerabilities in Bluetooth implementations and specifications. Attacks against improperly secured Bluetooth implementations can provide attackers with unauthorized access to sensitive information and# Unauthorized Use of Bluetooth Devices"
      },
      {
        "content": "Unauthorized use of Bluetooth devices and other systems or networks to which the devices are connected."
      },
      {
        "title": "Recommendations for Improving Bluetooth Security",
        "content": [
          {
            "text": "To improve the security of Bluetooth implementations, organizations should implement the following recommendations:"
          },
          {
            "text": "Organizations should use the strongest Bluetooth security mode that is available for their Bluetooth devices."
          },
          {
            "text": "The Bluetooth specifications define several security modes, and each version of Bluetooth supports some, but not all, of these modes. The modes differ primarily by the point at which the device initiates security; hence, these modes define how well they protect Bluetooth communications and devices from potential attack. Some security modes have configurable security level settings which affect the security of the connections."
          },
          {
            "text": "For Bluetooth 4.1 devices that have BR, EDR, and High Speed (HS) features, Security Mode 4, Level 4 is recommended because it requires Secure Connections, which uses authenticated pairing and encryption using 128-bit strength keys generated using FIPS-approved Advanced Encryption Standard (AES) encryption. For Bluetooth 2.1 through 4.0 devices, Security Mode 4, Level 3 is the most secure, and for Bluetooth 2.0 and older devices Security Mode 3 is recommended. Security Modes 2 and 4 can also use authentication and encryption, but do not initiate them until after the Bluetooth physical link has already been fully established and logical channels partially established. Security Mode 1 devices never initiate security and therefore should never be used."
          },
          {
            "text": "For the low energy feature of Bluetooth (introduced in Version 4.0 and updated in 4.1 and 4.2), Security Mode 1 Level 4 is the strongest mode because it requires authenticated low energy Secure Connections pairing with Elliptic Curve Diffie-Hellman (ECDH) based encryption. Security Mode 1 Level 3 requires authenticated pairing and encryption but does not use ECDH-based cryptography and thus provides limited eavesdropping protection due to weak encryption. Other security modes/levels allow unauthenticated pairing (meaning no MITM protection is provided during cryptographic key establishment), and some do not require any security at all."
          },
          {
            "text": "The available modes vary based on the Bluetooth specification version supported by the device, so organizations should choose the most secure mode available for each case."
          }
        ]
      },
      {
        "title": "Security Policies for Bluetooth Technology",
        "content": [
          {
            "text": "Organizations should address Bluetooth wireless technology in their security policies and change default settings of Bluetooth devices to reflect the policies."
          },
          {
            "text": "A security policy that defines requirements for Bluetooth security is the foundation for all other Bluetooth related countermeasures. The policy should include a list of approved uses for Bluetooth, a list of the types of information that may be transferred over Bluetooth networks, and, if they are used, requirements for selecting and using Bluetooth personal identification numbers (PINs). A baseline configuration for Bluetooth default settings should accompany the security policy.# Bluetooth Security Policy Guidelines"
          },
          {
            "text": "The checklist in Table 4-2 provides a \"Technical Recommendations\" section which may be used as a guide. After establishing a Bluetooth security policy, organizations should ensure that Bluetooth devices' default settings are reviewed and changed as needed so that they comply with the security policy requirements. For example, a typical requirement is to disable unneeded Bluetooth profiles and services to reduce the number of vulnerabilities that attackers could attempt to exploit. When available, a centralized security policy management approach should be used to ensure device configurations are compliant."
          },
          {
            "text": "Organizations should ensure that their Bluetooth users are made aware of their security-related responsibilities regarding Bluetooth use. Annual required security awareness programs should be updated to include Bluetooth security policy guidelines. A security awareness program helps educate and train users to follow security practices that protect the assets of an organization and prevent security incidents. For example, users should be provided with a list of precautionary measures they should take to better protect handheld Bluetooth devices from theft. Users should also be made aware of other actions to take regarding Bluetooth device security, such as ensuring that Bluetooth devices are turned off when they are not needed to minimize exposure to malicious activities, and performing Bluetooth device pairing as infrequently as possible and ideally in a physically secure area where attackers cannot observe passkey entry and eavesdrop on Bluetooth pairing-related communications."
          }
        ]
      },
      {
        "title": "1 Introduction",
        "content": [
          {
            "subsection": "1.1 Purpose and Scope",
            "text": []
          },
          {
            "text": "The purpose of this document is to provide information to organizations on the security capabilities of Bluetooth and provide recommendations to organizations employing Bluetooth wireless technologies on securing them effectively. The Bluetooth versions within the scope of this publication are versions 1.1, 1.2, 2.0 + Enhanced Data Rate (EDR), 2.1 + EDR, 3.0 + High Speed (HS), 4.0, 4.1, and 4.2. Bluetooth with low energy functionality is present in 4.0 and later. Bluetooth 5.0 is not in the scope of this document."
          },
          {
            "subsection": "1.2 Audience and Assumptions",
            "text": []
          },
          {
            "text": "This document discusses Bluetooth wireless technologies and security capabilities in technical detail. This document assumes that the readers have at least some operating system, wireless networking, and security knowledge. Because of the constantly changing nature of the wireless security industry and the threats and vulnerabilities to the technologies, readers are strongly encouraged to take advantage of other resources (including those listed in this document) for more current and detailed information."
          },
          {
            "text": "The following list highlights people with differing roles and responsibilities that might use this document:"
          },
          {
            "text": "Government managers (e.g., chief information officers and senior managers) who oversee the use and security of Bluetooth within their organizations\n\nSystems engineers and architects who design and implement Bluetooth wireless technologies# Technologies\n\n\nAuditors, security consultants, and others who perform security assessments of wireless environments\n\nResearchers and analysts who are trying to understand the underlying wireless technologies."
          },
          {
            "text": "Systems engineers and architects who design and implement Bluetooth wireless technologies# Technologies"
          },
          {
            "text": "Auditors, security consultants, and others who perform security assessments of wireless environments"
          }
        ]
      },
      {
        "title": "1.3 Document Organization",
        "content": [
          {
            "text": "The remainder of this document is composed of the following sections and appendices:"
          },
          {
            "text": "Section 2 provides an overview of Bluetooth wireless technology, including its benefits, technical characteristics, and architecture.\nSection 3 discusses the security features defined in the Bluetooth specifications and highlights their limitations.\nSection 4 examines common vulnerabilities and threats involving Bluetooth wireless technologies and makes recommendations for countermeasures to improve Bluetooth security.\nAppendix A provides a glossary of terms.\nAppendix B provides a list of acronyms and abbreviations used in this document.\nAppendix C lists Bluetooth functions.\nAppendix D lists Bluetooth references.\nAppendix E lists Bluetooth online resources."
          }
        ]
      },
      {
        "title": "2 Overview of Bluetooth Wireless Technology",
        "content": [
          {
            "text": "Bluetooth is an open standard for short-range radio frequency (RF) communication. Bluetooth is used primarily to establish wireless personal area networks (WPANs). Bluetooth has been integrated into many types of business and consumer devices, including cell phones, laptops, automobiles, printers, keyboards, mice, headsets, and, more recently, medical devices and personal devices (such as smart watches, music speakers, home appliances, fitness monitors, and trackers). This allows users to form ad hoc networks between a wide variety of devices to transfer voice and data. Bluetooth is a low-cost, low-power technology that provides a mechanism for creating small wireless networks on an ad hoc basis, known as piconets. A piconet is composed of two or more Bluetooth devices in close physical proximity that operate on the same channel using the same frequency hopping sequence. An example of a piconet is a connection between a cell phone and a headset using Bluetooth wireless technology. Bluetooth piconets are often established on a temporary and changing basis, which offers communications flexibility and scalability between mobile devices."
          },
          {
            "text": "Some key benefits of Bluetooth are:"
          },
          {
            "text": "Cable replacement. Bluetooth replaces a variety of cables, such as those traditionally used for peripheral devices (e.g., mouse and keyboard connections), printers, and wired headsets and earbuds that interface with desktops, laptops, cell phones, etc.\nEase of file sharing. A Bluetooth-enabled device can form a piconet to support file sharing capabilities with other Bluetooth devices, such as laptops.\n\nWireless synchronization. Bluetooth can provide automatic synchronization between Bluetooth-enabled devices. For example, Bluetooth allows synchronization of contact information between smartphones and automobiles.# CURRENT_PAGE_RAW_OCR_TEXT\n\n\nInternet connectivity. A Bluetooth device with Internet connectivity can share that access with other Bluetooth devices. For example, a laptop can use a Bluetooth connection to leverage the personal hotspot capability of a smartphone to provide Internet access to the laptop."
          },
          {
            "text": "Wireless synchronization. Bluetooth can provide automatic synchronization between Bluetooth-enabled devices. For example, Bluetooth allows synchronization of contact information between smartphones and automobiles.# CURRENT_PAGE_RAW_OCR_TEXT"
          },
          {
            "text": "Internet connectivity. A Bluetooth device with Internet connectivity can share that access with other Bluetooth devices. For example, a laptop can use a Bluetooth connection to leverage the personal hotspot capability of a smartphone to provide Internet access to the laptop."
          },
          {
            "text": "Bluetooth was originally conceived by Ericsson in 1994. Ericsson, IBM, Intel, Nokia, and Toshiba formed the Bluetooth Special Interest Group (SIG), a not-for-profit trade association developed to drive development of Bluetooth products and serve as the governing body for Bluetooth specifications. Bluetooth is standardized within the IEEE 802.15 Working Group for Wireless Personal Area Networks that formed in 1999 as IEEE 802.15.1-2002."
          },
          {
            "text": "This section provides an overview of Bluetooth, including frequency and data rates, range, and architecture."
          }
        ]
      },
      {
        "title": "2.1 Bluetooth Wireless Technology Characteristics",
        "content": [
          {
            "text": "Bluetooth operates in the unlicensed 2.4000 gigahertz (GHz) to 2.4835 GHz Industrial, Scientific, and Medical (ISM) frequency band. Numerous technologies operate in this band, including the IEEE 802.11b/g/n wireless local area network (WLAN) standard, making it somewhat crowded from the standpoint of the volume of wireless transmissions. Bluetooth employs frequency hopping spread spectrum (FHSS) technology for transmissions. FHSS reduces interference and transmission errors but provides minimal transmission security."
          },
          {
            "text": "With FHSS technology, communications between Bluetooth Basic Rate (BR)/EDR devices use 79 different 1 megahertz (MHz) radio channels by hopping (i.e., changing) frequencies about 1600 times per second for data/voice links and 3200 times per second during page and inquiry scanning. A channel is used for a very short period (e.g., 625 \u00b5s for data/voice links), followed by a hop to another channel designated by a pre-determined pseudo-random sequence; this process is repeated continuously in the frequency hopping sequence."
          },
          {
            "text": "Bluetooth low energy communication uses the same frequency range as BR/EDR devices but splits it instead into 40 channels of 2 MHz width. Three of these channels are used for advertising (broadcasting data and for connection setup) and the other 37 are data channels. These 40 channels, combined with a time division multiple access (TDMA) scheme, provide the two multiple access schemes for the low energy feature of Bluetooth. A polling scheme is used in which the first device sends a packet at a predetermined time and a corresponding device responds after a predetermined interval. These exchanges of data are known as either Advertising or Connection Events."
          },
          {
            "text": "Bluetooth also provides for radio link power control, which allows devices to negotiate and adjust their radio power according to signal strength measurements. Each device in a Bluetooth network can determine its received signal strength indication (RSSI) and request that the other network device adjust its relative radio power level (i.e., incrementally increase or decrease the transmission power).# CURRENT_PAGE_RAW_OCR_TEXT"
          },
          {
            "text": "This is performed to conserve power and/or to keep the received signal characteristics within a preferred range."
          },
          {
            "text": "The combination of a frequency hopping scheme and radio link power control provides Bluetooth with some additional, albeit limited, protection from eavesdropping and malicious access. The frequency-hopping scheme, primarily a technique to avoid interference, makes it slightly more difficult for an adversary to locate and capture Bluetooth transmissions than to capture transmissions from fixed-frequency technologies, like those used in IEEE 802.11b/g. Research has shown that the Bluetooth frequency hopping sequence for an active piconet can be determined using relatively inexpensive hardware and free open source software."
          },
          {
            "text": "The range of Bluetooth BR/EDR devices is characterized by three classes that define power management. Table 2-1 summarizes the classes, including their power levels in milliwatts (mW) and decibels referenced to one milliwatt (dBm), and their operating ranges in meters (m). Most small, battery-powered devices are Class 2, while Class 1 devices are typically universal serial bus (USB) adapters for desktops and laptops, as well as access points and other mains powered devices. Many Bluetooth low energy devices are designed to run on very small batteries for a long period of time."
          },
          {
            "text": "To allow Bluetooth devices to find and establish communication with each other, discoverable and connectable modes are specified. A device in discoverable mode periodically monitors an inquiry scan physical channel (based on a specific set of frequencies) and responds to an inquiry on that channel with its device address, local clock (counter) value, and other characteristics needed to page and subsequently connect to it. A device in connectable mode periodically monitors its page scan physical channel and responds to a page on that channel to initiate a network connection. The frequencies associated with the page scan physical channel for a device are based on its Bluetooth address. Therefore, knowing a device's address and local clock is important for paging and subsequently connecting to the device."
          },
          {
            "text": "The following sections cover Bluetooth BR/EDR/HS data rates, low energy technology, and dual mode devices."
          }
        ]
      }
    ]
  },
  {
    "title": "CURRENT_PAGE_RAW_OCR_TEXT",
    "subsections": [
      {
        "content": "approximately 720 kilobits per second (kbps). Introduced in Bluetooth version 2.0, EDR specifies data rates up to 3 Mbps and throughput of approximately 2.1 Mbps. BR uses Gaussian Frequency-Shift Keying (GFSK) modulation to achieve a 1 Mbps data rate. EDR uses pi/4 rotated Differential Quaternary Phase Shift Keying (DQPSK) modulation to achieve a 2 Mbps data rate, and 8 Phase Differential Phase Shift Keying (8DPSK) to achieve a 3 Mbps data rate. Note that EDR support is not required for devices compliant with the Bluetooth 2.0 specification or later. Therefore, there are devices on the market that are \"Bluetooth 2.0 compliant\" versus \"Bluetooth 2.0 + EDR compliant.\" The former are devices that support required version 2.0 features but only provide the BR data rate."
      },
      {
        "title": "2.1.1.2 High Speed with Alternate MAC/PHY",
        "content": [
          {
            "text": "Introduced in the Bluetooth 3.0 + HS specification, devices can support faster data rates by using Alternate MAC/PHYs (AMP). This is known as Bluetooth high speed technology. In the Bluetooth 3.0 + HS specification, IEEE 802.11-2007 was introduced as the first supported AMP. IEEE 802.11-2007 is a rollup of the amendments IEEE 802.11a through 802.11j. For the 802.11 AMP, IEEE 802.11g PHY support is mandatory, while IEEE 802.11a PHY support is optional. The 802.11 AMP is designed to provide data rates up to 24 Mbps using Orthogonal Frequency-Division Multiplexing (OFDM) modulation. Note that this AMP is IEEE 802.11 compliant but not Wi-Fi compliant. Therefore, Wi-Fi Alliance specification compliance is not required for Bluetooth 3.0 + HS devices."
          }
        ]
      },
      {
        "title": "2.1.2 Low Energy",
        "content": [
          {
            "text": "Bluetooth low energy was introduced in the Bluetooth 4.0 specification and updated in 4.1 and 4.2. Formerly known as \"Wibree\" and \"Ultra Low Power Bluetooth,\" low energy is primarily designed to bring Bluetooth to coin cell battery-powered devices such as medical devices and other sensors. The key technology goals of Bluetooth low energy (compared with Bluetooth BR/EDR) include lower power consumption, reduced memory requirements, efficient discovery and connection procedures, short packet lengths, and simple protocols and services. Table 2-2 provides the key technical differences between BR/EDR and low energy."
          }
        ]
      },
      {
        "title": "2.1.3 Dual Mode Devices (Concurrent Low Energy & BR/EDR/HS Support)",
        "content": [
          {
            "text": "A Bluetooth 4.0 or later device may support both BR/EDR/HS and low energy as a \"dual mode\" Bluetooth device. An example is a cell phone that uses an EDR link to a Bluetooth headset and a concurrent low energy link to a sensor that unlocks and starts the user's automobile. Figure 2-1 shows the device architecture for Bluetooth 4.x devices, and includes BR/EDR, HS, and low energy technologies. New terms included in the figure related to security are discussed in subsequent sections."
          }
        ]
      },
      {
        "title": "2.2 Bluetooth Architecture",
        "content": [
          {
            "text": "Bluetooth permits devices to establish ad hoc networks. Ad hoc networks allow easy connection establishment between devices in the same physical area (e.g., the same room) without the use of any infrastructure devices. A Bluetooth client is simply a device with a Bluetooth\n```# Radio and Software"
          },
          {
            "text": "Incorporating the Bluetooth protocol stack and interfaces. The Bluetooth specification provides separation of duties for performing stack functions between a host and a controller. The host is responsible for the higher layer protocols, such as Logical Link Control and Adaptation Protocol (L2CAP) and Service Discovery Protocol (SDP). The host functions are performed by a computing device like a laptop or smartphone. The controller is responsible for the lower layers, including the Radio, Baseband, and Link Control/Management. The controller functions are performed by an integrated or external (e.g., USB) Bluetooth adapter."
          },
          {
            "text": "The host and controller send information to each other using standardized communications over the Host Controller Interface (HCI). This standardized HCI allows hosts and controllers from different product vendors to interoperate. In some cases, the host and controller functions are integrated into a single device; Bluetooth headsets are a prime example."
          }
        ]
      },
      {
        "title": "Bluetooth Network Topology",
        "content": [
          {
            "text": "Figure 2-2 depicts the basic Bluetooth network topology. In a piconet one device serves as the master, with all other devices in the piconet acting as slaves. BR/EDR piconets can scale to include up to 7 active slave devices and up to 255 inactive slave devices. Bluetooth low energy (see Section 2.1.2) allows an unlimited number of slaves, which is known as the low energy Peripheral role, with the master being the low energy Central role. The other two low energy device roles, Broadcaster and Observer, are discussed below in this section."
          },
          {
            "text": "The master device controls and establishes the network, including defining the network's frequency hopping scheme. Although only one device can serve as the master for each piconet, time division multiplexing (TDM) allows a slave in one piconet to act as the master for another piconet simultaneously, thus creating a chain of networks. This chain, called a scatternet, allows networking of several devices over an extended distance in a dynamic topology that can change during any given session. As a device moves toward or away from the master device the topology may change, along with the relationships of the devices in the immediate network. Figure 2-3 depicts a scatternet that involves three piconets."
          },
          {
            "text": "The Bluetooth core protocols provide no multi-hop network routing capabilities for devices involved in scatternets. For example, in Figure 2-3, User C's phone in Piconet 3 cannot communicate with User B's phones in Piconet 2 without establishing an additional piconet between them. Scatternets are supported by both BR/EDR and low energy technologies."
          },
          {
            "text": "Low energy functionality also supports a connectionless broadcast architecture where Broadcasters (low energy device role) periodically send data, and Observers (low energy device role) listen and consume that data. This allows a device to transmit data to more than one peer at a time. The broadcasting function is a subset of the Advertising capability used in the low energy connection architecture."
          }
        ]
      },
      {
        "title": "Bluetooth Security Features",
        "content": [
          {
            "text": "This section provides an overview of the security mechanisms included in the...# Bluetooth Security Specifications"
          },
          {
            "text": "Bluetooth specifications to illustrate their limitations and provide a foundation for the security recommendations in Section 4. A high-level example of the scope of the security for the Bluetooth radio path is depicted in Figure 3-1. In this example, Bluetooth security is provided between the phone and the laptop, while IEEE 802.11 security protects the WLAN link between the laptop and the IEEE 802.11 access point (AP). Communications on the wired network are not protected by Bluetooth or IEEE 802.11 security capabilities. Therefore, end-to-end security is not possible without using higher-layer security solutions atop the security features included in Bluetooth and IEEE 802.11."
          }
        ]
      },
      {
        "title": "Basic Security Services",
        "content": [
          {
            "text": "Five basic security services are specified in the Bluetooth standard:"
          },
          {
            "text": "Authentication: verifying the identity of communicating devices based on their Bluetooth address. Bluetooth does not provide native user authentication.\nConfidentiality: preventing information compromise caused by eavesdropping by ensuring that only authorized devices can access and view transmitted data.\nAuthorization: allowing the control of resources by ensuring that a device is authorized to use a service before permitting it to do so.\nMessage Integrity: verifying that a message sent between two Bluetooth devices has not been altered in transit.\nPairing/Bonding: creating one or more shared secret keys and the storing of these keys for use in subsequent connections in order to form a trusted device pair."
          },
          {
            "text": "The security services offered by Bluetooth and details about the modes of security are described below. Bluetooth does not address other security services such as audit and non-repudiation; if such services are needed, they should be provided through additional means."
          }
        ]
      },
      {
        "title": "3.1 Security Features of Bluetooth BR/EDR/HS",
        "content": [
          {
            "text": "Bluetooth BR/EDR/HS defines authentication and encryption security procedures that can be enforced during different stages of communication setup between peer devices. Link-level enforced refers to authentication and encryption setup procedures which occur before the Bluetooth physical link is completely established. Service-level enforced refers to authentication and encryption setup procedures which occur after the Bluetooth physical link has already been fully established and logical channels partially established."
          },
          {
            "text": "Until Bluetooth 2.0, three modes were defined which specified whether authentication and encryption would be link-level enforced or service-level enforced and that enforcement was configurable. In Bluetooth 2.1, a fourth mode was added which redefined the user experience during pairing, and required that if both devices are Bluetooth 2.1 or later, they are required to use the fourth mode. Cumulatively, the family of Bluetooth BR/EDR/HS specifications defines four security modes. Each Bluetooth device must operate in one of these modes, called Security Modes 1 through 4. These modes dictate when a Bluetooth device initiates security, not whether it supports security features. Security Mode 1 devices are considered non-secure. Security functionality (authentication and...# Bluetooth Security Modes"
          }
        ]
      },
      {
        "title": "Security Mode 1",
        "content": [
          {
            "text": "Security Mode 1 is never initiated, leaving the device and connections susceptible to attackers. In effect, Bluetooth devices in this mode are \"indiscriminate\" and do not employ any mechanisms to prevent other Bluetooth-enabled devices from establishing connections. However, if a remote device initiates security\u2014such as a pairing, authentication, or encryption request\u2014a Security Mode 1 device will participate. Per their respective Bluetooth specification versions, all 2.0 and earlier devices can support Security Mode 1, and 2.1 and later devices can use Security Mode 1 for backward compatibility with older devices. However, NIST recommends never using Security Mode 1."
          }
        ]
      },
      {
        "title": "Security Mode 2",
        "content": [
          {
            "text": "In Security Mode 2, a service level-enforced security mode, security procedures may be initiated after link establishment but before logical channel establishment. For this security mode, a local security manager (as specified in the Bluetooth architecture) controls access to specific services. The centralized security manager maintains policies for access control and interfaces with other protocols and device users. Varying security policies and trust levels to restrict access can be defined for applications with different security requirements operating in parallel. It is possible to grant access to some services without providing access to other services. In this mode, the notion of authorization\u2014the process of deciding whether a specific device is allowed to have access to a specific service\u2014is introduced. Typically, Bluetooth service discovery can be performed prior to any security challenges (i.e., authentication, encryption, and/or authorization). However, all other Bluetooth services should require all of those security mechanisms."
          },
          {
            "text": "It is important to note that the authentication and encryption mechanisms used for Security Mode 2 are implemented in the controller, as with Security Mode 3 described below. All 2.0 and earlier devices can support Security Mode 2, but 2.1 and later devices can only support it for backward compatibility with 2.0 or earlier devices."
          }
        ]
      },
      {
        "title": "Security Mode 3",
        "content": [
          {
            "text": "Security Mode 3 is the link level-enforced security mode, in which a Bluetooth device initiates security procedures before the physical link is fully established. Bluetooth devices operating in Security Mode 3 mandate authentication and encryption for all connections to and from the device. Therefore, even service discovery cannot be performed until after authentication, encryption, and authorization have been performed. Once a device has been authenticated, service-level authorization is not typically performed by a Security Mode 3 device. However, NIST recommends that service-level authorization should be performed to prevent \"authentication abuse\"\u2014that is, an authenticated remote device using a Bluetooth service without the local device owner's knowledge."
          },
          {
            "text": "All 2.0 and earlier devices can support Security Mode 3, but 2.1 and later devices can only support it for backward compatibility purposes."
          }
        ]
      },
      {
        "title": "Security Mode 4",
        "content": [
          {
            "text": "Similar to Security Mode 2, Security Mode 4 (introduced in Bluetooth 2.1 + EDR) is a service-level-enforced security mode in which security procedures are initiated after physical and logical link setup. Security Mode 4 uses Secure Simple Pairing (SSP), in which ECDH key...# Bluetooth Security Overview"
          }
        ]
      },
      {
        "title": "Link Key Generation",
        "content": [
          {
            "text": "Agreement is utilized for link key generation (see Section 3.1.1). Until Bluetooth 4.0, the P-192 Elliptic Curve was used for the link key generation, and the device authentication and encryption algorithms were identical to the algorithms in Bluetooth 2.0 + EDR and earlier versions. Bluetooth 4.1 introduced the Secure Connections feature, which allowed the use of the P-256 Elliptic Curve for link key generation. In Bluetooth 4.1 the device authentication algorithm was upgraded to the FIPS-approved Hash Message Authentication Code Secure Hash Algorithm 256-bit (HMAC-SHA-256). The encryption algorithm was upgraded to the FIPS-approved AES-Counter with CBC-MAC (AES-CCM), which also provides message integrity."
          }
        ]
      },
      {
        "title": "Security Requirements",
        "content": [
          {
            "text": "Security requirements for services protected by Security Mode 4 must be classified as one of the following:"
          },
          {
            "text": "Level 4: Authenticated link key using Secure Connections required\nLevel 3: Authenticated link key required\nLevel 2: Unauthenticated link key required\nLevel 1: No security required\nLevel 0: No security required. (Only allowed for SDP)"
          },
          {
            "text": "Whether or not a link key is authenticated depends on the SSP association model used (see Section 3.1.1.2). When both the local and remote device support the Secure Connections feature, the link key is said to be generated using Secure Connections, which is the NIST recommended security. Security Mode 4 requires encryption for all services (except Service Discovery) and is mandatory for communication between 2.1 and later BR/EDR devices. However, for backward compatibility, a Security Mode 4 device can fall back to any of the other three security modes when communicating with Bluetooth 2.0 and earlier devices that do not support Security Mode 4. In this case, NIST recommends using Security Mode 3."
          }
        ]
      },
      {
        "title": "Secure Connections Only Mode",
        "content": [
          {
            "text": "A device can be in Secure Connections Only Mode when all services (except Service Discovery) require an Authenticated link key using Secure Connections. In this mode, the device will refuse service level connections from devices that do not support the Secure Connections feature. As a result, backwards compatibility with older devices will not be maintained. If a device must operate using only FIPS-approved algorithms, except for Service Discovery, then it should enter Secure Connections Only Mode."
          }
        ]
      },
      {
        "title": "Security Mode Summary",
        "content": [
          {
            "text": "Table 3-3 summarizes the most secure Mode which can be achieved, depending on the Bluetooth version of the two peers, assuming that the 4.1 and later devices support the BR/EDR Secure Connections Feature."
          },
          {
            "text": "Table 3-4 summarizes the most secure Level which can be achieved in Mode 4, depending on the Bluetooth version of the two peers."
          }
        ]
      },
      {
        "title": "Detailed Discussion",
        "content": [
          {
            "text": "The remainder of this section discusses specific Bluetooth security components in more detail\u2014pairing and link key generation, authentication, confidentiality, and other Bluetooth security features."
          },
          {
            "subsection": "3.1.1 Pairing and Link Key Generation",
            "text": []
          },
          {
            "text": "Essential to the authentication and encryption mechanisms provided by Bluetooth is the generation of...# Bluetooth Security and Pairing"
          },
          {
            "text": "A secret symmetric key. In Bluetooth BR/EDR this key is called the Link Key and in Bluetooth low energy this key is called the Long Term Key. In legacy low energy pairing, a Short Term Key is generated, which is used to distribute the Slave and/or Master Long Term Key, while in low energy Secure Connections, the Long Term Key is generated by each device and not distributed. As mentioned in Section 3.1, Bluetooth BR/EDR performs pairing (i.e., link key generation) in one of two ways. Security Modes 2 and 3 initiate link key establishment via a method called Personal Identification Number (PIN) Pairing (i.e., Legacy or Classic Pairing), while Security Mode 4 uses SSP. Both methods are described in Sections 3.1.1.1 and 3.1.1.2 below."
          },
          {
            "text": "In Bluetooth version 4.0 and 4.1, pairing is performed using authenticated or unauthenticated procedures. In Bluetooth 4.2, Secure Connections can be used during pairing to authenticate devices. These methods (also known as security modes and levels) are described in Section 3.2.2 below."
          }
        ]
      },
      {
        "title": "3.1.1.1 PIN/Legacy Pairing",
        "content": [
          {
            "text": "For PIN/legacy pairing, two Bluetooth devices simultaneously derive link keys when the user(s) enter an identical secret PIN into one or both devices, depending on the configuration and device type. The PIN entry and key derivation are depicted conceptually in Figure 3-2. Note that if the PIN is less than 16 bytes, the initiating device's address (BD_ADDR) supplements the PIN value to generate the initialization key. The Ex boxes represent encryption algorithms that are used during the Bluetooth link key derivation processes. More details on the Bluetooth authentication and encryption procedures are outlined in Sections 3.1.2 and 3.1.3, respectively."
          },
          {
            "text": "After link key generation is complete, the devices complete pairing by mutually authenticating each other to verify they have the same link key. The PIN code used in Bluetooth pairing can vary between 1 and 16 bytes of binary or, more commonly, alphanumeric characters. The typical four-digit PIN may be sufficient for low-risk situations; a longer PIN (e.g., 8-character alphanumeric) should be used for devices that require a higher level of security."
          }
        ]
      }
    ]
  },
  {
    "title": "Bluetooth Pairing Methods",
    "subsections": [
      {
        "content": "provides a \"yes\" response on each device if the numbers match. Otherwise, the user responds \"no\" and pairing fails. A key difference between this operation and the use of PINs in legacy pairing is that the displayed number is not used as input for link key generation. Therefore, an eavesdropper who is able to view (or otherwise capture) the displayed value could not use it to determine the resulting link or encryption key."
      },
      {
        "title": "Passkey Entry",
        "content": [
          {
            "text": "Passkey Entry was designed for the situation where one Bluetooth device has input capability (e.g., keyboard), while the other device has a display but no input capability. In this model, the device with only a display shows a six-digit number that the user then enters on the device with input capability. As with the Numeric Comparison model, the six-digit number used in this transaction is not incorporated into link key generation and is of no use to an eavesdropper."
          }
        ]
      },
      {
        "title": "Just Works",
        "content": [
          {
            "text": "Just Works was designed for the situation where at least one of the pairing devices has neither a display nor a keyboard for entering digits (e.g., headset). It performs Authentication Stage 1 (see Figure 3-3) in the same manner as the Numeric Comparison model, except that a display is not available. The user is required to accept a connection without verifying the calculated value on both devices, so Just Works provides no MITM protection."
          }
        ]
      },
      {
        "title": "Out of Band (OOB)",
        "content": [
          {
            "text": "Out of Band (OOB) was designed for devices that support a common additional wireless (e.g., Near Field Communication (NFC)) or wired technology for the purposes of device discovery and cryptographic value exchange. In the case of NFC, the OOB model allows devices to pair by simply \"tapping\" one device against the other, followed by the user accepting the pairing via a single button push. It is important to note that to keep the pairing process as secure as possible, the OOB technology should be designed and configured to mitigate eavesdropping and MITM attacks."
          }
        ]
      },
      {
        "title": "Security Mode 4",
        "content": [
          {
            "text": "Security Mode 4 requires Bluetooth services to mandate an authenticated link key using Secure Connections (Level 4), an authenticated link key (Level 3), an unauthenticated link key (Level 2), or no security at all (Level 1). Of the association models described above, all but the Just Works model provide authenticated link keys."
          }
        ]
      },
      {
        "title": "Link Key Establishment",
        "content": [
          {
            "text": "Figure 3-3 shows how the link key is established for SSP. Note how this technique uses ECDH public/private key pairs rather than generating a symmetric key via a PIN. Each device generates its own ECDH public-private key pair. When both devices support Secure Connections, P-256 elliptic curves are used, else P-192 curves are used. Each device sends the public key to the other device. The devices then perform stage 1 authentication which is dependent on the association model, as described above. After this, the first device computes a confirmation value E1 and sends it to the second device which checks the value. If this succeeds, the second device does the...\n```# CURRENT_PAGE_RAW_OCR_TEXT"
          },
          {
            "text": "same and sends its confirmation value E2 to the first device. Assuming the E2 confirmation value checks out correctly, both devices compute the Link Key."
          }
        ]
      },
      {
        "title": "3.1.1.3 AMP Link Key Derivation from Bluetooth Link Key",
        "content": [
          {
            "text": "For AMP link security (e.g., IEEE 802.11, as introduced in Bluetooth 3.0), an AMP link key is derived from the Bluetooth link key. A Generic AMP Link Key (GAMP_LK) is generated by the AMP Manager in the host stack whenever a Bluetooth link key is created or changed. As shown in Figure 3-4, the GAMP_LK is generated using the Bluetooth link key (concatenated with itself) and an extended ASCII key identifier (keyID) of \"gamp\" as inputs to an HMAC-SHA-256 function. Subsequently, a Dedicated AMP Link Key (for a specific AMP and Trusted Device combination) is derived from the Generic AMP Link Key and keyID. For the 802.11 AMP Link Key, the keyID is \"802b\". For IEEE 802.11 AMPs, the Dedicated AMP Link Key is used as the 802.11 Pairwise Master Key."
          }
        ]
      },
      {
        "title": "3.1.2 Authentication",
        "content": [
          {
            "text": "The Bluetooth device authentication procedure is in the form of a challenge-response scheme. Each device interacting in an authentication procedure can take the role of either the claimant or the verifier or both. The claimant is the device attempting to prove its identity, and the verifier is the device validating the identity of the claimant. The challenge-response protocol validates devices by verifying the knowledge of a secret key\u2014the Bluetooth link key."
          },
          {
            "text": "The authentication procedure is of two types: Legacy Authentication (Section 3.1.2.1) and Secure Authentication (Section 3.1.2.2). Legacy Authentication is performed when at least one device does not support Secure Connections. If both devices support Secure Connections, Secure Authentication is performed."
          },
          {
            "text": "If authentication fails, a Bluetooth device waits an interval of time before making a new attempt. This time interval increases exponentially to prevent an adversary from attempting to gain access by defeating the authentication scheme through trial-and-error with different link keys. It is important to note that this technique does not provide security against offline attacks to determine the link key using eavesdropped pairing frames and exhaustively guessing PINs."
          },
          {
            "text": "Note that the security associated with authentication is solely based on the secrecy of the link key. While the Bluetooth device addresses and random challenge value are considered public parameters, the link key is not. The link key is derived during pairing and should never be disclosed outside the Bluetooth device or transmitted over wireless links. However, the link key is passed in the clear from the host to the controller (e.g., PC to USB adapter) and the reverse when the host is used for key storage. The challenge value, which is a public parameter associated with the authentication process, must be random and unique for every transaction. The challenge value is derived from a pseudorandom generator within the Bluetooth controller."
          },
          {
            "subsection": "3.1.2.1 Legacy Authentication",
            "text": []
          },
          {
            "text": "This procedure is used when the link key has been generated using PIN/Legacy Pairing or Secure.# Simple Pairing using the P-192 Elliptic Curve"
          },
          {
            "text": "Each device interacting in an authentication procedure is referred to as either the claimant or the verifier. Figure 3-5 conceptually depicts the Legacy Authentication scheme."
          }
        ]
      },
      {
        "title": "Steps in the Authentication Process",
        "content": [
          {
            "text": "The steps in the authentication process are as follows:"
          },
          {
            "text": "Step 1. The verifier transmits a 128-bit random challenge (AU_RAND) to the claimant.\nStep 2. The claimant uses the E1 algorithm to compute an authentication response using his or her unique 48-bit Bluetooth device address (BD_ADDR), the link key, and AU_RAND as inputs. The verifier performs the same computation. Only the 32 most significant bits of the E1 output are used for authentication purposes. The remaining 96 bits of the 128-bit output are known as the ACO value, which will be used later as input to create the Bluetooth encryption key.\nStep 3. The claimant returns the most significant 32 bits of the E1 output as the computed response, the Signed Response (SRES), to the verifier.\nStep 4. The verifier compares the SRES from the claimant with the value that it computed.\nStep 5. If the two 32-bit values are equal, the authentication is considered successful. If the two 32-bit values are not equal, the authentication fails."
          },
          {
            "text": "Performing these steps once accomplishes one-way authentication. The Bluetooth standard allows both one-way and mutual authentication to be performed. For mutual authentication, the above process is repeated with the verifier and claimant switching roles."
          }
        ]
      },
      {
        "title": "3.1.2.2 Secure Authentication",
        "content": [
          {
            "text": "This procedure is used when the link key has been generated using Secure Simple Pairing with the P-256 Elliptic Curve. Each device interacting in an authentication procedure acts as both the claimant and the verifier. Figure 3-6 conceptually depicts the Secure Authentication scheme."
          },
          {
            "text": "When the master initiates this authentication process, the steps are as follows:"
          },
          {
            "text": "Step 1. The master transmits a 128-bit random challenge (RAND_M) to the slave.\nStep 2. The slave transmits a 128-bit random challenge (RAND_S) to the master.\nStep 3. Both the master and slave use the h4 and h5 algorithms to compute their authentication responses using the unique 48-bit Bluetooth device address of the master (ADDR_M), the unique 48-bit Bluetooth device address of the slave (ADDR_S), the link key, the RAND_M, and the RAND_S as inputs. Only the 32 most significant bits of the h5 output are used for authentication purposes. The remaining 96 bits of the 128-bit output are known as the Authenticated Ciphering Offset (ACO) value, which will be used later as input to create the Bluetooth encryption key.\nStep 4. The slave returns the most significant 32 bits of the h5 output as the computed response, the Signed Response (SRES_slave), to the master.\nStep 5. The master returns the most significant 32 bits of the h5 output as the computed response, the Signed Response (SRES_master), to the slave.\nStep 6. The master and slave compare the SRES from each other with the value that they computed.\nStep 7. If the two 32-bit values are equal on both the master and slave, the authentication is considered successful.# Authentication"
          },
          {
            "text": "Authentication is considered successful. If the two 32-bit values are not equal on either the master or the slave, the authentication fails. When the slave initiates the authentication process, the steps followed are identical to the steps above except that the order of Step 1 and Step 2 is swapped. Note that Secure Authentication is always mutual in nature irrespective of whether the master or slave initiates it."
          }
        ]
      },
      {
        "title": "3.1.3 Confidentiality",
        "content": [
          {
            "text": "In addition to the Security Modes for pairing and authentication, Bluetooth provides a separate confidentiality service to thwart attempts to eavesdrop on the payloads of the packets exchanged between Bluetooth devices. Bluetooth has three Encryption Modes, but only two of them actually provide confidentiality. The modes are as follows:"
          },
          {
            "text": "Encryption Mode 1: No encryption is performed on any traffic.\nEncryption Mode 2: Individually addressed traffic is encrypted using encryption keys based on individual link keys; broadcast traffic is not encrypted.\nEncryption Mode 3: All traffic is encrypted using an encryption key based on the master link key."
          },
          {
            "text": "The encryption mechanism used in Encryption Modes 2 and 3 can be based on either the E0 stream cipher (Section 3.1.3.1) or AES-CCM (Section 3.1.3.2). The encryption key (KC) derived using either mechanism may vary in length in single byte increments from 1 byte to 16 bytes in length, as set during a negotiation process that occurs between the master and slave devices. During this negotiation, a master device makes a key size suggestion for the slave. The initial key size suggested by the master is programmed into the controller by the manufacturer and is not always 16 bytes. In product implementations, a \"minimum acceptable\" key size parameter can be set to prevent a malicious user from driving the key size down to the minimum of 1 byte, which would make the link less secure. Security Mode 4 introduced in Bluetooth 2.1 + EDR requires that encryption be used for all data traffic, except for service discovery."
          },
          {
            "subsection": "3.1.3.1 E0 Encryption Algorithm",
            "text": []
          },
          {
            "text": "As shown in Figure 3-7, the encryption key provided to the encryption algorithm is produced using an internal key generator (KG). The KG produces stream cipher keys based on the 128-bit link key, which is a secret that is held in the Bluetooth devices; a 128-bit random number (EN_RAND); and the 96-bit ACO value. The ACO is produced during the authentication procedure, as shown in Figure 3-5. The COF is the 96-bit Ciphering Offset Number and is a concatenation of the Master and Slave BD_ADDR for Master Link Keys, and is the ACO for other Link Keys."
          },
          {
            "text": "The Bluetooth E0 encryption procedure is based on a stream cipher, E0. A key stream output is exclusive-OR-ed with the payload bits and sent to the receiving device. This key stream is produced using a cryptographic algorithm based on linear feedback shift registers (LFSRs). The encryption function takes the following as inputs: the master device address (BD_ADDR), the 128-bit random number.# CURRENT_PAGE_RAW_OCR_TEXT"
          }
        ]
      },
      {
        "title": "Encryption Key Initialization",
        "content": [
          {
            "text": "number (EN_RAND), a slot number based on the piconet clock, and an encryption key, which when combined initialize the LFSRs before the transmission of each packet, if encryption is enabled. The slot number used in the stream cipher changes with each packet; the ciphering engine is also reinitialized with each packet while the other variables remain static."
          },
          {
            "text": "It is important to note that E0 is not a FIPS-approved algorithm and has come under scrutiny in terms of algorithmic strength. A published theoretical known-plaintext attack can recover the encryption key in 2^38 computations, compared with a brute force attack, which would require testing 2^128 possible keys. If communications require FIPS-approved cryptographic protection (e.g., to protect sensitive information transmitted by Federal agencies), this protection can be achieved by layering application-level FIPS-approved encryption over the native Bluetooth encryption."
          }
        ]
      },
      {
        "title": "3.1.3.2 AES-CCM Encryption Algorithm",
        "content": [
          {
            "text": "As shown in Figure 3-8, the encryption key provided to the encryption algorithm is produced using the h3 function. The h3 function produces stream cipher keys based on the 128-bit link key, which is a secret that is held in the Bluetooth devices; the unique 48-bit Bluetooth device address of the master; the unique 48-bit Bluetooth device address of the slave; a fixed key ID \"btak\"; and the 96-bit ACO value. The ACO is produced during the authentication procedure, as shown in Figure 3-6. The encryption key is shortened by taking the 128 most significant bits of the original encryption key."
          },
          {
            "text": "The Bluetooth AES-CCM encryption procedure is based on Request for Comment (RFC) 3610, Advanced Encryption Standard - Counter with Cipher Block Chaining-Message Authentication Code. The AES-CCM encryption function takes the following as inputs: the encryption key, the encryption nonce, and the payload bits. The nonce format is of two types: the payload counter format which is used for Asynchronous Connection-Less (ACL) packets, and the clock format (which also includes an 11-bit day counter) which is used for enhanced Synchronous Connection Oriented (eSCO) packets. When AES-CCM encryption is enabled, ACL packets include a 4-octet Message Integrity Check (MIC). eSCO packets do not include a MIC."
          }
        ]
      },
      {
        "title": "3.1.4 Trust Levels, Service Security Levels, and Authorization",
        "content": [
          {
            "text": "In addition to the four security modes, Bluetooth allows different levels of trust and service security. The two Bluetooth levels of trust are trusted and untrusted. A trusted device has a fixed relationship with another device and has full access to all services. An untrusted device does not have an established relationship with another Bluetooth device, which results in the untrusted device receiving restricted access to services."
          },
          {
            "text": "Available service security levels depend on the security mode being used. For Security Modes 1 and 3, no service security levels are specified. For Security Mode 2, the following security requirements can be enforced:"
          },
          {
            "text": "Authentication required\nEncryption required\nAuthorization required# CURRENT_PAGE_RAW_OCR_TEXT"
          },
          {
            "text": "Thus, the available service security levels include any combination of the above, including the lack of security (typically only used for service discovery). Note that BR/EDR encryption cannot be performed without authentication, because the encryption key is derived from an artifact of the authentication process (see Section 3.1.3)."
          }
        ]
      },
      {
        "title": "Security Mode 4",
        "content": [
          {
            "text": "For Security Mode 4, the Bluetooth specification defines five levels of security for Bluetooth services for use during SSP. The service security levels are as follows:"
          },
          {
            "text": "Service Level 4\nRequires MITM protection and encryption using 128-bit equivalent strength for link and encryption keys; user interaction is acceptable.\n\n\nService Level 3\nRequires MITM protection and encryption; user interaction is acceptable.\n\n\nService Level 2\nRequires encryption only; MITM protection is not necessary.\n\n\nService Level 1\nMITM protection and encryption not required. Minimal user interaction.\n\n\nService Level 0\nNo MITM protection, encryption, or user interaction required."
          },
          {
            "text": "Service Level 4\nRequires MITM protection and encryption using 128-bit equivalent strength for link and encryption keys; user interaction is acceptable."
          },
          {
            "text": "Service Level 3\nRequires MITM protection and encryption; user interaction is acceptable."
          },
          {
            "text": "Service Level 2\nRequires encryption only; MITM protection is not necessary."
          },
          {
            "text": "Service Level 1\nMITM protection and encryption not required. Minimal user interaction."
          },
          {
            "text": "Service Level 0\nNo MITM protection, encryption, or user interaction required."
          },
          {
            "text": "The Bluetooth architecture allows for defining security policies that can set trust relationships in such a way that even trusted devices could gain access only to specific services. Although Bluetooth core protocols can only authenticate devices and not users, user-based authentication is still possible. The Bluetooth security architecture (through the security manager) allows applications to enforce more granular security policies. The link layer at which Bluetooth-specific security controls operate is transparent to the security controls imposed by the application layers. Thus, user-based authentication and fine-grained access control within the Bluetooth security framework are possible through the application layers, although doing so is beyond the scope of the Bluetooth specification."
          }
        ]
      },
      {
        "title": "3.2 Security Features of Bluetooth Low Energy",
        "content": [
          {
            "text": "Because of the intent for Bluetooth low energy to support computationally and storage-constrained devices, and because Bluetooth low energy did not evolve from BR/EDR/HS, low energy security is different from Bluetooth BR/EDR/HS. However, with the Bluetooth 4.1 and 4.2 releases, the differences have been minimized."
          },
          {
            "text": "One remaining difference is that low energy pairing results in the generation of a Long-Term Key (LTK) rather than a Link Key. While fundamentally performing the same secret key function as the Link Key, the LTK is established in a different manner. In low energy Legacy Pairing, the LTK is generated and then distributed using a key transport protocol rather than key agreement as with BR/EDR. That is, one device determines the LTK and securely sends it over to the other device during pairing\u2014 instead of both devices generating the same key individually. In low energy Secure Connections the key is generated at each device as a result of a key agreement and thus does not need to be distributed over the link."
          },
          {
            "text": "Bluetooth specification 4.0 with low energy functionality introduced the use of Advanced Encryption Standard\u2014 Counter with CBC-MAC (AES-CCM) encryption for the first time in a Bluetooth specification. In addition to providing strong, standards-based encryption, the# Inclusion of AES-CCM"
          },
          {
            "text": "Paved the way for native FIPS-140 validation of Bluetooth low energy devices."
          }
        ]
      },
      {
        "title": "4.2",
        "content": [
          {
            "text": "Added the low energy Secure Connections feature which upgraded low energy pairing to utilize FIPS-approved algorithms (AES-CMAC and P-256 elliptic curve). 4.2 also renamed low energy pairing to low energy Legacy Pairing."
          },
          {
            "text": "Also new in 4.2 is the ability to reuse keys generated via Secure Connections on either physical transport (low energy or BR/EDR) to be used on the other physical transport \u2013 alleviating the need for the user to pair on both low energy and BR/EDR. The low energy LTK Key can be derived from the BR/EDR Link Key (using the h6 AES-CMAC-128 function), and the BR/EDR Link Key can likewise be derived from the low energy LTK (using the same h6 function). See Sections 3.2.6 and 3.2.7 for details."
          }
        ]
      },
      {
        "title": "4.0",
        "content": [
          {
            "text": "Also introduced features such as low energy private device addresses and data signing. New cryptographic keys called the Identity Resolving Key (IRK) and Connection Signature Resolving Key (CSRK) support these features, respectively. These features remained unchanged in 4.1 and 4.2."
          },
          {
            "text": "With low energy's privacy feature enabled, the IRK is used to map a Resolvable Private Address (RPA) to an Identity Address. The Identity Address can be either a static random address or a public address. This allows a trusted device to determine another device's Identity Address from a periodically-changing RPA. Previously, a device would be assigned a static \"public\" address that would be made available during discovery. If that device remained discoverable, its location could easily be tracked by an adversary. The use of a periodically-changing random address (a hashed and randomized address created with the IRK) mitigates this threat. Since a discoverable low energy device transmits (\"advertises\") identity information, this privacy feature is especially useful. Even without low energy privacy the device will get assigned an Identity Address (either a public BD_ADDR or static random address). But with low energy Privacy the RPA is transmitted over the air instead of the Identity Address."
          },
          {
            "text": "The CSRK is used to verify cryptographically-signed Attribute Protocol (ATT) data frames from a particular device over unencrypted links. This allows a Bluetooth connection to use data signing (providing integrity and authentication) to protect the connection instead of data encryption (which, in the case of AES-CCM, provides confidentiality, integrity, and authentication). If a link is encrypted, the usage of ATT Signed Write is not allowed."
          },
          {
            "text": "In low energy Legacy Pairing all of these cryptographic keys (i.e., LTK, IRK, CSRK) are generated and securely distributed during low energy pairing. For low energy Secure Connections the LTK is generated while the IRK and CSRK are generated and securely distributed. See Section 3.2.2 for details."
          },
          {
            "subsection": "3.2.1 Low Energy Security Modes and Levels",
            "text": []
          },
          {
            "text": "Low energy security modes are similar to BR/EDR service-level security modes.# CURRENT_PAGE_RAW_OCR_TEXT"
          }
        ]
      },
      {
        "title": "Security Modes",
        "content": [
          {
            "text": "(i.e., Security Modes 2 and 4) in that each service can have its own security requirements. However, Bluetooth low energy also specifies that each service request can have its own security requirements as well. A device enforces the service-related security requirements by following the appropriate security mode and level."
          },
          {
            "text": "Low energy Security Mode 1 has multiple levels associated with encryption. Level 1 specifies no security, meaning no authentication and no encryption will be initiated. Level 2 requires unauthenticated pairing with encryption. Level 3 requires authenticated pairing with encryption. 4.2 added Level 4 which requires authenticated low energy Secure Connections pairing with encryption.\n\n\nLow energy Security Mode 2 has multiple levels associated with data signing. Data signing provides strong data integrity but not confidentiality. Level 1 requires unauthenticated pairing with data signing. Level 2 requires authenticated pairing with data signing."
          },
          {
            "text": "Low energy Security Mode 1 has multiple levels associated with encryption. Level 1 specifies no security, meaning no authentication and no encryption will be initiated. Level 2 requires unauthenticated pairing with encryption. Level 3 requires authenticated pairing with encryption. 4.2 added Level 4 which requires authenticated low energy Secure Connections pairing with encryption."
          },
          {
            "text": "Low energy Security Mode 2 has multiple levels associated with data signing. Data signing provides strong data integrity but not confidentiality. Level 1 requires unauthenticated pairing with data signing. Level 2 requires authenticated pairing with data signing."
          },
          {
            "text": "If a particular service request and the associated service have different security modes and/or levels, the stronger security requirements prevail. For example, if either requires Security Mode 1 Level 3, then the requirements for Security Mode 1 Level 3 are enforced. Because Security Mode 1 Level 4 requires low energy Secure Connections authenticated pairing and encryption, using AES-CMAC and P-256 elliptic curve for pairing and AES-CCM for encryption, NIST considers this the most secure of these modes/levels and strongly recommends its use for all low energy connections in 4.2. For 4.0 and 4.1 low energy connections, NIST strongly recommends using Security Mode 1 Level 3 as it requires authenticated pairing and encryption although not as strong (not using P-256 elliptical curve) encryption as Level 4. Security Mode 1 Level 1 is the least secure and should never be used. Also, because Security Mode 2 does not provide encryption, Security Mode 1 Level 4 and 3 are strongly preferred over Security Mode 2."
          },
          {
            "text": "Low energy 4.2 added a Secure Connections Only Mode which requires that only low energy Security Mode 1 Level 4 may be used for all services except for those that only require Security Mode 1 Level 1. This will ensure that only FIPS-approved algorithms are used on the low energy physical transport. Secure Connections Only Mode is not backwards compatible with 4.0 or 4.1 low energy devices as they do not support P-256 elliptic curve."
          }
        ]
      },
      {
        "title": "Low Energy Pairing Methods",
        "content": [
          {
            "text": "4.2 added the low energy Secure Connection pairing which upgraded low energy pairing to utilize FIPS-approved algorithms (AES-CMAC and P-256 elliptic curve). 4.0 and 4.1 low energy pairing was renamed to low energy Legacy Pairing in 4.2."
          },
          {
            "text": "Although low energy Legacy Pairing uses similar pairing method names to BR/EDR SSP, it does not use ECDH-based cryptography and provides no eavesdropping protection. Therefore, for all pairing methods except OOB with a 128-bit TK, the low energy Legacy Pairing should be considered broken.# Low Energy Pairing and Secure Connections"
          },
          {
            "text": "Because if an attacker can capture the pairing frames, he or she can determine the resulting LTK. For this reason, low energy Secure Connection pairing should be used when eavesdropping protection is required."
          },
          {
            "text": "Low energy Legacy pairing uses key transport rather than key agreement for all keys (LTK, IRK, and CSRK), thus a key distribution step is required during low energy Legacy pairing. In low energy Secure Connection pairing, each device independently generates the LTK, therefore an optional key distribution step allows for the exchange of the IRK and CSRK keys in low energy Secure Connection pairing."
          },
          {
            "text": "As shown in Figure 3-9, low energy Legacy Pairing begins with the two devices agreeing on a Temporary Key (TK) during pairing, whose value depends on the pairing method being used. The devices then exchange random values and generate a Short Term Key (STK) based on these values and the TK. The link is then encrypted using the STK, which allows secure distribution of the LTK, IRK, and CSRK."
          },
          {
            "text": "As shown in Figure 3-10, low energy Secure Connections pairing begins with the two devices sharing their I/O capabilities and security requirements. After that, public keys are shared. Note that low energy Secure Connections pairing only generates the low energy LTK. The Link is encrypted with the LTK which allows secure distribution of the IRK and CSRK."
          },
          {
            "text": "The following subsections describe the low energy pairing association models, both Legacy Pairing and Secure Connections. As with BR/EDR SSP, the association model that is used for a particular connection is based on the input/output capabilities of both devices."
          },
          {
            "text": "4.0 and 4.1 allow three low energy pairing methods: Out of Band, Passkey Entry, and Just Works. 4.2 adds Numeric Comparison as a low energy pairing method which is available only for low energy Secure Connections. It is important to note that while the low energy pairing association model names are similar to those from BR/EDR Simple Secure Pairing models, for low energy Secure Connection, the security provided is functionally equivalent to that of the BR/EDR SSP models, but for low energy Legacy Pairing the security provided is different."
          }
        ]
      },
      {
        "title": "3.2.2.1 Out of Band",
        "content": [
          {
            "text": "If both devices support a common OOB technology, such as NFC or tethering, they will use the OOB method to pair. In low energy Legacy Pairing, the TK is passed over the OOB technology from one device to the other. The TK must be a unique, random, 128-bit number. NIST strongly recommends use of a full 128-bit random binary (non-alphanumeric) value when practical."
          },
          {
            "text": "Because OOB pairing results in an authenticated LTK, it should provide about one-in-a-million protection against MITM attacks based on the premise that an attacker would have to successfully guess the six-digit TK value if low energy Legacy Pairing is used. However, the actual protection provided by OOB pairing depends on the MITM protection provided by the OOB technology itself because a successful OOB eavesdropper would know the TK value instead of having to guess it.# OOB Low Energy Secure Connection Pairing"
          },
          {
            "text": "The device address is passed OOB, which, even if discovered by an OOB eavesdropper, provides no value towards decrypting the encoded data. If the devices do not support a common OOB technology, the pairing method to be used is determined based on the input/output capabilities of both devices."
          }
        ]
      },
      {
        "title": "3.2.2.2 Numeric Comparison",
        "content": [
          {
            "text": "Low energy 4.2 adapted the BR/EDR/HS numeric comparison pairing method to be used by low energy in Secure Connections pairing. There is no numeric comparison method with low energy Legacy Pairing."
          },
          {
            "text": "If both devices are capable of displaying a six-digit number and both are capable of having the user enter \"yes\" or \"no\", then numeric comparison can be used. During pairing, a user is shown a six-digit number on each display and provides a \"yes\" response on each device if the numbers match. Otherwise, the user responds \"no\" and pairing fails. An important difference between this operation and the use of PINs in legacy pairing is that the displayed number is not used as input for link key generation. Therefore, an eavesdropper who is able to view (or otherwise capture) the displayed value could not use it to determine the resulting link or encryption key."
          },
          {
            "text": "Numeric comparison provides MITM protection as well as provides confirmation to the user that they are pairing the intended two devices."
          }
        ]
      },
      {
        "title": "3.2.2.3 Passkey Entry",
        "content": [
          {
            "text": "If, at a minimum, one device supports keyboard input and the other a display output (or keyboard input as well), then the Passkey Entry pairing method is used to pair. In this model for low energy Legacy Pairing, the TK is generated from the passkey generated and/or entered in each device. The specification requires the passkey size to be 6 numeric digits; therefore, a maximum of 20 bits of entropy can be provided."
          },
          {
            "text": "For low energy Secure Connections pairing, after the public keys have been exchanged, the passkey (6 numeric digits) is generated and/or entered into each device. The devices then take turns sending a hash of each bit of the passkey, the nonce, and both public keys (repeated 20 times for each of the 20 bits of the passkey) until the entire passkey has been sent and agreed upon. Passkey Entry pairing also results in an authenticated LTK. Because a six-digit passkey is used, an attacker would have a one-in-a-million chance of guessing the correct passkey to perform a MITM attack. NIST recommends using a unique, random passkey for each pairing to provide this level of protection across multiple pairings."
          }
        ]
      }
    ]
  },
  {
    "title": "CURRENT_PAGE_RAW_OCR_TEXT",
    "subsections": [
      {
        "content": "For low energy Secure Connections pairing, after the public keys have been exchanged, the Numeric Comparison procedure is used, but the user is not shown the 6-digit values and the final commitment checks are not performed. The Just Works pairing method results in an unauthenticated LTK because no MITM protection is provided during pairing."
      },
      {
        "title": "3.2.3 Legacy Low Energy Key Generation and Distribution",
        "content": [
          {
            "text": "Once the link is encrypted using the STK, the two devices distribute secret keys such as LTK, IRK, and CSRK. Two options are specified for key generation prior to distribution. A device may simply generate random 128-bit values and store them in a local database (called \"Database Lookup\" in the specification). The other option is to use a single 128-bit static but random value called Encryption Root (ER) along with a 16-bit Diversifier (DIV) unique to each trusted device to generate the keys. This option is called \"Key Hierarchy\" in the specification. For example, the keys can be derived from ER, DIV, and the Identity Root (IR) using the following formulas:"
          },
          {
            "text": "LTK = d1(ER, DIV, 0)\nCSRK = d1(ER, DIV, 1)\nIRK = d1(IR, 1, 0)"
          },
          {
            "text": "The d1 function is a called a Diversifying Function and is based on AES-128 encryption. However, the specification allows the use of other key derivation functions. Using this Key Hierarchy method, the device does not need to store multiple 128-bit keys for each trusted device; rather, it only needs to store its ER and the unique DIVs for each device. During reconnection, the remote device sends its EDIV, which is a masked version of DIV. The local device can then regenerate the LTK and/or CSRK from its ER and the passed EDIV. If data encryption or signing is set up successfully, it is verified that the remote device had the correct LTK or CSRK. If unsuccessful, the link is dropped. Note in the above example that the IRK is static and device-specific, and therefore could be generated prior to pairing (e.g., during manufacturing)."
          }
        ]
      }
    ]
  },
  {
    "title": "CURRENT_PAGE_RAW_OCR_TEXT",
    "subsections": [
      {
        "content": "Bluetooth address of the Slave. After independent generation in each device, the LTK is stored locally by each device - the LTKs do not need to be distributed in Secure Connections mode. Once the LTK has been generated, the link is encrypted using an encryption key derived from the LTK. Thereafter keys such as the IRK and the CSRK can be distributed by both the devices, similar to the key distribution step of Legacy low energy Pairing (see Figure 3-9)."
      },
      {
        "title": "3.2.5 Confidentiality, Authentication, and Integrity",
        "content": [
          {
            "text": "AES-CCM is used in Bluetooth low energy to provide confidentiality as well as per-packet authentication and integrity. There is no separate authentication challenge/response step as with BR/EDR/HS to verify that they both have the same LTK or CSRK. Because the LTK is used as input for the encryption key, successful encryption setup provides implicit authentication. Similarly, data signing provides implicit authentication that the remote device holds the correct CSRK although confidentiality is not provided."
          }
        ]
      },
      {
        "title": "3.2.6 Low Energy Long Term Key Derivation from Bluetooth Link Key",
        "content": [
          {
            "text": "The low energy LTK can be derived from the Bluetooth BR/EDR Link Key. As shown in Figure 3-11, the Intermediate LTK (ILTK) is generated using the Bluetooth link key and an extended ASCII key identifier (keyID) of \"tmp2\" as inputs to an AES-CMAC function h7. Subsequently, the LTK is derived using ILTK and keyID of \"brle\" as inputs to h6."
          }
        ]
      }
    ]
  },
  {
    "title": "4 Bluetooth Vulnerabilities, Threats, and Countermeasures",
    "subsections": [
      {
        "content": "This section describes vulnerabilities in Bluetooth and threats against those vulnerabilities. Based on these identified common vulnerabilities and threats, as well as the Bluetooth security features described in Section 3, this section also recommends possible countermeasures that can be used to improve Bluetooth security. Organizations that are planning to use products that use the Bluetooth 4.0, 4.1, or 4.2 technologies should carefully consider the security implications. The 4.0 specification was released in mid-2010, and the 4.2 specification was released in December 2014. At the time of this writing, one significant security vulnerability related to 4.0 has been discovered (see Table 4-1 below). Additionally, few products that support the 4.2 specification are currently available for evaluation. As more compliant products become available, additional vulnerabilities will possibly be discovered, and additional recommendations will be needed for effectively securing Bluetooth low energy devices. Organizations planning to deploy Bluetooth low energy devices should carefully monitor developments involving new vulnerabilities, threats, and additional security control.\n```# Recommendations"
      },
      {
        "title": "4.1 Bluetooth Vulnerabilities",
        "content": [
          {
            "text": "Table 4-1 provides an overview of a number of known security vulnerabilities associated with Bluetooth. The Bluetooth security checklist in Section 4.4 addresses these vulnerabilities."
          },
          {
            "text": "NOTE: As mentioned previously, depending on the Bluetooth hardware of a device, it may be able to perform both BR/EDR/HS and low energy functionalities (dual-mode) or only low energy functionalities."
          }
        ]
      },
      {
        "title": "4.2 Bluetooth Threats",
        "content": [
          {
            "text": "Bluetooth offers several benefits and advantages, but the benefits are not provided without risk. Bluetooth and associated devices are susceptible to general wireless networking threats, such as denial of service attacks, eavesdropping, MITM attacks, message modification, and resource misappropriation, and are also threatened by more specific Bluetooth related attacks, such as the following:"
          },
          {
            "text": "Bluesnarfing. Bluesnarfing enables attackers to gain access to a Bluetooth-enabled device by exploiting a firmware flaw in older (circa 2003) devices. This attack forces a connection to a Bluetooth device, allowing access to data stored on the device including the device's international mobile equipment identity (IMEI). The IMEI is a unique identifier for each device that an attacker could potentially use to route all incoming calls from the user's device to the attacker's device.\n\n\nBluejacking. Bluejacking is an attack conducted on Bluetooth-enabled mobile devices, such as cell phones. An attacker initiates bluejacking by sending unsolicited messages to the user of a Bluetooth-enabled device. The actual messages do not cause harm to the user's device, but they may entice the user to respond in some fashion or add the new contact to the device's address book. This message-sending attack resembles spam and phishing attacks conducted against email users. Bluejacking can cause harm when a user initiates a response to a bluejacking message sent with a harmful intent.\n\n\nBluebugging. Bluebugging exploits a security flaw in the firmware of some older (circa 2004) Bluetooth devices to gain access to the device and its commands. This attack uses the commands of the device without informing the user, allowing the attacker to access data, place phone calls, eavesdrop on phone calls, send messages, and exploit other services or features offered by the device.\n\n\nCar Whisperer. Car Whisperer is a software tool developed by European security researchers that exploits the use of a standard (non-random) passkey in hands-free Bluetooth car kits installed in automobiles. The Car Whisperer software allows an attacker to send to or receive audio from the car kit. An attacker could transmit audio to the car's speakers or receive audio (eavesdrop) from the microphone in the car.\n\n\nDenial of Service. Like other wireless technologies, Bluetooth is...# CURRENT_PAGE_RAW_OCR_TEXT"
          },
          {
            "text": "Bluesnarfing. Bluesnarfing enables attackers to gain access to a Bluetooth-enabled device by exploiting a firmware flaw in older (circa 2003) devices. This attack forces a connection to a Bluetooth device, allowing access to data stored on the device including the device's international mobile equipment identity (IMEI). The IMEI is a unique identifier for each device that an attacker could potentially use to route all incoming calls from the user's device to the attacker's device."
          },
          {
            "text": "Bluejacking. Bluejacking is an attack conducted on Bluetooth-enabled mobile devices, such as cell phones. An attacker initiates bluejacking by sending unsolicited messages to the user of a Bluetooth-enabled device. The actual messages do not cause harm to the user's device, but they may entice the user to respond in some fashion or add the new contact to the device's address book. This message-sending attack resembles spam and phishing attacks conducted against email users. Bluejacking can cause harm when a user initiates a response to a bluejacking message sent with a harmful intent."
          },
          {
            "text": "Bluebugging. Bluebugging exploits a security flaw in the firmware of some older (circa 2004) Bluetooth devices to gain access to the device and its commands. This attack uses the commands of the device without informing the user, allowing the attacker to access data, place phone calls, eavesdrop on phone calls, send messages, and exploit other services or features offered by the device."
          },
          {
            "text": "Car Whisperer. Car Whisperer is a software tool developed by European security researchers that exploits the use of a standard (non-random) passkey in hands-free Bluetooth car kits installed in automobiles. The Car Whisperer software allows an attacker to send to or receive audio from the car kit. An attacker could transmit audio to the car's speakers or receive audio (eavesdrop) from the microphone in the car."
          },
          {
            "text": "Denial of Service. Like other wireless technologies, Bluetooth is...# CURRENT_PAGE_RAW_OCR_TEXT"
          }
        ]
      },
      {
        "title": "Susceptible to DoS Attacks",
        "content": [
          {
            "text": "Impacts include making a device's Bluetooth interface unusable and draining the device's battery. These types of attacks are not significant and, because of the proximity required for Bluetooth use, can usually be easily averted by simply moving out of range."
          },
          {
            "text": "Fuzzing Attacks. Bluetooth fuzzing attacks consist of sending malformed or otherwise non-standard data to a device's Bluetooth radio and observing how the device reacts. If a device's operation is slowed or stopped by these attacks, a serious vulnerability potentially exists in the protocol stack.\n\n\nPairing Eavesdropping. PIN/Legacy Pairing (Bluetooth 2.0 and earlier) and low energy Legacy Pairing are susceptible to eavesdropping attacks. The successful eavesdropper who collects all pairing frames can determine the secret key(s) given sufficient time, which allows trusted device impersonation and active/passive data decryption.\n\n\nSecure Simple Pairing Attacks. A number of techniques can force a remote device to use Just Works SSP and then exploit its lack of MITM protection (e.g., the attack device claims that it has no input/output capabilities). Further, fixed passkeys could allow an attacker to perform MITM attacks as well."
          },
          {
            "text": "Fuzzing Attacks. Bluetooth fuzzing attacks consist of sending malformed or otherwise non-standard data to a device's Bluetooth radio and observing how the device reacts. If a device's operation is slowed or stopped by these attacks, a serious vulnerability potentially exists in the protocol stack."
          },
          {
            "text": "Pairing Eavesdropping. PIN/Legacy Pairing (Bluetooth 2.0 and earlier) and low energy Legacy Pairing are susceptible to eavesdropping attacks. The successful eavesdropper who collects all pairing frames can determine the secret key(s) given sufficient time, which allows trusted device impersonation and active/passive data decryption."
          },
          {
            "text": "Secure Simple Pairing Attacks. A number of techniques can force a remote device to use Just Works SSP and then exploit its lack of MITM protection (e.g., the attack device claims that it has no input/output capabilities). Further, fixed passkeys could allow an attacker to perform MITM attacks as well."
          }
        ]
      }
    ]
  },
  {
    "title": "Users' Responsibilities",
    "subsections": [
      {
        "content": "Organizations should include awareness-based education to support staff understanding and knowledge of Bluetooth. Policy documents should include a list of approved uses for Bluetooth and the type of information that may be transferred over Bluetooth networks. The security policy should also specify a proper password usage scheme. When feasible, a centralized security policy management approach should be used in coordination with an endpoint security product installed on the Bluetooth devices to ensure that the policy is locally and universally enforced."
      },
      {
        "content": "The general nature and mobility of Bluetooth-enabled devices increases the difficulty of employing traditional security measures across the enterprise. Nevertheless, a number of countermeasures can be enacted to secure Bluetooth devices and communications, ranging from distance and power output to general operation practices. Several countermeasures that could be employed are provided in the checklist in Section 4.4."
      }
    ]
  }
]