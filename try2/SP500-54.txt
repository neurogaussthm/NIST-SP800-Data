^7D A111D3 COMPUTER SCIENCE & TECHINIOLOGY A KEY NOTARIZATION SYSTEM FOR COMPUTER NETWORKS QC 100 .U57 NO. 500-5^ 1979 C.2 ^ NBS 500-54 i Special Publication DEPARTMENT OF COMMERCE U.S. National Bureau of StandardsNATIONAL BUREAU OF STANDARDS The National Bureau ofStandards' wasestablished by an act ot Congress on March 3, 1901. The Bureau's overall goal is to strengthen and advance the Nation's science and technology and facilitate their effective application for public benefit. To this end, the Bureau conducts research and provides: (1) a basis for the Nation's physical measurement system, (2) scientific and technological services for industry and government, (3) a technical basis for equity in trade, and (4) technical services to promote public safety. The Bureau'stechnical work is per- formed by theNational Measurement Laboratory, theNational Engineering Laboratory, and the Institute for Computer Sciences and Technology. THE NATIONAL MEASUREMENT LABORATORY provides the national system of physical and chemical and materials measurement; coordinates the system with measurement systems of other nations and furnishes essential services leading to accurate and uniform physical and chemical measurement throughout the Nation's scientific community, industry, and commerce; conducts materials research leading to improved methods of measurement, standards, and data on the propertiesofmaterials needed by industry,commerce,educational institutions, and Government; provides advisory and research services to other Government agencies; develops, produces, and distributes Standard Reference Materials; and provides calibration services. The Laboratory consists of the following centers: — — Absolute Physical Quantities' Radiation Research Thermodynamics and — — Molecular Science Analytical Chemistry Materials Science. THE NATIONAL ENGINEERING LABORATORY provides technology and technical ser- vices to the public and private sectors to address national needs and to solve national problems; conducts research in engineering and applied science in support of these efforts; builds and maintains competence in the necessary disciplines required to carry out this research and technical service; develops engineering data and measurement capabilities; provides engineering measurement traceability services; develops test methods and proposes engineering standards and code changes; develops and proposes new engineering practices; and develops and improves mechanisms to transferresultsofits research to the ultimate user. The Laboratory consists of the following centers: — — Applied Mathematics Electronics an —d Electrical Engineering —^ Mechanical — Engineering and Process Technology- Building Technology Fire Research — Consumer Product Technology Field Methods. THE INSTITUTE FOR COMPUTER SCIENCES AND TECHNOLOGY conducts research and provides scientific and technical services to aid Federal agencies in the selection, acquisition, application, and use of computer technology to improve effectiveness and economy in Government operations in accordance with Public Law 89-306 (40 U.S.C. 759), relevant Executive Orders, and other directives; carries out this mission by managing the ADP Federal Information Processing Standards Program, developing Federal standards guidelines, and managing Federal participation in ADP voluntary standardization activities; provides scientific and technological advisory services and assistance to Federal agencies; and provides the technical foundation for computer-related policies ofthe Federal Government. The Institute consists of the following centers: — Programming Science and Technology Computer Systems Engineering. 'Headquartersand LaboratoriesatGaithersburg, MD,unlessotherwisenoted; mailing address Washington, DC 20234. •Some divisions within the center are located at Boulder, CO 80303.COMPUTER SCIENCE & TECHNOLOGY: A Key Notarization System for Computer Networlcs Miles E. Smid Operations Engineering Division Center for Programming Science and Technology Institute for Computer Sciences and Technology National Bureau of Standards Washington, D.C. 20234 U.S. DEPARTMENT OF COMMERCE, Juanita M. Kreps, Secretary Luther H. Hodges, Jr., Under Secretary Jordan J. Baruch, Assistant Secretary for Science and Technology NATIONAL BUREAU OF STANDARDS, Ernest Ambler, Director October 1979Reports on Computer Science and Technology The National Bureau of Standards has a special responsibility within the Federal Government for computer science and technology activities. The programs of the NBS Institute for Computer Sciences and Technology are designed to provideADP standards, guidelines, and technical advisory services to improve theeffectivenessof computer utilization in the Federal sector, and to perform appropriate research and developmenteffortsasfoundationforsuchactivities and programs. Thispublication series will report these NBS efforts to the Federal computercommunityas wellasto interested specialists in the academic and private sectors. Those wishing to receive noticesofpublicationsintheseries should completeand returntheformattheendof this pubhcation. National Bureau of Standards Special Publication 500-54 Nat. Bur. Stand. (U.S.) Spec. Publ. 500-54, 35 pages (Oct. 1979) CODEN; XNBSAV Library ofCongress Catalog Card Number: 79-600160 U.S. GOVERNMENT PRINTING OFFICE WASHINGTON: 1979 For sale by the Superintendent of Documents, U.S. Government Printing Office, Washington, D.C. 20234 Stock No. 003-003-02 30-0 Price $1.75 1 (Add 25 percent additional for other than U.S. mailing). The author would like to express his appreciation t Dr. Dennis Branstad for orglnally presenting the key manage ment problem and for his many valuable comments and sugges tIons -iii-TABLE OF CONTENTS Page 1. INTRODUCTION 1 2. REQUIREMENTS 2 3. SYSTEM DESIGN 4 3.1 THE NETWORK 4 3.2 THE HOST 5 3.3 THE KEY NOTARIZATION FACILITY (KNF) 5 3.4 DISTRIBUTED VERSUS CENTRALIZED KEY GENERATION 6 . 4. IDENTIFIERS AND KEY NOTARIZATION 7 5. USER AUTHENTICATION 8 6. KEY HIERARCHY 9 6.1 INTERCHANGE KEYS (IK's) 9 6.2 DATA KEYS (DK's) 10 7. PASSWORD AND KEY STORAGE 10 7.1 KNF KEYS 10 7.2 PASSWORDS 10 7.3 USER KEYS 11 8. DEFINITION OF TERMS 12 9. COMMANDS 13 9.1 INITIALIZE PASSWORD IPW 14 ( ) 9.2 REENCRYPT PASSWORDS (RPW) 14 9.3 RESERVE ACTIVE STATE (RAS) 14 9.4 LOGOUT ACTIVE USER (LAU) 15 9.5 CHANGE PASSWORD (CPW) 15 -V-9.6 GENERATE DATA KEY (GDK) 15 9.7 ENCRYPT DATA KEY (EDK) 16 9.8 LOAD DATA KEY (LDK) 16 9.9 GENERATE INITIALIZATION VF.CTOR (GIV) 17 9.10 LOAD INITIALIZATION VECTOR (LIV) 17 9.11 ENCRYPT INITIALIZATION VECTOR (EIV) 18 9.12 REENCRYPT DATA KEY (RDK) 18 9.13 ELECTRONIC CODEBOOK (ECBE AND ECBD) 19 9.14 DATA AUTHENTICATION (DAUT) 19 9.15 CIPHER BLOCK CHAINING (CBCE AND CBCD) 20 9.16 CIPHER FEEDBACK (CFBE AND CFBD) 20 10. DIGITAL SIGNATURES 20 10.1 RATIONALE 20 10.2 EXAMPLE 21 :' . 10.3 THE AUTHENTICATION VALUE AS A SIGNATURE 22 10.4 NONPUBLIC KEY VERSUS PUBLIC KEY SIGNATURES .. 23 11. ILLUSTRATIVE EXAMPLE 23 11.1 INITIALIZATION 23 11.2 THE TRANSMITTER 24 11.3 THE RECEIVER 24 11.4 KEY SUPERSESSION 25 i 12. SUMMARY 25 APPENDIX 26 REFERENC ES 27 -vi-. A Key Notarization System For Computer Networks Miles E. Smid A cryptographic, Key Notarization System is proposed for computer networks to protect personal (nonshared) files, to communicate securely both on and off-line with local and remote users, to pro- tect against key substitution, to authenticate system users, to authenticate data, and to provide a digital signature capability using a nonpublic key encryption algorithm. The system is imple- mented by the addition of key notarization facili- ties which give users the capability of exercising a set of commands for key management as well as for data encryption functions. Key notarization facilities perform notarization which, upon en- cryption, seals a key or password with the identi- ties of the transmitter and Intended receiver. Key words: Cryptography; digital signatures; encryption; identifiers; key management; key notarizat ion 1. INTRODUCTION This paper proposes a Key Notarization System (KNS) which may be used in conjunction with a cryptographic device to provide increased data security. In 1977 the National Bureau of Standards published a completely defined encryp- tion algorithm known as the Data Encryption Standard (DES) which became a Federal standard for the protection of un- classified data . Since publication, several companies have produced hardware devices which implement the standard, and there has been an increased awareness that, in certain applications, encryption offers the only effective means of protecting information. The first applications of the en- cryption of unclassified data appeared in the area of elec- tronic funds transfer, but the passage of the Privacy Act of 1974 (5 use 522a) and Transmittal Memorandum No. 1 to Office of Management and Budget Circular A-71 placed added respon- sibilities on Federal data systems for the protection of nonfinancial data as well. -1-Even before the DES was adopted, it was clear that there was more to cryptographic security than a secure en- cryption algorithm. Efforts were initiated by NB S to have additional standards, based on the DES, developed. An area which needed to be addressed was secure key management. DES keys are 64-bit binary vectors which are individually selected in order to provide the unknown quantity necessary for security in the encryption algorithm. Key management involves the secure generation, distribution, and storage of cryptographic keys. If the key management is weak, then the most secure cryptoalgor ithm will be of little value. In fact, a very strong cryptoalgorithm used in a weak key management system can give a false sense of security. Previous work on key management systems may be found in Ehrsam, et al  and Everton . This paper develops a simple key hierarchy and a set of commands or protocols which in conjunction with a secure random key generator and a strong encryption algorithm may be used to generate and store keys as well as to encrypt and decrypt data. These commands have been devised for computer systems which employ key notarization facilities (KNF's). They are to be tested on the NBS UNIX system but they are not UNIX dependent. It is intended that the system be applicable to many different situations. On-line communications, file encryption, off- line mail, and digital signatures all are to be protected. Key notarization is presented to help provide security while maintaining the required flexibility. 2. REQUIREMENTS The Key Notarization System (KNS) may be used in com- puter networks along with key notarization facilities (KNF's) to: 1. Securely communicate between any two users; 2. Securely communicate via encrypted mail (off-line); 3. Protect personal (nonshared) files; 4. Provide a digital signature capability. Secure communication involves preventing the disclosure of plain text, detecting fraudulent message modification, detecting fraudulent message insertion or deletion, and detecting fraudulent replay of a previously valid message. -2-The KNS must be consistent with these goals and yet operate at speeds sufficient for normal network communications. With mail encryption, data is encrypted and then sent via mail or some means which cannot provide an immediate response. The data is stored in the encrypted form until decryption at some later time. In this situation one cannot have an interactive system for exchanging keys because no real-time response is possible. Therefore, protocols must be devised so that the receipt of keys need not be immedi- ately acknowledged. Once encrypted, personal files can only be decrypted by the original owner. They are encrypted for secure storage rather than secure communication. In this case encryption Is used to protect against accidental disclosure, such as spillage, and intentional disclosure, such as scavenging. It is often desirable that the data encrypting key be stored with the cipher for ease of recovery. Of course, the key would be encrypted under another long term key which is kept for the user either in the KNF or in a secure location from which it may be entered into the KNF. Digital signatures were developed in conjunction with public key systems. (See Dlffie and Hellman  and Rivest, et al .) In such systems the decryption key is not equal to, and cannot be computed from, the encryption key. En- cryption keys may be made public while decryption keys are kept secret. A digital signature is decrypted using the secret decryption key and sent to the receiver. The re- ceiver may encrypt, using the public key, and verify the signature, but the signature cannot be forged since only the transmitter knows the secret decryption key. (The cryptoal- gorithm must have the property that decryption of the signa- ture followed by encryption equals the original signature.) Popek and Kline  showed that nonpublic key algorithms can also be used for digital signatures in conjunction with a "Network Registry". In the KNS, a different method is pro- posed for Implementing digital signatures with the DES non- public key algorithm. -3-. 3. SYSTEM DESIGN 3.1 THE NETWORK The KNS is designed for computer networks which consist of host computers, user terminals, and key notarization fa- cilities. Figure 1 shows a four host network. The host controls the normal operation and communication of the ter- minals. Terminals have the capability of communicating with the host, with other local terminals through the host, and with terminals of other hosts via communication channels called Interchanges Each terminal will be able to use the . host KNF by means of user commands. All commands will be implemented in the KNF, and every KNF will have the capacity to generate keys for distribution to other hosts or facility users . Interchanges may be electronic communications lines, microwave links, courier routes, etc., or combinations of more than one medium. In Figure 1 only host 3 shares an in- terchange with host 4. If host 1 shares a common inter- change key with host 4, then host 1 may communicate with host 4 through host 3 without intermediate decryption and reencrypt ion . Host 3 would merely act as a switch. This is known as end-to-end encryption. If host 1 does not share a common key with host 4 but does share a key with host 3, and if host 3 shares a key with host 4, then host 1 may communi- cate with host 4 via host 3. The cipher would have to be decrypted at host 3 and reencrypted in the key shared between host 3 and host 4. Care must be taken to insure that the communications are not compromised when unencrypt- ed. This method of encrypted communications is called link encrypt ion The lines between the KNF and its host and the lines between each terminal and its host must be protected. They could be physically secured or they could be secured by the addition of cryptographic devices on each end of the links. When a user is editing a file in the host, it is in plain text form, and the host will have to protect the data from other users. Once the user has finished editing, he may command the KNF to encrypt the data and store the resulting cipher in unprotected memory or send it to a remote user over an interchange. -4-3.2 THE HOST We will assume that the host computer has two types of memory: that which is not accessible to any user, called system memory, and that which is accessible to users, called user memory. User i's memory is core, disk, etc., where user i is permitted to store and recall data. Most comput- ers have a means of protecting system memory from users, and some computers protect one user from another to a certain degree. We will rely on these protective features to the extent that the user should not be able to subvert the operation of the computer. For example, the system must be able to correctly maintain the identity of the user once he has been authenticated and given permission to execute the commands. The system must also prevent one user from taking on the identity of another user and thereby obtaining access to his unencrypted data. In other words, encryption by it- self does not solve the computer security problem. However, if properly used in a system with the necessary protective features, it can provide protection to stored and communi- cated data. The encrypted keys of user i are stored in user i's memory, and encrypted passwords to which no user needs ac- cess will be stored in system memory. Nevertheless, we will assume that any user could gain read and write access to every encrypted password stored in system memory. Each user is expected to manage the encrypted keys which belong to him, but he will not know any clear keys. Yet, key encryp- tion is not sufficient. A method is required to protect against key substitution and to insure that each user correctly identifies the user with whom he is communicating. 3.3 THE KEY NOTARIZATION FACILITY (KNF) The KNF contains a DES encryption device. It will have a control microprocessor and memory to implement commands and data transfers. The KNF must also store the unencrypted interchange keys and the states of active users. An active state consists of a user identifier along with an initiali- zation vector and an unencrypted data key for both transmit- ting and receiving data. A user is act ive as soon as his identifier is loaded into active user memory in the KNF. He may then proceed to load the rest of his state. The KNF contains a key generator which is capable of generating unpredictable keys. At any time a user should be able to predict the next key to be generated with only a 1/ (2**56) probability of success where 2**56 is two raised to the 56'th power. One possible key generator is proposed in the Appendix. Once the 56-bit keys are generated the -5-proper parity Is determined and the entire 64-bit key is en- crypted before it is returned to the host. Thus, no clear keys are known outside the KNF The key generator is also . used to generate 64-bit initialization vectors which ini- tialize the DBS cryptoal gor thm Since the KNF contains i . clear keys, the encryption algorithm, the commands program, and the key generator, it must be physically protected. Cryptographic facilities containing a single master key are used in Ehrsam, et al  to perform encryption and exe- cute key management commands. Our key notarization facili- ties hold several keys and the key generator. They employ a different key hierarchy, a different set of commands, and are the enforcers of key notarization. 3.4 DISTRIBUTED VERSUS CENTRALIZED KEY GENERATION Branstad  describes how network security centers (NSC) may be used for key distribution. Upon request, the NSC generates a key for use by each of the parties in a conversation. One copy is encrypted under a key shared between the NSC and the first party and another copy is en- crypted under a key shared between the NSC and the second party. The encrypted forms of the key are then sent to the appropriate receivers. The KNS uses distributed rather than centralized key generation as employed by an NSC. In order to provide for off-line encrypted mail, the KNS gives each host the capa- bility of key generation in its own KNF. Thus, two hosts do not even have to be electronically connected in order to communicate securely. The KNS requires fewer protocols be- cause parties do not have to send a remote key generation request and they do not have to respond to the receipt of a key. Fewer protocols mean fewer ways an enemy can attempt to trick or confuse the communicating parties by altering or playing back the protocol messages. (See Needham and Schroeder .) If a KNF is compromised, only communications Involving the compromised facility are compromised. If a NSC is compromised, and there is only one NSC for the network, then the whole network is compromised. Finally, with a local key generator, one can encrypt personal (nonshared) files without having to depend on a remote site. The KNS approach has the disadvantage that the key generation capability and the KNF physical security has to be replicated at each host. -6-4. IDENTIFIERS AND KEY NOTARIZATION A special feature of the KNS is the support of key no- tarization. This feature increases security, permits a sim- ple system design, and provides a means of implementing sig- natures with a nonpublic key system. Ident 1 fiers are non- secret binary vectors of up to 28 bits which uniquely iden- tify each user In the network. When a user first attempts to call the KNF he must submit his identifier along with the correct password to establish an active state in the KNF. Both the host and the KNF employ identifiers to "recognize" the users. Key notarization Is similar to the actions of a notary public who first requires his customer to identify himself via a driver's license, etc., before he seals (notarizes) the customer's signature on a document with his notary stamp. In addition to the notary's function of authenticat- ing the creator of a message, the KNS authenticates the mes- sage Itself and the person requesting decryption. Key no- tarization Is similar to having a notary public on each end of a secure communication channel. Let 1 and j be Identifiers and K be a DBS key. Then (1 II j) represents the concatenation of 1 and j . K, a 64 bit key, consists of eight btyes, each with seven informa- tion bits and a parity bit. K XOR (ill j) is a special function defined as follows. The leftmost seven information bits of K are exclusive or'ed with the leftmost seven bits of 1. The eighth bit, a parity bit, is then appended so that the modulo 2 sum of all eight bits is odd. Then the next seven Information bits of K are exclusive or'ed with the next seven bits of 1 and the correct parity bit is ap- pended. This continues until the last seven information bits of K have been exclusive or'ed with the last seven bits of and the final parity bit has been set. Therefore, K j XOR (1 II j) Is a valid DES key with 56 information bits and eight parity bits. All passwords and data keys are encrypted under K XOR (1 II j) for some K and some 1, j pair. In the casu of passwords 1 = j. This adds to security because one user cannot substitute his password or keys for those of another user and be able to authenticate or decrypt as that user. This will be explained in detail in section 7, PASSWORD AND KEY STORAGE. The security is also increased because both parties in a conversation must know the other's correct identity to communicate. Since the KNF only needs to retain keys for each Interchange, Instead of each user, the network design is simplified; and since only one user can encrypt with a given data key and only one user can decrypt with a -7-given data key, a signature system may be devised similar to those used with public key encryption systems. This will be discussed further in section 10, DIGITAL SIGNATURES. When key notarization is used, keys and passwords are sealed, upon encryption by the KNF, with the identifiers of the transmitter, or key generator, and the receiver. To generate a notarized key the transmitter must Identify him- self to the KNF and provide proof of his identity by supply- ing his correct password. We call this user authentication. He must also identify the intended receiver of the key. Once encrypted, the correct key cannot be decrypted unless the correct identifier pair is again provided. To decrypt the key the receiver identifies himself and provides pass- word proof of his identity. The receiver must also supply the identity of the transmitter which may have been sent unencrypted. If the identification information is not the same as that provided by the transmitter to his KNF, then the decrypted key will not equal the original key and no in- formation can be correctly decrypted. Thus, the receiver must know the correct transmitter and be the intended re- ceiver. 5. USER AUTHENTICATION Each user will have a password which is used to authen- ticate the user and permit him to invoke user commands. The plain password is passed through an encryption function, in- volving the user's identifier, and the result is compared with a stored value before the user is activated. There- fore, a user cannot exercise any other command until his identity has been authenticated. The password of each user is stored in system memory encrypted under the facility in- terchange key (See section 6, KEY HIERARCHY.) combined with the user's identifier. Since it is assumed that the host can maintain the correct identity of a user once he has been authenticated, the user need not resubmit his password for each key he generates while he is active. His authenticated identifier which has been loaded into active user memory will automatically be used as his identifier. -8-6. KEY HIERARCHY Two distinct types of keys are used to form the key hierarchy, Interchange keys (IK's) and data keys (DK's). Interchange keys encrypt passwords (PW's) and data keys, while data keys encrypt both data and initialization vectors (IV's). The key hierarchy is shown below. 6.1 INTERCHANGE KEYS (IK's) Interchange keys are used for the exchange of keys between users. One interchange key, called the facility interchange key, is used for communication within a facility and the encryption of facility user passwords. Other inter- change keys may be available for the exchange of data keys between facilities or for special subgroups of a facility. IK's are generated outside the network and are entered, unencrypted, directly into the KNF. This permits two facil- ities to enter the same IK. One IK can be used to connect all the users of two hosts since a user may not decrypt a data key shared by two other users. This is because the identifiers of the two parties are involved in the encryp- tion of the shared key. Therefore, the number of keys which need to be stored in the KNF is reduced. -9-6.2 DATA KEYS (DK's) Data keys are used to encrypt data belonging to one particular user or data shared between two users. DK's are generated by the key generator and are immediately encrypted under an IK XOR'ed with the proper identifier pair. The identifier of the user requesting the key, who is also the transmitter, is always the left identifier and the identif- ier of the intended receiver is the right identifier in the identifier pair. When encrypted, DK's may be sent, kept in unprotected memory, etc.. Initialization vectors are em- ployed by the DES algorithm in the cipher block chaining (CBC), cipher feedback (CFB), and data authentication (DAUT) modes of operation. All IV's are encrypted, before they leave the KNF under the data key which enciphers the , corresponding data. 7. PASSWORD AND KEY STORAGE Figure 2 shows how keys appear in KNF memory at host 1, in host 1 system memory, and in the memory of user i at host 1 . 7.1 KNF KEYS KNF memory contains both current and old interchange keys and active states of a limited number of users. When the interchange keys are changed, the old interchange keys are securely stored outside of the KNF along with their ef- fective date. With the addition of another command one could encrypt the IK's in the facility master key to reduce the number of clear keys needing protection. The current IK's become the old interchange keys and the new interchange keys become the current IK's. After such a change, the passwords are reencrypted under the current (new) facility interchange key, and the users are told to reencrypt their data keys. 7.2 PASSWORDS System memory contains the encrypted passwords for every user. Let E[X](Y) indicate the encryption of Y under X in the electronic codebook (ECB) mode of operation. Thus, E[IK1 XOR (i II i)](PWi) denotes the encryption of PW i under IKl XOR'ed with user i's identifier pair, (i i). IKl is I I used because the encrypted passwords are from the system -10-. : : memory of host 1 and IKl is the facility Interchange key for host 1 The password is encrypted under IKl XOR'ed with the ap- propriate identifier pair to protect against substitution. If identifiers were not used, system memory might appear as fo 1 lows 1. E[IK1](PW1) E[IKl](PWj) j. If user could gain access to system memory, he might alter j it as fo 1lows i. E[IKl](PWj) E[IKl](PWj) j. User j could then authenticate as user i by submitting his own password while claiming to be user i. If identifiers are used as in figure 2, then E[IK1 XOR (i i)](PWj) would be calculated upon authentication and it wI oI uld not compare with E[IK1 XOR (j || j ) ] (PW j ) which was substituted as user i's encrypted password. 7.3 USER KEYS User i's memory contains personal and shared data keys. Personal data keys are encrypted under the facility inter- change key XOR'ed with the user's identifier pair. Personal keys may be used to encrypt files and other private data, but cannot be shared. User i's memory also contains shared data keys encrypted under interchange keys XOR'ed with the concatenation, (II), of user i's identifier and another user's identifier. (i j) uniquely identifies the commun- ication parties. If (i ! I j) were not used, another user could substitute his oI wI n data key encrypted under the -11-Interchange key and then be able to decrypt any subsequent cipher. Similarly, when user j receives E[IKp XOR (1 1 I j)](DKij), he must know that he is communicating with 1, over interchange p, to correctly decipher DKij. Thus, the transmitter is prevented from posing as someone else. Since several users may all use the same IKp to communicate, this protection is critical. It should be noted that it is the system's responsibil- ity to enforce any restrictions on the use of interchanges. For example, if user i is not allowed to use IKp then the system must enforce this arbitrary restriction by not load- ing IKp for user i. However user i should not be able to subvert the restriction by key substitution. One could argue that substitution protection is not needed for system memory because if the system cannot pro- tect system memory, it probably cannot prevent users from changing identity, from invoking system commands, or other security threats. This may be true but encryption should not add additional possibilities for attacks. In user memory the substitution threat is very real because many systems cannot protect one user's memory from another user, and even if they could, the encrypted keys will not be pro- tected. Encrypted data keys may be stored with cipher on unprotected tapes and disks, and they may even be sent out over unprotected communications channels. 8. DEFINITION OF TERMS When defining our commands, the terms, initialize, reserve, load, store, generate, encrypt, decrypt, and reen- crypt will be used. These terms should be defined so that the meaning of the commands is clear. The terms actually represent functions which operate on keys or passwords. init ial ize Sets a password to a starting value that ; should be changed by invoking another command. reserve Activates a user by loading his identifier : into the KNF. load Takes an encrypted key or encrypted IV from the ; user, decrypts it, and puts it into the active user memory in the KNF. -12-. . store Places an encrypted password in system memory. : Operates on PW. generate Calls the KNF random key generator which gen- ; erates 56 unpredictable, random bits that are combined with eight parity bits, as required by the DES. The result is encrypted under an interchange key XOR'ed with the appropri- ate identifier pair. IV generation provides a full 64 ran- dom bits before encryption. Operates on DK's and TV's. encrypt Encrypts a DK or PW under an IK XOR'ed with : the appropriate identifier pair. Uses the ECB mode of en- cryption when operating on keys. "Encrypt" also refers to enciphering data in one of the approved DES modes. decrypt Decrypts an encrypted DK or PW "Decrypt" : . also refers to deciphering data in one of the approved DES modes reencrypt Decrypts an encrypted DK or PW and then en- : crypts it under a new IK XOR'ed with the appropriate iden- tifier pair in order to avoid the reencryption of data and the reinitialization of passwords when IK's are changed. 9. COMMANDS This section describes the commands or protocols which need to be implemented in the KNF for key management and data encryption purposes. Besides encryption, decryption, and authentication, they are used to generate keys which are given to the user and to provide for the supersession of the keys which are controlled by the system. The commands are invoked by a command name followed by a parameter address list of passed and returned values. The user's identifier is shown as a parameter only when it must be supplied by the user of the command. For some commands the system au- : tomatically supplies the KNF with the user's identifier. Interchange keys must be loaded into the KNF before commands are executed -13-) 9.1 INITIALIZE PASSWORD IPW ( IPW: {pw} pw = password This command is used when a user Is first put on the system. The password is encrypted and stored in host system memory. The original password is known to the user and the security officer. The user submits the original password when he first authenticates himself to the KNF then he im- , mediately changes his password to a secret value, known only to himself, by using the change password command, CPW. Only the security officer who Is responsible for putting new users on the system should be capable of Initializing the passwo rd . 9.2 REENCRYPT PASSWORDS (RPW) RPW: { } The security officer executes this command after the interchange keys have been changed. Each encrypted password stored in system memory Is decrypted using the old facility interchange key and encrypted using the new facility inter- change key. The result is then stored back in system memory. This permits a user to authenticate even though the interchange keys have been changed. After he Is authenti- cated and active, it will be the user's responsibility to reencrypt his data keys before using them for encryption, decryption, or data authentication. 9.3 RESERVE ACTIVE STATE (RAS) RAS: {ui, pw ss, ua} , ui = user identifier pw = password ss (system status) = y if active memory Is available = n otherwise ua (user = 0 if ss = n authent 1cator ) = y if ss = y and PW authenticates = n if ss = y and no authentication This command activates the user by loading the user's identifier into the KNF. Active user memory must be avail- able and the user must authenticate before the Identifier is loaded. No other commands may be executed by the user until he has successfully executed RAS. The authentication is for use of the KNF and is independent of the authentication for -14-use of the system. Once authentication Is complete, the system must insure that other users cannot execute commands in place of an authenticated user. 9.4 LOGOUT ACTIVE USER (LAU) LAU: {ui} ui = user identifier This command may be used by the user when he has fin- ished using the KNF. In this case ui is optional. The com- mand removes the user identifier from the active user list maintained in the KNF. All active DK's and IV's belonging to the specified user are lost. The host may also keep a list of active users and the time of the last command exe- cuted for each one. If a user has not executed a command after a reasonable time period, then the host may use LAU to log out the user. The user may still be logged on the sys- tem but he will have to repeat the RAS command to use the KNF. The system may also periodically decide to challenge a user by requiring him to reauthent icate Whenever the user . logs off the system, the LAU command should automatically be executed . 9.5 CHANGE PASSWORD (CPW) CPW: {op, np} op = old password np = new password This command is used to change passwords. The old password is authenticated before any change is made. The user identifier must be loaded into active user memory, oth- erwise an error message is returned. 9.6 GENERATE DATA KEY (GDK) GDK: {In, sp, ed} in = interchange name sp = identifier of sharing party ed = returned encrypted data key ex. (command executed by user i) in = p sp = j ed = E[IKp XOR (i II j) (DKi j) ] -15-. This command Is used to generate new keys. The iden- tifier of the user invoking the command, user i in the exam- ple, is always the leftmost value in the concatenation of the sending and receiving identifiers. If the two identif- iers are equal, then the key is personal and cannot be shared. This command may not be executed unless the user is active. Otherwise an error message is returned. 9.7 ENCRYPT DATA KEY (EDK) EDK: {ui, dk, ed} ui = user identifier dk = data key ed = returned encrypted data key ex ui = i dk = DK ed = E[IK XOR (i i) (DK) I I ] IK = facility interchange key This command is not used in the normal functioning of the system. It need only be used for communication with someone outside of the system who doesn't have the same key generation and encryption capability or for generating ci- pher encrypted under a particular key. Since this command violates the security criterion that no clear key be permit- ted outside of the KNF, it is recommended that only the security officer be allowed to execute it. It may be best not to implement this command at all. 9.8 LOAD DATA KEY (LDK) LDK: {kf, in, sp, ed} kf (key function) = t if key is for transmitted data r if key is for received data s if key is for personal use only in interchange name sp identifier of sharing party ed = encrypted data key ex (command executed by user i) kf t in P sp j ed E[IKp XOR (i II j) (DKi j) ] ex. (command executed by user i) kf = r -16-. . in = p sp = j ed = E[IKp XOR (j l)](DKji) I I ex. (command executed by user 1) kf = s In = f (facility interchange identifier) sp = i ed = E[IKf XOR (i i)](DKii) I I This command loads a data key, either shared or person- al, into the user's active state in the KNF. The key is stored at the transmit key address if kf = t, and at the re- ceive key address if kf = r. If user i executed the com- mand, then kf = s if and only if sp = i. Otherwise an error message will be returned. When kf = s and sp = i the data key will be loaded into both the transmit and receive loca- tions. The user must be active before this command can be executed 9.9 GENERATE INITIALIZATION VECTOR (GIV) GIV: {ei} ei = returned encrypted initialization vector ex ei = E[DK](IV) This command is used to generate new initialization vectors. The KNF key generator generates 64 bits, (56 ran- dom and 8 parity), and then encrypts them under the data key which must be previously loaded at the transmit address in active user memory. The encrypted IV is returned to the user. The data key may be either personal or shared. 9.10 LOAD INITIALIZATION VECTOR (LIV) LIV: {kf, ei} kf = t if IV is for transmitted data = r if IV is for received data = s if IV is for personal data ei = encrypted initialization vector ex . kf = t ei = E [DK] IV) ( -17-.. If kf = t then the data key at the transmit address is used to decrypt the encrypted IV. The IV is then stored at the transmit IV address. If kf = r then the data key at the receive address is used to decrypt the encrypted IV, and the IV is stored at the receive IV address. When kf = s, the transmit data key is used to decrypt and the IV is placed in both the transmit and receive IV locations. 9.11 ENCRYPT INITIALIZATION VECTOR (EIV) EIV: {iv, ei} iv = initialization vector ei = returned encrypted IV ex iv = IV ei = E[DK] (IV) This command is not necessary because one can always use the GIV command to obtain IV's. However, it may be used with the EDK command for communications outside of the sys- tem. Since, in the KNS, no unencrypted IV's are to be known by users, it is recommended that this command be restricted solely to the security officer or omitted completely. The IV is encrypted under the DK previously loaded at the transmit key address. 9.12 REENCRYPT DATA KEY (RDK) RDK; {kf, in, sp, ok, rk} kf = t if data key is for transmitted data r if data key is for received data s if data key is for personal data in = interchange name sp = identifier of shared party ok old encrypted data key = rk returned reencrypted data key = ex (user reencrypting a key sent to him by user i) j kf = r in = P sp = i ok = E[IKp XOR (i II j) (DKi j) ] rk = E[IKp XOR (i II j) (DKi j) ] IKp- = old interchange key IKp = new interchange key This command is used when interchange keys are changed. It -18-reencrypts data keys under the new interchange key so that the data protected by the key does not have to be reencrypt- ed. The user must be active. Also, kf = s if and only if sp = i and user i invoked the command. 9.13 ELECTRONIC CODEBOOK (ECBE AND ECBD) ECBE: {pt, ct} ECBD: {pt, ct} pt = plain text (eight bytes) ct = cipher text (eight bytes) These commands are not required in the normal operation of the system. They are provided to accommodate future modes of DES encryption which, as yet, have not been con- sidered or approved. ECBE encrypts eight bytes of plain text at pt and stores the result in ct. ECBD decrypts eight bytes of cipher at ct and stores the result at pt. Encryp- tion uses the transmit DK while decryption uses the receive DK. A data key must be previously loaded into the appropri- ate active state. 9.14 DATA AUTHENTICATION (DAUT) DAUT: {kf, da, nb av md} , , kf = t if data is transmitted = r if data is received = s if data is personal da = data nb = number of bytes of data av = returned authentication value (eight bytes) md = CBC for CBC mode = CFB for CFB mode This command uses DES in the authentication mode to calculate an eight-byte authentication value on nb bytes of data at da. If kf = t or s then the data key and IV which have been previously loaded into transmit active storage will be used. If kf = r the key and IV in receive key ac- tive storage will be used. The value of md Indicates which of two DES encryption modes are desired. -19-. 9.15 CIPHER BLOCK CHAINING (CBCE AND CBCD) CBC E: pt ct nb} { , , CBCD: {pt, ct, nb} pt = plain text ct = cipher text nb = number of bytes For encryption, CBCE, nb bytes of data starting at pt are encrypted in the CBC mode and the cipher is returned starting at ct. For decryption, nb bytes of data at ct are decrypted and returned to pt If nb is not a multiple of . eight, then the CBC mode is used until b < 8 bytes remain. The final b bytes are encrypted by exclusive or'ing them with the first b bytes of the next DES output block. DK and IV must be in the active user memory otherwise an error mes- sage is returned. Encryption uses the transmit IV and DK while decryption uses the receive IV and DK 9.16 CIPHER FEEDBACK (CFBE AND CFBD) CFBE: {pt, ct, nb} CFBD: {pt, ct, nb} pt = plain text ct = cipher text nb = number of bytes As described for the CBC commands, nb bytes are either encrypted or decrypted. Encryption uses the transmit IV and DK while decryption uses the receive values. If the re- quired IV and DK values have not been loaded an error mes- sage will be returned. 10. DIGITAL SIGNATURES 10.1 RATIONALE Recall that digital signatures are possible with public key algorithms because one cannot decrypt another person's data even though anyone with the public key can encrypt data intended for that person. This is because the decrypt key is not shared. Since the KNF combines identifiers with in- terchange keys for protection against substitution and -20-. j employs separate encryption and decryption key storage, one cannot encrypt data In a key that was generated by another user. Therefore, signatures are possible. Suppose user i generates a key using the GDK command and sends it to user j. The encrypted data key would be of the form: ED = E[IKp XOR (i II j)](DKij) where IKp is the interchange key for interchange p and DKi indicates a data key generated by i for transmission to j. Whenever i generates a key his identifier is always leftmost In the identifier pair used in the encryption of the key. The only way user j can load DKij is by loading it as a re- ceive key. Separate transmit and receive key registers are required. If j tries to load DKij as a transmission key for the encryption of data going to i, the cryptomodule will use (j II i) instead of (i II j) when decrypting ED. If j tries uto sed.load (Seethe theke Ly DK a cs omma anp ders io nna sl ectke iy o, n th 9,en C( Oj MMIAINDj S) .)will Wheb ne DKij is loaded as a receive key, only the decryption com- mands have access to it. 10.2 EXAMPLE Suppose user i generates ED as before. He may then use the EIV command to generate an encrypted IV of the form: EI = E [DKi j ] ( IV) Next, he may encrypt a signature, S, under DKij and send ED, EI, and S to j. User j may load IV and DKij in the active receive state by the LIV and LDK commands, and decrypt the encrypted signature to recover S. There is no way that j can alter S to a particular S' and encrypt it under DKij be- cause there is no way for to get DKij into the transmit j data key active storage. If user generates his own encrypted data key, it will j be of the form: E IKp XOR (j i)](DKji). He may encrypt a signature S' under[ DKjl but heI I cannot claim that it came from i because he could be challenged to decrypt the en- crypted signature. To do so would have to load DKji by j submitting E[IKp XOR (j II 1)] (DKjl) to the LDK command with kf = r. The cryptomodule would not load the correct DKji because it would use (1 II j) instead of (j II i) as the identifier pair. Thus, the signature would be garbled. Of course, user j may send a signature S' to user i -21-encrypted under the data key, DKjl, in a similar manner as described above. (See the Illustration below.) Separate Transmit and Receive Key Storage User User 1 j transmit: IVl DKl j S > receive: IVl DKl j receive: IV2 DKjl < S' transmit: IV2 DKjl Any message may be regarded as a signature. No addi- tional keys or commands are required. All user needs to j do is keep E[IKp XOR (1 j)](DKlj), E[DKij](IV), and the encrypted signature in oI rI der to be able to prove that S was sent to him from 1. User j may also wish to keep S as well. 10.3 THE AUTHENTICATION VALUE AS A SIGNATURE The signature, S, may be an entire plain text message, but it may be undesirable to store the cipher text of long messages. In such cases one may use the DAUT command to calculate an authentication value which Is a cryptographic function of every bit of data. This value could then be used as the signature. Signatures should be large enough to provide adequate security. At least 64 bits are recommend- ed. S must be encrypted as in the previous example. Other- wise, the receiver could modify the message and calculate the correct signature for the new message using the DAUT command with the correct key in the receive active memory. This is because, unlike encryption and decryption, the DAUT command with kf = t gives the same output as when kf = r as long as the same key is used in both transmit and receive active memory. If one is not concerned with proving that the receiver did not modify the Incommlng message, then the authentica- tion value need not be encrypted. Suppose that It is only necessary that the receiver knows the correct transmitter of the message and that it has not been altered. The transmitter, user 1, may generate E[IKp XOR (1 j)](DKlj) I I and E[DKij](IV), and load DKlj and IV into transmit active memory. He may then use the DAUT command with kf = t to generate an authentication value, AV . User 1 may then send the following to j: -22-. s clear message, E[IKp XOR (i || j)](DKlj), E[DKlj](IV), AV User may authenticate the message by loading DKij and IV j into active receive state and then using DAUT with kf = r to calculate AV If it matches, then the message must have . come from i. If user k sent the message, the encrypted data key would have the form: E [ IKp XOR (k II j)](DKkj), and the authentication value would be, AV. If thought that it j was from i, then when he executes LDK, (i j) instead of (k II j) would be used to decrypt the data1 | key. Therefore, the wrong data key would be loaded. 10.4 NONPUBLIC KEY VERSUS PUBLIC KEY SIGNATURES A digital signature capability may be implemented in the KNS because the receiver of an encrypted data key can only load the key into his receive active memory and can, therefore, only decrypt with it. We have assumed that the KNF of each host is physically secured from all users and that shared keys are securely distributed. One must guard against both disclosure and substitution of keys. If one could gain knowledge of the shared key, he could forge all signatures sent between both facilities. Of course, all keys encrypted under the shared key would also be comprom- ised. Thus, the common key must be secured at the transmit and receive KNF's. With public key algorithms, the secret key requires protection against disclosure and substitution while the public key must be protected from substitution. If a bogus key is substituted for the transmitter's public key, then false signatures can be sent to the receiver. 11. ILLUSTRATIVE EXAMPLE 11.1 INITIALIZATION Suppose cryptography were to be added to a computer network. First, each host would have to be provided with a KNF and the necessary interface. Then interchange keys would have to be generated and distributed. Once the inter- change keys are loaded directly into the cryptofaci 1 it ie and the authorized users are assigned unique identifiers and passwords, the security officer at each facility can ini- tialize the passwords of the authorized users by using the IPW command. -23-11.2 THE TRANSMITTER A user may then authenticate and become active by using the RAS command. He could change his password to a secret value known only to himself by the CPW command. Next he may want to generate data keys using GDK. Suppose he is on host 1, then GDK: {1, i, ed} generates a personal data key and GDK: {1, j, ed} generates a shared data key for use with user j at host 1. GDK: {5, k, ed} generates a shared data key for use with user k over interchange 5. Interchange 5 may be the interchange between host 1 and host 5. When he has an encrypted data key, say E[IKp XOR (i 1 I j)](DKij), user 1 can load the key using LDK. LDK with kf = t, in = p, sp = j, and ed = E [ IKp XOR (i II j)](DKij) loads DKij into the transmit active key storage. The user must keep track of the fact that kf = t and in = p from the time the key is generated to when the key is loaded. If the key is stored for future use, then the values of kf and in re- quired by the LDK command should also be stored. User i may then generate an IV using GIV and load the IV into the transmit active IV storage. After he sends the encrypted DKij and IV to j, he is ready to encrypt data intended for user j. Of course if he is on-line with user j, he must es- tablish contact with identify himself, and send him the j, encrypted DKij and IV. If he is on-line he should require an appropriate response from to insure that he is being j received. User i may encrypt in either the CBC or C FB modes. He should include a message number, the date, and the time in his plain text so that old valid messages from i to j cannot be played back to j. He may also use DAUT to calculate a digital signature which is encrypted before transmission. User i may use his personal encrypted key, E[IK1 XOR (i i)](DKii) to encrypt a personal file and then store the I I encrypted key with the cipher or in a personal key file. Finally, he can log out of active status using the LAU com- mand. If not, the system should automatically log him out after a specified time period or when he logs off the sys- tem, whichever comes first. 11.3 THE REG EIVER Once user is active, and has received the encrypted j DKij, IV, and data, he may use LDK and LIV to load the re- ceive active storage. He can then decrypt and check the signature to insure that it is correct. Note that the same data key may be used for both encryption and digital signa- tures. If j wishes he can generate a DKji to communicate securely to i, but communications from j to i will not be -24-encrypted with the same data key as communications from i to j • 11.4 KEY SUPERSESSION Interchange keys are generated in an unpredictable manner in a highly protected environment outside of the net- work. At key change time, the current IK's are stored as old IK's and new IK's are entered as current IK's. The security officer uses RPW to reencrypt each user's encrypted password. The system tells each user when he becomes active to use the RDK command to reencrypt his data keys. When keys are changed, the old keys no longer stored in the KNF should be securely stored along with their effective dates. These keys may be needed to decrypt old files or to validate old signatures whose data keys were not reencrypted. 12. SUMMARY The Key Notarization System can provide secure authen- tication and encryption with limited protocol requirements in a variety of network configurations. Host operating sys- tems must protect plain text and maintain user identity once authentication is complete, but the host need not protect keys from either disclosure or substitution. A set of KNF commands is defined for key management functions as well as for the approved DES modes of operation. The secure distri- bution of data keys is attained by encryption and the use of identifiers for key notarization. The system features on- line and off-line applications, local key generation, and a digital signature capability. -25-. APPENDIX The key and Initialization vector generator described here has not been analyzed either for its quality as a pseu- dorandom number generator or for its security. It is merely presented as an example which may be altered or replaced at a later date E[X](Y) represents the DES encryption of Y under key, X, In the ECB mode. Let FIK be the facility interchange key, and let V be a seed value. V may be initially set to any number. Let DT be the date-time word that is passed to the KNF from the host on each key or initialization vector generation command. A 64-bit vector, R is generated as fol- lows : I = E[FIK] (DT) R = E [FIK] (I XOR V) and a new V is given by V = E[FIK](R XOR I). If the GDK command made the call, then a data key is created by resetting every eighth bit of R so that the modu- lo 2 sum of the bits of each 8-bit byte is odd. If the GIV command made the call, R is used directly as the 64-bit ini- tialization vector. -26-REFERENC ES Branstad, Dennis K., Encryption Protection in Com- puter Data Communications, IEEE Fourth Data Communi- cations Symposium, 7-9 Oct. 1975. Data Encryption Standard, National Bureau of Stan- dards (U.S.), Federal Information Processing Stan- dards Publication (FIPS PUB) 46, National Technical Information Service, Springfield, VA (1977). Diffie, W. and Hellman, M., New Directions in Cryp- tography, IEEE Trans. Inform. Theory, vol. IT-22, Nov. 1976. Ehrsam, W. F., Matyas, S. M., Meyer, C. H. and Tuch- man, W. L., A Cryptographic Key Management Scheme for Implementing the Data Encryption Standard, IBM Systems Journal, vol. 17 no. 2, 1978. Everton, J., A Hierarchical Basis for Encryption Key Management in a Computer Communications Network, Trends and Applications: 1978 Proc., IEEE Computer Society May 978 , 1 . Needham, Roger M. and Schroeder, Michael D., Using Encryption for Authentication in Large Networks of Computers, Communications of the ACM, Dec. 1978. Popek, Gerald J. and Kline, Charles S., Encryption Protocols, Public Key Algorithms and Digital Signa- tures in Computer Networks, Foundations of Secure Computation, Academic Press, 1978. Rivest, R., Shamir, A. and Adleman, L., A Method for Obtaining Digital Signatures and Public Key Cryp- tosystems, Commun. ACM, Feb. 1978. -27-FIGURE 1: A FOUR HOST NETWORK -28-) Figure 2; Password and Key Storage KNF MEMORY AT HOST 1 Current Old IKl IKl IK2 IK2 IK3 IK3 Transmit Receive i. IVt DKt IVr DKr (for a limited number of active users) (IKl equals host I's facility interchange key) (IK2 is used to exchange keys with host 2) SYSTEM MEMORY AT HOST 1 i E[ IKl XOR (i M i)] (PWi) . j. E[IK1 XOR ( j II j) ] (PW j) k. E[ IKl XOR (k II k) (PWk) ] USER i's MEMORY AT HOST 1 Nonshared keys Shared keys E[IK1 XOR (i 1)](DK1) E[IK2 XOR (i j)](DKi j) E[IK1 XOR (i I I i)](DK2) (shared with uI sI er j at host 2) E[IK1 XOR (i I I i)](DK3) I I E[IK1 XOR (i i)](DK4) E[IK5 XOR (i Ilk)] (DKik) I I (shared with user k at host 5) Mm)] E[IK7 XOR (i (DKim) (shared with user m at host 7 -29-NBS-114A ""SV. 9-78) U.S. DEPT. OF COMM. 1. PUBLICATION OR REPORT NO. 2.Gov't. Accession NoJ3.jtecijst^i^t'iAce^ss^SonMo. BIBLIOGRAPHIC DATA sp 500-54 SHEET 4. TITLE AND SUBTITLE 5. Pubiicaiion Date October 1979 A KEY NOTARIZATION SYSTEM FOR COMPUTER NETWORKS 6.PerforffiiftgOrganization Code 7. AUTHOR(S) 8. PerformingOrgan. ReportNo. Miles E. Smid 9. PERFORMING ORGANIZATION NAME AND ADDRESS kVWork UnitNo. NATIONAL BUREAU OF STANDARDS DEPARTMENT OF COMMERCE 11. Contract/GrantNo. WASHINGTON, DC 20234 12. SPONSORING ORGANIZATION NAME AND COMPLETE ADDRESSrs*reo(. City, state. ZIP) 13. Type of Report& Period Covered Final Same as number 9 15. SUPPLEMENTARY NOTES Library of Congress Catalog Card Number: 79-60OI6O Documentdescribes a computer program; SF-185, FIPSSoftware Summary, is attached. I I 16. ABSTRACT (A 200-wordor leaa tactual summery ofmo3tsigriUicant information. Ifdocument includes a significant bibliography or literature survey, mention ithere.) A cryptographic, key notarization system is proposed for computer networks to protect personal (nonshared) files, to communicate securely both on and off-line with local and remote users, to protect against key substitution, to authenticate system users, to authenticate data, and to provide a digital signature capability using a nonpublic key encryption algorithm. The system is implemented by addition of key notarization facilities which give users the capability of exercising a set of commands for key management as well as for data encryption functions. Key notarization facilities perform notarization which, upon encryption, seals a key or password with the identities of the transmitter and intended receiver. 17. KEYWORDS(six to twelve entries:alphabetical order; capitalize only the first letterof the first keywordunless apropername; separated by semicolons) Cryptography; digital signatures; encryption; identifiers; key management; key notarization 18. AVAILABILITY Unlimited 19. SECURITY CLASS 21. NO. OF (THIS REPORT) PRINTED PAGES 35 I I ForOfficial Distribution. Do Not Release to NTIS UNCLASSIFIED O 20r 4d 0e 2r ,F Sr Dom StSu op c. k o Nf o.Do Sc N, 00U 3. -S 0. 03G -o 0v 2er 1n 3me 0n -t 0Printing Office, Washington, DC 20. S (TE HC IU SR PI AT GY E)CLASS 22. P $r 1ic .e 75 I IO Vr Ad .er 2F 2r 1o 6m 1National Technical Information Service (NTIS), Springfield, UNCLASSIFIED USCOMM-DC JJ.U.S. GOVERNMENT PRINTING OFFICE: 1979-3 1 1-046/285. NBS TECHNICAL PUBLICATIONS PERIODICALS NOTE: The principal publication outlet for the foregoing data is the Journal of Physical and Chemical Reference Data (JPCRD) JOURNAL OF RESEARCH—The Journal of Research of the published quarterly for NBS by the American Chemical Society I ! National Bureau ofStandards reports NBS research and develop- (ACS)and the American InstituteofPhysics(AIP). Sub.scriptions, I I wm he in ct hin tt hh eos Be ud ri es ac uipl ii snes aco tf ivt eh .ep Th hy es si ecal ina cn ld ude eng pi hn ye se ir ci sn ,g cs hci ee mn ic se ts ryi ,n r Ne Wpr ,int Ws a, sa hn id ngs tu op np ,le Dme Cnt 2s 00a 5v 6a .ilable from ACS, 1155 Sixteenth St.. engineering, mathematics, and computer sciences. Papers cover a — I broad range of subjects, with major emphasis on measurement Building Science Series Disseminates technical information I methodologyandthebasictechnologyunderlyingstandardization. developed at the Bureau on building materials, components, j Also included from time to time are survey articles on topics systems, and wholestructures. Theseries presentsresearch results, ; closely related to the Bureau's technical and scientific programs. testmethods,andperformancecriteriarelatedtothestructuraland As a special service to subscribers each issue contains complete environmental functions and the durability and safety charac- citations to all recent Bureau publications in both NBS and non- teristics of building elements and systems. NBSmedia. Issuedsix timesayear.Annualsubscription;domestic — Technical Notes Studies or reports which are complete in them- $17; foreign $21.25. Single copy, $3 domestic; $3.75 foreign, selves but restrictive in their treatment ofa subject. Analogous to I' tN iO onTE A: "T Ph he ysJ io cu srn aa nl dwa Cs hef mo ir sm te rr yl "y p au nb dli Ss eh ce td ioi nn t Bwo "Ms ae tct hi eo mn as: tiS ce ac l- tm ro en ao tg mr ena tph os fb tu ht e sn uo bt jes co t c ao rm eap .re Oh fe tn es niv se eri vn e s ac sop ae vo er hicd le efin fi ot riv fe inain l ;i Sciences." reportsofwork performed at NBS underthesponsorshipofother ii DIMENSIONS/NBS—This monthly magazine is published to in- government agencies. 1 I sf tt eo u cr d hm e nn os t lc s oi ,e gn yt a ,i ns wdt is, tc he on png rsi iun me m ae e rr r ys s, emb ou pfs hi atn she e is ss l oaa t nn esd wt oi ran kddu v as a tt nr Ncy e Bs Sle .a id n Te hr ss ec, i met ane gca ec ah ze a ir n ns d e, V puo bl lu in st ha er dy byPr to hd eu Dc et parSt ta mn ed na trd os f— CoD mev me el ro cp eed in Pu an rd ter 10, Tp ir to lc eed 15u ,re os f I highlights and reviews such issues as energy research, fire protec- the Code of Federal Regulations. The standards establish r IiI ' t t shi ie to oa an nl n, ,t dhb aiu t rai drl n sed d pi aon s nrg a t df st ee t tc ty eh , h cn e ho a nl rn io ed qsg uuy c l e, t so s ,m ne s ot pu fr rmi oBec pur ec r ro e tpn iarv euoe sdr u ps oci r fto on g, mp r ae ap tro m tfl s eol rru imt nai ao n nmn c deea a.b msa auI tt n r ee e rm a ime d aen d lnt i st, - , c c sn ha o uat n pri c pao e lcn r t ea en ml rel eidy ns ttir ine c tt sc oeo r og e f tn s hti t esz he ew ad i cp tt rr ih o ve d iq a tuu icbi eta sr sse .i om s fe Nn f Bt tor hs S ecf aoo pdr rm m iimp vnr ao i to sn ed tu ec u srt en ss cd t, e t ohr ria s sn t sd a p tn r adp o nir dgno argv rai dmod ife za it sa nhl ge al engineering standards and services, instrumentation, and organizations. i automatic data processing. Annual subscription: domestic $11; Consumer Information Series— Practical information, based on J i foreign $13.75. NBSresearch andexperience,coveringareasofinteresttothecon- NONPERIODICALS sumer. Easily understandable language and illustrations provide i — useful background knowledge for shopping in today's tech- i Monographs Major contributions to the technical literature on nological marketplace. ! varioussubjects related tothe Bureau'sscientificand technical ac- Order the above NBS publicationsfrom: Superinlendeni ofDocu- t Hi avi nt die bs. ooks— Recommended codes of engineering and industrial m Oe rn dt es r. tG ho ev fe or ln lm oe wn int gP Nri Bn Stin pg ublOf if ci ac te i, onsW —ash Fi In Pg Sto an, ndD NC BS2 l0 R4 '0 s2. — from I practice(includingsafetycodes)developed in cooperation with in- theNationalTechnicalInformationServices.Springfield. VA 22161 terested industries, professional organizations, and regulatory ; bodies. Federal Information Processing Standards Publications (FIPS Special Publications— Include proceedings of conferences spon- PUB)— Publications in this series collectively constitute the sored by NBS, NBS annual reports,andotherspecialpublications Federal Information Processing Standards Register. The Register appropriate to thisgroupingsuch aswallcharts,pocketcards,and serves as theofficial sourceofinformation in the Federal Govern- bibliographies. ment regarding standards issued by NBS pursuant to the Federal Applied Mathematics Series— Mathematical tables, manuals, and Property and Administrative Services Act of 1949 as amended. II I es bt i nou gld aoi gge i es s dtso , if nm ss a cp t ie ehc nei tfa in fl a it cii c an it ne a dr ne ss t,t ecc ht noo im cp ap u lh ty wes oi rc ri kps .t rs o, gre an mg mi en ree sr ,s, anc dhem oi ts ht es r, s e oP c fu ub t Tl iii tvc le eL Or 1a 5dw e Cr8 F9 1 R- 13 70 1 (6 7 Co(( d37 89 eF oSt fRat F. 1 e2 d31 e11 r52 a,7 l) d, a Rt ea e gn udd laMa tas iy oni sm 1 )1p .,le 1m 9e 73n )te ad ndby ParE tx- 6 National Standard Reference Data Series— Provides quantitative NBS Interagency Reports(NBSIR)— A special series ofinterim or data on the physical and chemical properties of materials, com- final reports on work performed by NBS for outside sponsors piled from the world's literature and critically evaluated. (both government and non-government). In general, initial dis- Developed underaworldwideprogramcoordinatedbyNBSunder tribution is handled by the sponsor; public distribution is by the the authority of the National Standard Data Act (Public Law National Technical Information Services, Springfield, VA 22161, 90-396). in paper copy or microfiche form. BIBLIOGRAPHIC SUBSCRIPTION SERVICES Thefollowingcurrent-awarenessandliterature-surveybibliographies Superconducting Devices and Materials. A literature survey issued are issued periodically by the Bureau: quarterly. Annual subscription: S30. Please send subscription or- CryogenicDataCenterCurrentAwarenessService.A literaturesur- dersand remittances fortheprecedingbibliographicservicestothe vey issued biweekly. Annual subscription: domestic $25; foreign National Bureau of Standards, Cryogenic Data Center (736) Boulder, CO 80303. $30. LiquefiedNaturalGas.Aliteraturesurveyissuedquarterly. Annual subscription: $20.U.S. DEPARTMENT OF COMMERCE National Bureau of Standards Washington. D.C. 20234 POSTAGE AND FEES PAID U.S. DEPARTMENT OF COMMERCE OFFICIAL BUSINESS COM-215 PenaltyforPrivateUse,$300 SPECIALFOURTH-CLASSRATE BOOK