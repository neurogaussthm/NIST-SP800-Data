# Abstract
Bluetooth wireless technology is an open standard for short-range radio frequency communication used primarily to establish wireless personal area networks (WPANs). It has been integrated into many types of business and consumer devices. This publication provides information on the security capabilities of Bluetooth and gives recommendations to organizations employing Bluetooth wireless technologies on securing them effectively. The Bluetooth versions within the scope of this publication are versions 1.1, 1.2, 2.0 + Enhanced Data Rate (EDR), 2.1 + EDR, 3.0 + High Speed (HS), 4.0, 4.1, and 4.2. Versions 4.0 and later support the low energy feature of Bluetooth.

# Executive Summary
Bluetooth is an open standard for short-range radio frequency (RF) communication. Bluetooth wireless technology is used primarily to establish wireless personal area networks (WPANs). Bluetooth has been integrated into many types of business and consumer devices, including cell phones, laptops, automobiles, medical devices, printers, keyboards, mice, headsets, and, more recently, medical devices and personal devices (such as smart watches, music speakers, home appliances, fitness monitors, and trackers). This allows users to form ad hoc networks between a wide variety of devices to transfer voice and data. This document provides an overview of Bluetooth wireless technology and discusses related security concerns.

Several Bluetooth versions are currently in use in commercial devices, while the most current version can be found at bluetooth.com. At the time of writing, Bluetooth 4.0 (adopted June 2010) is the most prevalent. The most recent versions include Bluetooth 4.1 and Bluetooth 4.2. Bluetooth 4.1 (adopted December 2013) improved the strengths of the Basic Rate/Enhanced Data Rate (BR/EDR) technology cryptographic key, device authentication, and encryption by making use of Federal Information Processing Standard (FIPS)-approved algorithms. Bluetooth 4.2 (adopted December 2014) improved the strength of the low energy technology cryptographic key by making use of FIPS-approved algorithms, and provided means to convert BR/EDR technology keys to low energy technology keys and vice versa. This publication addresses the security of all versions of Bluetooth.

Bluetooth wireless technology and associated devices are susceptible to general wireless networking threats, such as denial of service (DoS) attacks, eavesdropping, man-in-the-middle (MITM) attacks, message modification, and resource misappropriation. They are also threatened by more specific attacks related to Bluetooth wireless technology that target known vulnerabilities in Bluetooth implementations and specifications. Attacks against improperly secured Bluetooth implementations can provide attackers with unauthorized access to sensitive information.# Recommendations for Bluetooth Security

Unauthorized use of Bluetooth devices and other systems or networks to which the devices are connected can pose significant security risks. To improve the security of Bluetooth implementations, organizations should implement the following recommendations:

## Use Strongest Bluetooth Security Mode

Organizations should use the strongest Bluetooth security mode that is available for their Bluetooth devices. The Bluetooth specifications define several security modes, and each version of Bluetooth supports some, but not all, of these modes. The modes differ primarily by the point at which the device initiates security; hence, these modes define how well they protect Bluetooth communications and devices from potential attack. Some security modes have configurable security level settings which affect the security of the connections.

### Recommended Security Modes

- **For Bluetooth 4.1 devices** that have BR, EDR, and High Speed (HS) features:
- **Security Mode 4, Level 4** is recommended because it requires Secure Connections, which uses authenticated pairing and encryption using 128-bit strength keys generated using FIPS-approved Advanced Encryption Standard (AES) encryption.

- **For Bluetooth 2.1 through 4.0 devices**:
- **Security Mode 4, Level 3** is the most secure.

- **For Bluetooth 2.0 and older devices**:
- **Security Mode 3** is recommended.

### Security Mode Characteristics

- **Security Modes 2 and 4** can also use authentication and encryption, but do not initiate them until after the Bluetooth physical link has already been fully established and logical channels partially established.
- **Security Mode 1** devices never initiate security and therefore should never be used.

### Low Energy Bluetooth Security

For the low energy feature of Bluetooth (introduced in Version 4.0 and updated in 4.1 and 4.2):
- **Security Mode 1 Level 4** is the strongest mode because it requires authenticated low energy Secure Connections pairing with Elliptic Curve Diffie-Hellman (ECDH) based encryption.
- **Security Mode 1 Level 3** requires authenticated pairing and encryption but does not use ECDH-based cryptography and thus provides limited eavesdropping protection due to weak encryption.

Other security modes/levels allow unauthenticated pairing (meaning no MITM protection is provided during cryptographic key establishment), and some do not require any security at all. The available modes vary based on the Bluetooth specification version supported by the device, so organizations should choose the most secure mode available for each case.

## Address Bluetooth in Security Policies

Organizations should address Bluetooth wireless technology in their security policies and change default settings of Bluetooth devices to reflect the policies. A security policy that defines requirements for Bluetooth security is the foundation for all other Bluetooth-related countermeasures.

### Key Components of a Security Policy

The policy should include:
- A list of approved uses for Bluetooth.
- A list of the types of information that may be transferred over Bluetooth networks.
- Requirements for selecting and using Bluetooth personal identification numbers (PINs), if they are used.

A baseline configuration for Bluetooth default settings should accompany the security policy.# Bluetooth Security Policy Guidelines

## Technical Recommendations
The checklist in Table 4-2 provides a "Technical Recommendations" section which may be used as a guide. After establishing a Bluetooth security policy, organizations should ensure that Bluetooth devices’ default settings are reviewed and changed as needed to comply with the security policy requirements.

For example, a typical requirement is to disable unneeded Bluetooth profiles and services to reduce the number of vulnerabilities that attackers could attempt to exploit. When available, a centralized security policy management approach should be used to ensure device configurations are compliant.

## User Awareness
Organizations should ensure that their Bluetooth users are made aware of their security-related responsibilities regarding Bluetooth use. Annual required security awareness programs should be updated to include Bluetooth security policy guidelines.

A security awareness program helps educate and train users to follow security practices that protect the assets of an organization and prevent security incidents. For example, users should be provided with a list of precautionary measures they should take to better protect handheld Bluetooth devices from theft.

Users should also be made aware of other actions to take regarding Bluetooth device security, such as:
- Ensuring that Bluetooth devices are turned off when they are not needed to minimize exposure to malicious activities.
- Performing Bluetooth device pairing as infrequently as possible and ideally in a physically secure area where attackers cannot observe passkey entry and eavesdrop on Bluetooth pairing-related communications.

## 1. Introduction

### 1.1 Purpose and Scope
The purpose of this document is to provide information to organizations on the security capabilities of Bluetooth and provide recommendations to organizations employing Bluetooth wireless technologies on securing them effectively. The Bluetooth versions within the scope of this publication are versions 1.1, 1.2, 2.0 + Enhanced Data Rate (EDR), 2.1 + EDR, 3.0 + High Speed (HS), 4.0, 4.1, and 4.2. Bluetooth with low energy functionality is present in 4.0 and later. Bluetooth 5.0 is not in the scope of this document.

### 1.2 Audience and Assumptions
This document discusses Bluetooth wireless technologies and security capabilities in technical detail. This document assumes that the readers have at least some operating system, wireless networking, and security knowledge. Because of the constantly changing nature of the wireless security industry and the threats and vulnerabilities to the technologies, readers are strongly encouraged to take advantage of other resources (including those listed in this document) for more current and detailed information.

The following list highlights people with differing roles and responsibilities that might use this document:
- Government managers (e.g., chief information officers and senior managers) who oversee the use and security of Bluetooth within their organizations.
- Systems engineers and architects who design and implement Bluetooth wireless technologies.# Technologies

- Auditors, security consultants, and others who perform security assessments of wireless environments
- Researchers and analysts who are trying to understand the underlying wireless technologies.

## 1.3 Document Organization

The remainder of this document is composed of the following sections and appendices:

- **Section 2** provides an overview of Bluetooth wireless technology, including its benefits, technical characteristics, and architecture.
- **Section 3** discusses the security features defined in the Bluetooth specifications and highlights their limitations.
- **Section 4** examines common vulnerabilities and threats involving Bluetooth wireless technologies and makes recommendations for countermeasures to improve Bluetooth security.
- **Appendix A** provides a glossary of terms.
- **Appendix B** provides a list of acronyms and abbreviations used in this document.
- **Appendix C** lists Bluetooth functions.
- **Appendix D** lists Bluetooth references.
- **Appendix E** lists Bluetooth online resources.

## 2 Overview of Bluetooth Wireless Technology

Bluetooth is an open standard for short-range radio frequency (RF) communication. Bluetooth is used primarily to establish wireless personal area networks (WPANs). Bluetooth has been integrated into many types of business and consumer devices, including cell phones, laptops, automobiles, printers, keyboards, mice, headsets, and, more recently, medical devices and personal devices (such as smart watches, music speakers, home appliances, fitness monitors, and trackers). This allows users to form ad hoc networks between a wide variety of devices to transfer voice and data.

Bluetooth is a low-cost, low-power technology that provides a mechanism for creating small wireless networks on an ad hoc basis, known as piconets. A piconet is composed of two or more Bluetooth devices in close physical proximity that operate on the same channel using the same frequency hopping sequence. An example of a piconet is a connection between a cell phone and a headset using Bluetooth wireless technology.

Bluetooth piconets are often established on a temporary and changing basis, which offers communications flexibility and scalability between mobile devices. Some key benefits of Bluetooth are:

- **Cable replacement:** Bluetooth replaces a variety of cables, such as those traditionally used for peripheral devices (e.g., mouse and keyboard connections), printers, and wired headsets and earbuds that interface with desktops, laptops, cell phones, etc.
- **Ease of file sharing:** A Bluetooth-enabled device can form a piconet to support file sharing capabilities with other Bluetooth devices, such as laptops.
- **Wireless synchronization:** Bluetooth can provide automatic synchronization between Bluetooth-enabled devices. For example, Bluetooth allows synchronization of contact information between smartphones and automobiles.# Overview of Bluetooth Technology

## Introduction
Bluetooth technology allows devices to connect wirelessly and share internet access. For instance, a laptop can utilize a smartphone's personal hotspot via Bluetooth to gain internet connectivity.

## History
Bluetooth was conceived by Ericsson in 1994. A consortium of companies, including Ericsson, IBM, Intel, Nokia, and Toshiba, formed the Bluetooth Special Interest Group (SIG). This not-for-profit trade association was established to promote the development of Bluetooth products and to govern Bluetooth specifications. Bluetooth is standardized within the IEEE 802.15 Working Group for Wireless Personal Area Networks, which was formed in 1999 and is known as IEEE 802.15.1-2002.

## Bluetooth Wireless Technology Characteristics

### Frequency and Data Rates
Bluetooth operates in the unlicensed 2.4000 GHz to 2.4835 GHz Industrial, Scientific, and Medical (ISM) frequency band. This band is shared with various technologies, including the IEEE 802.11b/g/n wireless local area network (WLAN) standard, leading to a crowded environment for wireless transmissions.

### Frequency Hopping Spread Spectrum (FHSS)
Bluetooth employs frequency hopping spread spectrum (FHSS) technology for its transmissions. FHSS helps reduce interference and transmission errors, although it offers minimal transmission security.

- **Basic Rate (BR)/EDR Devices**: Communications between these devices utilize 79 different 1 MHz radio channels, changing frequencies approximately 1600 times per second for data/voice links and 3200 times per second during page and inquiry scanning. Each channel is used for a very short duration (e.g., 625 µs for data/voice links) before hopping to another channel in a pre-determined pseudo-random sequence.

### Bluetooth Low Energy (BLE)
Bluetooth low energy communication operates within the same frequency range as BR/EDR devices but divides it into 40 channels, each 2 MHz wide.

- **Channel Usage**: Three channels are designated for advertising (broadcasting data and connection setup), while the remaining 37 are used for data transmission.
- **Access Schemes**: BLE employs a time division multiple access (TDMA) scheme, where the first device sends a packet at a predetermined time, and the corresponding device responds after a set interval. These data exchanges are referred to as either Advertising or Connection Events.

### Radio Link Power Control
Bluetooth technology includes radio link power control, allowing devices to negotiate and adjust their radio power based on signal strength measurements. Each device can determine its received signal strength indication (RSSI) and request adjustments to the other device's radio power level, either increasing or decreasing the transmission power incrementally.# Bluetooth Technology Overview

This document provides an overview of Bluetooth technology, focusing on its power management, security features, and data rates.

## Power Management and Security

Bluetooth employs a combination of frequency hopping and radio link power control to conserve power and maintain signal characteristics within a preferred range. This combination offers limited protection against eavesdropping and malicious access.

### Frequency Hopping

The frequency-hopping scheme is primarily a technique to avoid interference, making it more challenging for adversaries to locate and capture Bluetooth transmissions compared to fixed-frequency technologies, such as those used in IEEE 802.11b/g. However, research indicates that the Bluetooth frequency hopping sequence for an active piconet can be determined using relatively inexpensive hardware and free open-source software.

## Bluetooth Device Classes

Bluetooth BR/EDR devices are categorized into three classes based on their power management capabilities.

| Class | Power Level (mW) | Power Level (dBm) | Operating Range (m) |
|-------|------------------|-------------------|----------------------|
| Class 1 | High | Up to +20 dBm | Up to 100 m |
| Class 2 | Medium | Up to +4 dBm | Up to 10 m |
| Class 3 | Low | Up to 0 dBm | Up to 1 m |

Most small, battery-powered devices are Class 2, while Class 1 devices typically include USB adapters for desktops and laptops, as well as access points and other mains-powered devices. Many Bluetooth low energy devices are designed to operate on very small batteries for extended periods.

## Discoverable and Connectable Modes

To facilitate communication between Bluetooth devices, two modes are specified: discoverable and connectable.

- **Discoverable Mode**: A device in this mode periodically monitors an inquiry scan physical channel and responds to inquiries with its device address, local clock (counter) value, and other necessary characteristics for paging and connecting.

- **Connectable Mode**: A device in connectable mode periodically monitors its page scan physical channel and responds to pages to initiate a network connection. The frequencies associated with the page scan physical channel are based on the device's Bluetooth address, making it essential to know the device's address and local clock for successful paging and connection.

## Data Rates

The following sections will cover Bluetooth BR/EDR/HS data rates, low energy technology, and dual-mode devices.

### 2.1.1 Basic, Enhanced, and High-Speed Data Rates

Bluetooth devices can support multiple data rates using native Bluetooth and alternate Media Access Control (MAC) and Physical (PHY) Layers. The specifications are designed to be backward compatible; a later specification device that supports higher data rates also supports the lower rates of earlier specifications (e.g., an EDR device also supports rates specified for BR devices).

#### 2.1.1.1 Basic Rate/Enhanced Data Rate

Bluetooth versions 1.1 and 1.2 support transmission speeds of up to 1 megabit per second (Mbps), known as Basic Rate (BR), and can achieve payload throughput of...

*(Note: The text cuts off here; additional information would be needed to complete this section.)*# Bluetooth Technology Overview

## 1. Introduction to Bluetooth Data Rates

Bluetooth technology has evolved over the years, introducing various specifications that enhance data rates and efficiency.

### 1.1 Basic Rate (BR) and Enhanced Data Rate (EDR)

- **Basic Rate (BR)**:
- Achieves a data rate of approximately 720 kilobits per second (kbps).
- Introduced in Bluetooth version 2.0.
- Uses Gaussian Frequency-Shift Keying (GFSK) modulation for a 1 Mbps data rate.

- **Enhanced Data Rate (EDR)**:
- Specifies data rates up to 3 Mbps with a throughput of approximately 2.1 Mbps.
- Utilizes:
- Ï/4 rotated Differential Quaternary Phase Shift Keying (DQPSK) for 2 Mbps.
- 8 Phase Differential Phase Shift Keying (8DPSK) for 3 Mbps.
- Note: EDR support is not mandatory for devices compliant with Bluetooth 2.0 or later.

### 1.2 High Speed with Alternate MAC/PHY

- **Bluetooth 3.0 + HS**:
- Introduced support for faster data rates using Alternate MAC/PHYs (AMP).
- The first supported AMP is IEEE 802.11-2007, which includes amendments from IEEE 802.11a through 802.11j.
- Designed to provide data rates up to 24 Mbps using Orthogonal Frequency-Division Multiplexing (OFDM) modulation.
- Note: This AMP is IEEE 802.11 compliant but not Wi-Fi compliant.

## 2. Bluetooth Low Energy

- **Bluetooth Low Energy**:
- Introduced in Bluetooth 4.0 and updated in 4.1 and 4.2.
- Formerly known as "Wibree" and "Ultra Low Power Bluetooth."
- Primarily designed for coin cell battery-powered devices such as medical devices and sensors.
- Key technology goals include:
- Lower power consumption.
- Reduced memory requirements.
- Efficient discovery and connection procedures.
- Short packet lengths.
- Simple protocols and services.

### 2.1 Key Differences Between BR/EDR and Low Energy

| Feature                     | BR/EDR                     | Low Energy                |
|-----------------------------|----------------------------|---------------------------|
| Power Consumption            | Higher                     | Lower                     |
| Memory Requirements          | Higher                     | Reduced                   |
| Discovery and Connection     | Standard                   | Efficient                 |
| Packet Lengths              | Longer                     | Short                     |
| Protocols and Services      | Complex                    | Simple                    |

## 3. Dual Mode Devices

- **Dual Mode Devices**:
- A Bluetooth 4.0 or later device may support both BR/EDR/HS and low energy.
- Example: A cell phone using an EDR link to a Bluetooth headset while concurrently connecting to a sensor via low energy to unlock and start the automobile.

## 4. Bluetooth Architecture

- **Ad Hoc Networks**:
- Bluetooth allows devices to establish ad hoc networks for easy connection without infrastructure.
- A Bluetooth client is defined as any device equipped with Bluetooth capabilities.# Bluetooth Protocol Overview

## Introduction
The Bluetooth specification provides separation of duties for performing stack functions between a host and a controller.

## Host and Controller Responsibilities
- **Host**: Responsible for higher layer protocols, such as:
- Logical Link Control and Adaptation Protocol (L2CAP)
- Service Discovery Protocol (SDP)

The host functions are performed by a computing device like a laptop or smartphone.

- **Controller**: Responsible for lower layers, including:
- Radio
- Baseband
- Link Control/Management

The controller functions are performed by an integrated or external (e.g., USB) Bluetooth adapter.

## Communication Between Host and Controller
The host and controller send information to each other using standardized communications over the Host Controller Interface (HCI). This standardized HCI allows hosts and controllers from different product vendors to interoperate. In some cases, the host and controller functions are integrated into a single device; Bluetooth headsets are a prime example.

## Bluetooth Network Topology
### Piconet
- In a piconet, one device serves as the master, with all other devices acting as slaves.
- BR/EDR piconets can scale to include:
- Up to 7 active slave devices
- Up to 255 inactive slave devices

### Bluetooth Low Energy
- Allows an unlimited number of slaves, known as the low energy Peripheral role, with the master being the low energy Central role.
- Other low energy device roles include:
- Broadcaster
- Observer

### Master and Slave Roles
- The master device controls and establishes the network, including defining the network’s frequency hopping scheme.
- Although only one device can serve as the master for each piconet, time division multiplexing (TDM) allows a slave in one piconet to act as the master for another piconet simultaneously, creating a chain of networks known as a scatternet.

### Scatternet
- A scatternet allows networking of several devices over an extended distance in a dynamic topology that can change during any given session.
- As a device moves toward or away from the master device, the topology may change, along with the relationships of the devices in the immediate network.

## Limitations of Scatternets
The Bluetooth core protocols provide no multi-hop network routing capabilities for devices involved in scatternets. For example, a device in one piconet cannot communicate with a device in another piconet without establishing an additional piconet between them.

## Low Energy Functionality
Low energy functionality supports a connectionless broadcast architecture where:
- **Broadcasters** (low energy device role) periodically send data.
- **Observers** (low energy device role) listen and consume that data.

This allows a device to transmit data to more than one peer at a time. The broadcasting function is a subset of the Advertising capability used in the low energy connection architecture.

## Bluetooth Security Features
This section provides an overview of the security mechanisms included in the Bluetooth protocol.# Bluetooth Security Overview

This document outlines the security specifications of Bluetooth, illustrating their limitations and providing a foundation for security recommendations.

## 1. Scope of Bluetooth Security

A high-level example of the scope of security for the Bluetooth radio path is depicted in Figure 3-1. In this example, Bluetooth security is provided between the phone and the laptop, while IEEE 802.11 security protects the WLAN link between the laptop and the IEEE 802.11 access point (AP). Communications on the wired network are not protected by Bluetooth or IEEE 802.11 security capabilities. Therefore, end-to-end security is not possible without using higher-layer security solutions atop the security features included in Bluetooth and IEEE 802.11.

## 2. Basic Security Services in Bluetooth

Five basic security services are specified in the Bluetooth standard:

- **Authentication**: Verifying the identity of communicating devices based on their Bluetooth address. Bluetooth does not provide native user authentication.
- **Confidentiality**: Preventing information compromise caused by eavesdropping by ensuring that only authorized devices can access and view transmitted data.
- **Authorization**: Allowing the control of resources by ensuring that a device is authorized to use a service before permitting it to do so.
- **Message Integrity**: Verifying that a message sent between two Bluetooth devices has not been altered in transit.
- **Pairing/Bonding**: Creating one or more shared secret keys and storing these keys for use in subsequent connections to form a trusted device pair.

The security services offered by Bluetooth and details about the modes of security are described below. Bluetooth does not address other security services such as audit and non-repudiation; if such services are needed, they should be provided through additional means.

## 3. Security Features of Bluetooth BR/EDR/HS

Bluetooth BR/EDR/HS defines authentication and encryption security procedures that can be enforced during different stages of communication setup between peer devices.

### 3.1 Link-Level vs. Service-Level Enforcement

- **Link-level enforced**: Authentication and encryption setup procedures which occur before the Bluetooth physical link is completely established.
- **Service-level enforced**: Authentication and encryption setup procedures which occur after the Bluetooth physical link has already been fully established and logical channels partially established.

### 3.2 Security Modes

Until Bluetooth 2.0, three modes were defined which specified whether authentication and encryption would be link-level enforced or service-level enforced, and that enforcement was configurable. In Bluetooth 2.1, a fourth mode was added which redefined the user experience during pairing, requiring that if both devices are Bluetooth 2.1 or later, they must use the fourth mode.

Cumulatively, the family of Bluetooth BR/EDR/HS specifications defines four security modes. Each Bluetooth device must operate in one of these modes, called Security Modes 1 through 4. These modes dictate when a Bluetooth device initiates security, not whether it supports security features.

- **Security Mode 1**: Devices are considered non-secure. Security functionality (authentication and encryption) is not enforced.# Bluetooth Security Modes

Bluetooth security is crucial for protecting devices and connections from potential attackers. The Bluetooth specification defines several security modes, each with different levels of security enforcement.

## Security Mode 1

- **Description**: In Security Mode 1, security is not initiated, making devices and connections vulnerable to attacks. Devices in this mode are considered "indiscriminate" and do not prevent other Bluetooth-enabled devices from establishing connections.
- **Participation**: If a remote device initiates security measures (such as pairing, authentication, or encryption requests), a Security Mode 1 device will participate.
- **Compatibility**: All Bluetooth 2.0 and earlier devices support Security Mode 1, while 2.1 and later devices can use it for backward compatibility.
- **Recommendation**: NIST recommends against using Security Mode 1.

## Security Mode 2

- **Description**: Security Mode 2 is a service level-enforced security mode where security procedures can be initiated after link establishment but before logical channel establishment.
- **Local Security Manager**: A local security manager controls access to specific services, maintaining policies for access control and interfacing with other protocols and device users.
- **Access Control**: Different security policies and trust levels can be defined for applications with varying security requirements. Access can be granted to some services while restricting others.
- **Authorization**: This mode introduces the concept of authorization, determining whether a specific device can access a specific service.
- **Service Discovery**: Bluetooth service discovery can occur before any security challenges, but all other services should require authentication, encryption, and/or authorization.
- **Implementation**: The authentication and encryption mechanisms are implemented in the controller. All 2.0 and earlier devices support Security Mode 2, while 2.1 and later devices can only support it for backward compatibility.

## Security Mode 3

- **Description**: Security Mode 3 is a link level-enforced security mode where Bluetooth devices initiate security procedures before the physical link is fully established.
- **Mandatory Security**: Authentication and encryption are required for all connections, meaning service discovery cannot occur until these processes are completed.
- **Service-Level Authorization**: Once authenticated, service-level authorization is typically not performed by a Security Mode 3 device. However, NIST recommends performing service-level authorization to prevent "authentication abuse," where an authenticated remote device uses a Bluetooth service without the local device owner's knowledge.
- **Compatibility**: All 2.0 and earlier devices support Security Mode 3, while 2.1 and later devices can only support it for backward compatibility.

## Security Mode 4

- **Description**: Similar to Security Mode 2, Security Mode 4 (introduced in Bluetooth 2.1 + EDR) is a service-level-enforced security mode where security procedures are initiated after physical and logical link setup.
- **Secure Simple Pairing (SSP)**: Security Mode 4 utilizes Secure Simple Pairing (SSP), which involves ECDH key exchange mechanisms to enhance security.

----

This overview of Bluetooth security modes highlights the importance of implementing appropriate security measures to protect devices and connections from unauthorized access and potential threats.# Bluetooth Security Overview

## Link Key Generation

The agreement is utilized for link key generation (see Section 3.1.1). Until Bluetooth 4.0, the P-192 Elliptic Curve was used for link key generation, and the device authentication and encryption algorithms were identical to the algorithms in Bluetooth 2.0 + EDR and earlier versions.

### Bluetooth 4.1 Enhancements

Bluetooth 4.1 introduced the Secure Connections feature, which allowed the use of the P-256 Elliptic Curve for link key generation. In Bluetooth 4.1, the device authentication algorithm was upgraded to the FIPS-approved Hash Message Authentication Code Secure Hash Algorithm 256-bit (HMAC-SHA-256). The encryption algorithm was upgraded to the FIPS-approved AES-Counter with CBC-MAC (AES-CCM), which also provides message integrity.

### Security Requirements

Security requirements for services protected by Security Mode 4 must be classified as one of the following:

- **Level 4:** Authenticated link key using Secure Connections required
- **Level 3:** Authenticated link key required
- **Level 2:** Unauthenticated link key required
- **Level 1:** No security required
- **Level 0:** No security required (Only allowed for SDP)

Whether or not a link key is authenticated depends on the SSP association model used (see Section 3.1.1.2). When both the local and remote device support the Secure Connections feature, the link key is said to be generated using Secure Connections, which is the NIST recommended security.

### Security Mode 4

Security Mode 4 requires encryption for all services (except Service Discovery) and is mandatory for communication between 2.1 and later BR/EDR devices. However, for backward compatibility, a Security Mode 4 device can fall back to any of the other three security modes when communicating with Bluetooth 2.0 and earlier devices that do not support Security Mode 4. In this case, NIST recommends using Security Mode 3.

### Secure Connections Only Mode

A device can be in Secure Connections Only Mode when all services (except Service Discovery) require an Authenticated link key using Secure Connections. In this mode, the device will refuse service level connections from devices that do not support the Secure Connections feature. As a result, backwards compatibility with older devices will not be maintained. If a device must operate using only FIPS-approved algorithms, except for Service Discovery, then it should enter Secure Connections Only Mode.

### Summary Tables

- **Table 3-3:** Summarizes the most secure Mode which can be achieved, depending on the Bluetooth version of the two peers, assuming that the 4.1 and later devices support the BR/EDR Secure Connections Feature.
- **Table 3-4:** Summarizes the most secure Level which can be achieved in Mode 4, depending on the Bluetooth version of the two peers.

## 3.1.1 Pairing and Link Key Generation

Essential to the authentication and encryption mechanisms provided by Bluetooth is the generation of...# Bluetooth Security and Pairing Methods

## Overview
In Bluetooth BR/EDR, the secret symmetric key is referred to as the **Link Key**, while in Bluetooth Low Energy (BLE), it is known as the **Long Term Key**.

### Key Generation
- In legacy low energy pairing, a **Short Term Key** is generated to distribute the Slave and/or Master Long Term Key.
- In low energy Secure Connections, the Long Term Key is generated by each device and is not distributed.

## Pairing Methods
Bluetooth BR/EDR performs pairing (i.e., link key generation) in one of two ways:
- **Security Modes 2 and 3**: Initiate link key establishment via a method called **Personal Identification Number (PIN) Pairing** (i.e., Legacy or Classic Pairing).
- **Security Mode 4**: Uses **Secure Simple Pairing (SSP)**.

### Bluetooth Versions
- In Bluetooth versions **4.0** and **4.1**, pairing is performed using authenticated or unauthenticated procedures.
- In Bluetooth **4.2**, Secure Connections can be used during pairing to authenticate devices.

## Detailed Pairing Methods

### 3.1.1.1 PIN/Legacy Pairing
For PIN/legacy pairing:
- Two Bluetooth devices simultaneously derive link keys when the user(s) enter an identical secret PIN into one or both devices, depending on the configuration and device type.
- If the PIN is less than 16 bytes, the initiating device’s address (BD_ADDR) supplements the PIN value to generate the initialization key.
- The Ex boxes represent encryption algorithms used during the Bluetooth link key derivation processes.

#### Key Generation and Authentication
- After link key generation is complete, the devices complete pairing by mutually authenticating each other to verify they have the same link key.
- The PIN code used in Bluetooth pairing can vary between 1 and 16 bytes of binary or, more commonly, alphanumeric characters.
- A typical four-digit PIN may be sufficient for low-risk situations; however, a longer PIN (e.g., 8-character alphanumeric) should be used for devices requiring a higher level of security.

### 3.1.1.2 Secure Simple Pairing
**Secure Simple Pairing (SSP)** was first introduced in Bluetooth **2.1 + EDR** for use with Security Mode 4 and improved in Bluetooth **4.1**.

#### Advantages of SSP
- SSP simplifies the pairing process by providing a number of association models that are flexible in terms of device input/output capability.
- It improves security through the addition of **ECDH public key cryptography** for protection against passive eavesdropping and man-in-the-middle (MITM) attacks during pairing.

#### Elliptic Curve Types
The Elliptic Curve used during the pairing process can be one of two types:
- **P-192**
- **P-256** (Secure Connections)

#### Association Models
The four association models offered in SSP are as follows:
- **Numeric Comparison**: Designed for situations where both Bluetooth devices can display a six-digit number and allow a user to enter a "yes" or "no" response. During pairing, a user is shown a six-digit number on each display.# Bluetooth Pairing Methods

Bluetooth pairing methods are designed to establish secure connections between devices. Below are the various models of Bluetooth pairing and their characteristics.

## 1. Numeric Comparison

- This method provides a "yes" response on each device if the numbers match.
- If the numbers do not match, the user responds "no," and pairing fails.
- A key difference from legacy pairing using PINs is that the displayed number is not used for link key generation.
- An eavesdropper who captures the displayed value cannot determine the resulting link or encryption key.

## 2. Passkey Entry

- Designed for situations where one Bluetooth device has input capability (e.g., a keyboard) and the other has a display but no input capability.
- The device with only a display shows a six-digit number that the user enters on the device with input capability.
- Similar to the Numeric Comparison model, the six-digit number is not used in link key generation, providing no utility to an eavesdropper.

## 3. Just Works

- This model is for devices that lack a display or keyboard for entering digits (e.g., headsets).
- It performs Authentication Stage 1 in the same manner as the Numeric Comparison model, but without a display.
- The user must accept a connection without verifying the calculated value on both devices, which means Just Works provides no protection against Man-In-The-Middle (MITM) attacks.

## 4. Out of Band (OOB)

- Designed for devices that support a common additional wireless (e.g., Near Field Communication (NFC)) or wired technology for device discovery and cryptographic value exchange.
- In the case of NFC, devices can pair by simply "tapping" one device against the other, followed by the user accepting the pairing with a single button push.
- To maintain security, OOB technology should be designed to mitigate eavesdropping and MITM attacks.

## Security Mode 4

- Requires Bluetooth services to mandate an authenticated link key using Secure Connections (Level 4), an authenticated link key (Level 3), an unauthenticated link key (Level 2), or no security at all (Level 1).
- All association models described above, except for the Just Works model, provide authenticated link keys.

## Link Key Establishment

- The link key is established for Secure Simple Pairing (SSP) using ECDH public/private key pairs instead of generating a symmetric key via a PIN.
- Each device generates its own ECDH public-private key pair.
- When both devices support Secure Connections, P-256 elliptic curves are used; otherwise, P-192 curves are used.
- Each device sends its public key to the other device.
- The devices then perform stage 1 authentication, which depends on the association model.
- After this, the first device computes a confirmation value (E1) and sends it to the second device for verification.# Bluetooth Link Key Derivation and Authentication

## 3.1.1 Link Key Derivation

### 3.1.1.3 AMP Link Key Derivation from Bluetooth Link Key
For AMP link security (e.g., IEEE 802.11, as introduced in Bluetooth 3.0), an AMP link key is derived from the Bluetooth link key. A Generic AMP Link Key (GAMP_LK) is generated by the AMP Manager in the host stack whenever a Bluetooth link key is created or changed.

As shown in Figure 3-4, the GAMP_LK is generated using the Bluetooth link key (concatenated with itself) and an extended ASCII key identifier (keyID) of "gamp" as inputs to an HMAC-SHA-256 function. Subsequently, a Dedicated AMP Link Key (for a specific AMP and Trusted Device combination) is derived from the Generic AMP Link Key and keyID. For the 802.11 AMP Link Key, the keyID is "802b".

For IEEE 802.11 AMPs, the Dedicated AMP Link Key is used as the 802.11 Pairwise Master Key.

## 3.1.2 Authentication
The Bluetooth device authentication procedure is in the form of a challenge-response scheme. Each device interacting in an authentication procedure can take the role of either the claimant or the verifier or both. The claimant is the device attempting to prove its identity, and the verifier is the device validating the identity of the claimant. The challenge-response protocol validates devices by verifying the knowledge of a secret key—the Bluetooth link key.

### 3.1.2.1 Legacy Authentication
The authentication procedure is of two types: Legacy Authentication and Secure Authentication. Legacy Authentication is performed when at least one device does not support Secure Connections. If both devices support Secure Connections, Secure Authentication is performed.

If authentication fails, a Bluetooth device waits an interval of time before making a new attempt. This time interval increases exponentially to prevent an adversary from attempting to gain access by defeating the authentication scheme through trial-and-error with different link keys.

It is important to note that this technique does not provide security against offline attacks to determine the link key using eavesdropped pairing frames and exhaustively guessing PINs.

Note that the security associated with authentication is solely based on the secrecy of the link key. While the Bluetooth device addresses and random challenge value are considered public parameters, the link key is not. The link key is derived during pairing and should never be disclosed outside the Bluetooth device or transmitted over wireless links.

However, the link key is passed in the clear from the host to the controller (e.g., PC to USB adapter) and the reverse when the host is used for key storage. The challenge value, which is a public parameter associated with the authentication process, must be random and unique for every transaction. The challenge value is derived from a pseudorandom generator within the Bluetooth controller.# Simple Pairing using the P-192 Elliptic Curve

Each device interacting in an authentication procedure is referred to as either the claimant or the verifier. Figure 3-5 conceptually depicts the Legacy Authentication scheme.

## Steps in the Authentication Process

1. **Step 1**: The verifier transmits a 128-bit random challenge (AU_RAND) to the claimant.
2. **Step 2**: The claimant uses the E1 algorithm to compute an authentication response using his or her unique 48-bit Bluetooth device address (BD_ADDR), the link key, and AU_RAND as inputs. The verifier performs the same computation. Only the 32 most significant bits of the E1 output are used for authentication purposes. The remaining 96 bits of the 128-bit output are known as the ACO value, which will be used later as input to create the Bluetooth encryption key.
3. **Step 3**: The claimant returns the most significant 32 bits of the E1 output as the computed response, the Signed Response (SRES), to the verifier.
4. **Step 4**: The verifier compares the SRES from the claimant with the value that it computed.
5. **Step 5**: If the two 32-bit values are equal, the authentication is considered successful. If the two 32-bit values are not equal, the authentication fails.

Performing these steps once accomplishes one-way authentication. The Bluetooth standard allows both one-way and mutual authentication to be performed. For mutual authentication, the above process is repeated with the verifier and claimant switching roles.

## 3.1.2.2 Secure Authentication

This procedure is used when the link key has been generated using Secure Simple Pairing with the P-256 Elliptic Curve. Each device interacting in an authentication procedure acts as both the claimant and the verifier. Figure 3-6 conceptually depicts the Secure Authentication scheme.

### Steps in the Secure Authentication Process

1. **Step 1**: The master transmits a 128-bit random challenge (RAND_M) to the slave.
2. **Step 2**: The slave transmits a 128-bit random challenge (RAND_S) to the master.
3. **Step 3**: Both the master and slave use the h4 and h5 algorithms to compute their authentication responses using the unique 48-bit Bluetooth device address of the master (ADDR_M), the unique 48-bit Bluetooth device address of the slave (ADDR_S), the link key, the RAND_M, and the RAND_S as inputs. Only the 32 most significant bits of the h5 output are used for authentication purposes. The remaining 96 bits of the 128-bit output are known as the Authenticated Ciphering Offset (ACO) value, which will be used later as input to create the Bluetooth encryption key.
4. **Step 4**: The slave returns the most significant 32 bits of the h5 output as the computed response, the Signed Response (SRES_slave), to the master.
5. **Step 5**: The master returns the most significant 32 bits of the h5 output as the computed response, the Signed Response (SRES_master), to the slave.
6. **Step 6**: The master and slave compare the SRES from each other with the value that they computed.
7. **Step 7**: If the two 32-bit values are equal on both the master and slave, the authentication is successful.# Bluetooth Security Overview

## 3.1 Authentication

Authentication is considered successful if the two 32-bit values are equal on both the master and the slave. If they are not equal, the authentication fails.

When the slave initiates the authentication process, the steps followed are identical to the steps above, except that the order of Step 1 and Step 2 is swapped. Note that Secure Authentication is always mutual in nature, irrespective of whether the master or slave initiates it.

## 3.1.3 Confidentiality

In addition to the Security Modes for pairing and authentication, Bluetooth provides a separate confidentiality service to thwart attempts to eavesdrop on the payloads of the packets exchanged between Bluetooth devices. Bluetooth has three Encryption Modes, but only two of them actually provide confidentiality. The modes are as follows:

- **Encryption Mode 1**: No encryption is performed on any traffic.
- **Encryption Mode 2**: Individually addressed traffic is encrypted using encryption keys based on individual link keys; broadcast traffic is not encrypted.
- **Encryption Mode 3**: All traffic is encrypted using an encryption key based on the master link key.

The encryption mechanism used in Encryption Modes 2 and 3 can be based on either the E0 stream cipher (Section 3.1.3.1) or AES-CCM (Section 3.1.3.2).

The encryption key (KC) derived using either mechanism may vary in length in single byte increments from 1 byte to 16 bytes, as set during a negotiation process that occurs between the master and slave devices. During this negotiation, a master device makes a key size suggestion for the slave. The initial key size suggested by the master is programmed into the controller by the manufacturer and is not always 16 bytes. In product implementations, a "minimum acceptable" key size parameter can be set to prevent a malicious user from driving the key size down to the minimum of 1 byte, which would make the link less secure.

Security Mode 4, introduced in Bluetooth 2.1 + EDR, requires that encryption be used for all data traffic, except for service discovery.

### 3.1.3.1 E0 Encryption Algorithm

As shown in Figure 3-7, the encryption key provided to the encryption algorithm is produced using an internal key generator (KG). The KG produces stream cipher keys based on the 128-bit link key, which is a secret that is held in the Bluetooth devices; a 128-bit random number (EN_RAND); and the 96-bit ACO value. The ACO is produced during the authentication procedure, as shown in Figure 3-5. The COF is the 96-bit Ciphering Offset Number and is a concatenation of the Master and Slave BD_ADDR for Master Link Keys, and is the ACO for other Link Keys.

The Bluetooth E0 encryption procedure is based on a stream cipher, E0. A key stream output is exclusive-OR-ed with the payload bits and sent to the receiving device. This key stream is produced using a cryptographic algorithm based on linear feedback shift registers (LFSRs). The encryption function takes the following as inputs: the master device address (BD_ADDR), the 128-bit random number, and other parameters as needed.# Bluetooth Security Overview

## Encryption Mechanisms

### E0 Encryption Algorithm
The E0 encryption algorithm utilizes a number (EN_RAND), a slot number based on the piconet clock, and an encryption key. When encryption is enabled, these components are combined to initialize the Linear Feedback Shift Registers (LFSRs) before the transmission of each packet.

- The slot number used in the stream cipher changes with each packet.
- The ciphering engine is reinitialized with each packet while other variables remain static.

**Important Note:** E0 is not a FIPS-approved algorithm and has faced scrutiny regarding its algorithmic strength. A theoretical known-plaintext attack can recover the encryption key in \(2^{38}\) computations, whereas a brute force attack would require testing \(2^{128}\) possible keys. For communications requiring FIPS-approved cryptographic protection (e.g., for sensitive information transmitted by Federal agencies), this can be achieved by layering application-level FIPS-approved encryption over the native Bluetooth encryption.

### AES-CCM Encryption Algorithm
As illustrated in Figure 3-8, the encryption key provided to the AES-CCM encryption algorithm is produced using the h3 function. The h3 function generates stream cipher keys based on:

- The 128-bit link key (a secret held in the Bluetooth devices)
- The unique 48-bit Bluetooth device address of the master
- The unique 48-bit Bluetooth device address of the slave
- A fixed key ID "btak"
- The 96-bit ACO value, produced during the authentication procedure (see Figure 3-6)

The encryption key is shortened by taking the 128 most significant bits of the original encryption key. The Bluetooth AES-CCM encryption procedure is based on Request for Comment (RFC) 3610, which describes the Advanced Encryption Standard - Counter with Cipher Block Chaining-Message Authentication Code.

The AES-CCM encryption function takes the following inputs:

- The encryption key
- The encryption nonce
- The payload bits

The nonce format has two types:

1. **Payload Counter Format:** Used for Asynchronous Connection-Less (ACL) packets.
2. **Clock Format:** Includes an 11-bit day counter, used for enhanced Synchronous Connection Oriented (eSCO) packets.

When AES-CCM encryption is enabled, ACL packets include a 4-octet Message Integrity Check (MIC), while eSCO packets do not include a MIC.

## Trust Levels, Service Security Levels, and Authorization

In addition to the four security modes, Bluetooth supports different levels of trust and service security.

### Trust Levels
There are two Bluetooth levels of trust:

- **Trusted Device:** Has a fixed relationship with another device and full access to all services.
- **Untrusted Device:** Lacks an established relationship with another Bluetooth device, resulting in restricted access to services.

### Service Security Levels
The available service security levels depend on the security mode being used:

- **Security Modes 1 and 3:** No service security levels are specified.
- **Security Mode 2:** The following security requirements can be enforced:
- Authentication required
- Encryption required
- Authorization required# Bluetooth Security Levels and Features

## Service Security Levels

The available service security levels include any combination of the following, including the lack of security (typically only used for service discovery). Note that BR/EDR encryption cannot be performed without authentication, because the encryption key is derived from an artifact of the authentication process (see Section 3.1.3).

For Security Mode 4, the Bluetooth specification defines five levels of security for Bluetooth services for use during SSP. The service security levels are as follows:

- **Service Level 4**: Requires MITM protection and encryption using 128-bit equivalent strength for link and encryption keys; user interaction is acceptable.
- **Service Level 3**: Requires MITM protection and encryption; user interaction is acceptable.
- **Service Level 2**: Requires encryption only; MITM protection is not necessary.
- **Service Level 1**: MITM protection and encryption not required. Minimal user interaction.
- **Service Level 0**: No MITM protection, encryption, or user interaction required.

The Bluetooth architecture allows for defining security policies that can set trust relationships in such a way that even trusted devices could gain access only to specific services. Although Bluetooth core protocols can only authenticate devices and not users, user-based authentication is still possible. The Bluetooth security architecture (through the security manager) allows applications to enforce more granular security policies. The link layer at which Bluetooth-specific security controls operate is transparent to the security controls imposed by the application layers. Thus, user-based authentication and fine-grained access control within the Bluetooth security framework are possible through the application layers, although doing so is beyond the scope of the Bluetooth specification.

## Security Features of Bluetooth Low Energy

Because of the intent for Bluetooth Low Energy to support computationally and storage-constrained devices, and because Bluetooth Low Energy did not evolve from BR/EDR/HS, low energy security is different from Bluetooth BR/EDR/HS. However, with the Bluetooth 4.1 and 4.2 releases, the differences have been minimized.

One remaining difference is that low energy pairing results in the generation of a Long-Term Key (LTK) rather than a Link Key. While fundamentally performing the same secret key function as the Link Key, the LTK is established in a different manner. In low energy Legacy Pairing, the LTK is generated and then distributed using a key transport protocol rather than key agreement as with BR/EDR. That is, one device determines the LTK and securely sends it over to the other device during pairing—instead of both devices generating the same key individually. In low energy Secure Connections, the key is generated at each device as a result of a key agreement and thus does not need to be distributed over the link.

Bluetooth specification 4.0 with low energy functionality introduced the use of Advanced Encryption Standard—Counter with CBC-MAC (AES-CCM) encryption for the first time in a Bluetooth specification. In addition to providing strong, standards-based encryption, the inclusion of AES-CCM...# Bluetooth Low Energy Security Features

## Overview
Bluetooth Low Energy (BLE) has undergone several updates to enhance its security features, particularly with the introduction of FIPS-140 validation and new cryptographic algorithms.

## Key Updates in BLE Versions

### Version 4.2
- **Secure Connections Feature**: Upgraded low energy pairing to utilize FIPS-approved algorithms (AES-CMAC and P-256 elliptic curve).
- **Renaming**: Low energy pairing was renamed to low energy Legacy Pairing.
- **Key Reuse**: Introduced the ability to reuse keys generated via Secure Connections across different physical transports (low energy or BR/EDR), eliminating the need for users to pair on both transports.
- The low energy LTK Key can be derived from the BR/EDR Link Key using the h6 AES-CMAC-128 function, and vice versa.
- **Additional Features**: Introduced low energy private device addresses and data signing.

### Version 4.0
- **New Cryptographic Keys**: Introduced the Identity Resolving Key (IRK) and Connection Signature Resolving Key (CSRK) to support privacy and data signing features.
- **Privacy Feature**: With low energy's privacy feature enabled, the IRK maps a Resolvable Private Address (RPA) to an Identity Address, which can be either a static random address or a public address. This mitigates tracking threats by using a periodically-changing random address.

## Cryptographic Keys and Their Functions
- **Identity Resolving Key (IRK)**: Used to map RPA to an Identity Address, enhancing privacy.
- **Connection Signature Resolving Key (CSRK)**: Verifies cryptographically-signed Attribute Protocol (ATT) data frames over unencrypted links, providing integrity and authentication.

## Low Energy Legacy Pairing
- In low energy Legacy Pairing, cryptographic keys (LTK, IRK, CSRK) are generated and securely distributed during the pairing process.
- In low energy Secure Connections, the LTK is generated while the IRK and CSRK are generated and securely distributed.

## Security Modes and Levels
### 3.2.1 Low Energy Security Modes
- Low energy security modes are similar to BR/EDR service-level security modes, providing various levels of security for Bluetooth connections.

For further details, refer to Sections 3.2.6 and 3.2.7.# Bluetooth Low Energy Security Overview

## Security Requirements

Bluetooth Low Energy (BLE) specifies that each service can have its own security requirements. A device enforces these service-related security requirements by following the appropriate security mode and level.

### Low Energy Security Mode 1

Low Energy Security Mode 1 has multiple levels associated with encryption:

- **Level 1**: No security (no authentication and no encryption).
- **Level 2**: Unauthenticated pairing with encryption.
- **Level 3**: Authenticated pairing with encryption.
- **Level 4**: Authenticated low energy Secure Connections pairing with encryption.

### Low Energy Security Mode 2

Low Energy Security Mode 2 has multiple levels associated with data signing:

- **Level 1**: Unauthenticated pairing with data signing.
- **Level 2**: Authenticated pairing with data signing.

If a particular service request and the associated service have different security modes and/or levels, the stronger security requirements prevail. For example, if either requires Security Mode 1 Level 3, then the requirements for Security Mode 1 Level 3 are enforced.

### Recommendations

- **Security Mode 1 Level 4**: Requires low energy Secure Connections authenticated pairing and encryption, using AES-CMAC and P-256 elliptic curve for pairing and AES-CCM for encryption. NIST considers this the most secure of these modes/levels and strongly recommends its use for all low energy connections in version 4.2.

- **Security Mode 1 Level 3**: Strongly recommended for low energy connections in versions 4.0 and 4.1, as it requires authenticated pairing and encryption, although not as strong as Level 4.

- **Security Mode 1 Level 1**: The least secure option and should never be used.

- **Security Mode 2**: Does not provide encryption, so Security Mode 1 Levels 4 and 3 are strongly preferred over Security Mode 2.

### Secure Connections Only Mode

Low Energy 4.2 introduced a Secure Connections Only Mode, which requires that only Low Energy Security Mode 1 Level 4 may be used for all services except for those that only require Security Mode 1 Level 1. This ensures that only FIPS-approved algorithms are used on the low energy physical transport. Note that Secure Connections Only Mode is not backwards compatible with versions 4.0 or 4.1 low energy devices, as they do not support P-256 elliptic curve.

## Low Energy Pairing Methods

Version 4.2 added the low energy Secure Connection pairing, which upgraded low energy pairing to utilize FIPS-approved algorithms (AES-CMAC and P-256 elliptic curve). The low energy pairing from versions 4.0 and 4.1 was renamed to low energy Legacy Pairing in 4.2.

Although low energy Legacy Pairing uses similar pairing method names to BR/EDR SSP, it does not use ECDH-based cryptography and provides no eavesdropping protection. Therefore, for all pairing methods except Out Of Band (OOB) with a 128-bit TK, the low energy Legacy Pairing should be considered broken, as an attacker can capture the pairing frames and determine the necessary information.# Low Energy Pairing Methods

The resulting LTK is crucial for secure connections. For this reason, low energy Secure Connection pairing should be used when eavesdropping protection is required.

## Low Energy Legacy Pairing

Low energy Legacy pairing uses key transport rather than key agreement for all keys (LTK, IRK, and CSRK), thus a key distribution step is required during low energy Legacy pairing. In low energy Secure Connection pairing, each device independently generates the LTK; therefore, an optional key distribution step allows for the exchange of the IRK and CSRK keys in low energy Secure Connection pairing.

### Pairing Process

As shown in Figure 3-9, low energy Legacy Pairing begins with the two devices agreeing on a Temporary Key (TK) during pairing, whose value depends on the pairing method being used. The devices then exchange random values and generate a Short Term Key (STK) based on these values and the TK. The link is then encrypted using the STK, which allows secure distribution of the LTK, IRK, and CSRK.

## Low Energy Secure Connections Pairing

As shown in Figure 3-10, low energy Secure Connections pairing begins with the two devices sharing their I/O capabilities and security requirements. After that, public keys are shared. Note that low energy Secure Connections pairing only generates the low energy LTK. The link is encrypted with the LTK, which allows secure distribution of the IRK and CSRK.

### Pairing Association Models

The following subsections describe the low energy pairing association models, both Legacy Pairing and Secure Connections. As with BR/EDR SSP, the association model that is used for a particular connection is based on the input/output capabilities of both devices.

#### Pairing Methods

Sections 4.0 and 4.1 allow three low energy pairing methods: Out of Band, Passkey Entry, and Just Works. Section 4.2 adds Numeric Comparison as a low energy pairing method, which is available only for low energy Secure Connections. It is important to note that while the low energy pairing association model names are similar to those from BR/EDR Simple Secure Pairing models, for low energy Secure Connection, the security provided is functionally equivalent to that of the BR/EDR SSP models. However, for low energy Legacy Pairing, the security provided is different.

### 3.2.2.1 Out of Band

If both devices support a common OOB technology, such as NFC or tethering, they will use the OOB method to pair. In low energy Legacy Pairing, the TK is passed over the OOB technology from one device to the other. The TK must be a unique, random, 128-bit number. NIST strongly recommends the use of a full 128-bit random binary (non-alphanumeric) value when practical.

Because OOB pairing results in an authenticated LTK, it should provide about one-in-a-million protection against MITM attacks based on the premise that an attacker would have to successfully guess the six-digit TK value if low energy Legacy Pairing is used. However, the actual protection provided by OOB pairing depends on the MITM protection provided by the OOB technology itself because a successful OOB eavesdropper would know the TK value instead of having to guess it. In OOB low energy Secure Connection pairing, the device address is passed OOB.# Bluetooth Low Energy Pairing Methods

## 3.2.2.2 Numeric Comparison

Low energy 4.2 adapted the BR/EDR/HS numeric comparison pairing method to be used by low energy in Secure Connections pairing. There is no numeric comparison method with low energy Legacy Pairing.

If both devices are capable of displaying a six-digit number and both are capable of having the user enter "yes" or "no", then numeric comparison can be used. During pairing, a user is shown a six-digit number on each display and provides a "yes" response on each device if the numbers match. Otherwise, the user responds "no" and pairing fails.

An important difference between this operation and the use of PINs in legacy pairing is that the displayed number is not used as input for link key generation. Therefore, an eavesdropper who is able to view (or otherwise capture) the displayed value could not use it to determine the resulting link or encryption key.

Numeric comparison provides MITM protection as well as confirmation to the user that they are pairing the intended two devices.

## 3.2.2.3 Passkey Entry

If, at a minimum, one device supports keyboard input and the other a display output (or keyboard input as well), then the Passkey Entry pairing method is used to pair.

In this model for low energy Legacy Pairing, the TK is generated from the passkey generated and/or entered in each device. The specification requires the passkey size to be 6 numeric digits; therefore, a maximum of 20 bits of entropy can be provided.

For low energy Secure Connections pairing, after the public keys have been exchanged, the passkey (6 numeric digits) is generated and/or entered into each device. The devices then take turns sending a hash of each bit of the passkey, the nonce, and both public keys (repeated 20 times for each of the 20 bits of the passkey) until the entire passkey has been sent and agreed upon.

Passkey Entry pairing also results in an authenticated LTK. Because a six-digit passkey is used, an attacker would have a one-in-a-million chance of guessing the correct passkey to perform a MITM attack. NIST recommends using a unique, random passkey for each pairing to provide this level of protection across multiple pairings.

## 3.2.2.4 Just Works

If none of the OOB, Numeric Comparison, or Passkey Entry association models are possible because of device input/output limitations, then the Just Works pairing method is used.

As with SSP in BR/EDR/HS, the Just Works pairing method for low energy is the weakest of the pairing options from a security perspective. In this model for low energy Legacy Pairing, the TK is set to all zeros (0x00). Therefore, an eavesdropper or MITM attacker does not need to guess the TK to generate the STK.

For low energy Secure Connections pairing, after the public keys have been exchanged...# Bluetooth Low Energy Security

## 3.2.3 Legacy Low Energy Key Generation and Distribution

Once the link is encrypted using the STK, the two devices distribute secret keys such as LTK, IRK, and CSRK. Two options are specified for key generation prior to distribution:

1. A device may simply generate random 128-bit values and store them in a local database (called **Database Lookup** in the specification).
2. The other option is to use a single 128-bit static but random value called **Encryption Root (ER)** along with a 16-bit **Diversifier (DIV)** unique to each trusted device to generate the keys. This option is called **Key Hierarchy** in the specification.

For example, the keys can be derived from ER, DIV, and the Identity Root (IR) using the following formulas:

- LTK = d1(ER, DIV, 0)
- CSRK = d1(ER, DIV, 1)
- IRK = d1(IR, 1, 0)

The `d1` function is called a **Diversifying Function** and is based on AES-128 encryption. However, the specification allows the use of other key derivation functions.

Using this Key Hierarchy method, the device does not need to store multiple 128-bit keys for each trusted device; rather, it only needs to store its ER and the unique DIVs for each device. During reconnection, the remote device sends its EDIV, which is a masked version of DIV. The local device can then regenerate the LTK and/or CSRK from its ER and the passed EDIV. If data encryption or signing is set up successfully, it is verified that the remote device had the correct LTK or CSRK. If unsuccessful, the link is dropped.

Note in the above example that the IRK is static and device-specific, and therefore could be generated prior to pairing (e.g., during manufacturing).

## 3.2.4 Low Energy Secure Connection Key Generation

Low Energy Secure Connections security introduced in Bluetooth 4.2 improves low energy security through the addition of ECDH public key cryptography (using the P-256 Elliptic Curve) for protection against passive eavesdropping and MITM during pairing.

Unlike Legacy Low Energy Pairing, Low Energy Secure Connections pairing does not involve the generation of an STK. Instead, the LTK is directly generated during the pairing.

Low Energy Secure Connections pairing begins with the two devices exchanging their pairing features: I/O capabilities, authentication requirements, and maximum encryption key size requirements. The devices then exchange their public keys.

The LTK is generated using the `f5` function (which is an AES-CMAC-128 based function) using the following inputs:

- The shared secret Diffie-Hellman Key (DHkey) generated during pairing phase 2,
- Random number generated and sent by the Master,
- Random number generated and sent by the Slave,
- Bluetooth address of the Master, and
- Bluetooth address of the Slave.# Bluetooth Low Energy Security Overview

## 3.2.5 Confidentiality, Authentication, and Integrity
AES-CCM is used in Bluetooth low energy to provide confidentiality as well as per-packet authentication and integrity. There is no separate authentication challenge/response step as with BR/EDR/HS to verify that both devices have the same LTK or CSRK. Because the LTK is used as input for the encryption key, successful encryption setup provides implicit authentication. Similarly, data signing provides implicit authentication that the remote device holds the correct CSRK—although confidentiality is not provided.

## 3.2.6 Low Energy Long Term Key Derivation from Bluetooth Link Key
The low energy LTK can be derived from the Bluetooth BR/EDR Link Key. As shown in Figure 3-11, the Intermediate LTK (ILTK) is generated using the Bluetooth link key and an extended ASCII key identifier (keyID) of "tmp2" as inputs to an AES-CMAC function h7. Subsequently, the LTK is derived using ILTK and keyID of "brle" as inputs to h6.

## 3.2.7 Bluetooth Link Key Derivation from Low Energy Long Term Key
The Bluetooth BR/EDR Link Key can also be derived from the low energy Long Term Key. As shown in Figure 3-12, the Intermediate Link Key (ILK) is generated using the low energy LTK and an extended ASCII key identifier (keyID) of "tmp1" as inputs to an AES-CMAC function h7. Subsequently, the Bluetooth Link Key is derived using ILK and keyID of "lebr" as inputs to h6.

# 4 Bluetooth Vulnerabilities, Threats, and Countermeasures
This section describes vulnerabilities in Bluetooth and threats against those vulnerabilities. Based on these identified common vulnerabilities and threats, as well as the Bluetooth security features described in Section 3, this section also recommends possible countermeasures that can be used to improve Bluetooth security.

Organizations that are planning to use products that utilize Bluetooth 4.0, 4.1, or 4.2 technologies should carefully consider the security implications. The 4.0 specification was released in mid-2010, and the 4.2 specification was released in December 2014. At the time of this writing, one significant security vulnerability related to 4.0 has been discovered (see Table 4-1 below). Additionally, few products that support the 4.2 specification are currently available for evaluation. As more compliant products become available, additional vulnerabilities will possibly be discovered, and additional recommendations will be needed for effectively securing Bluetooth low energy devices.

Organizations planning to deploy Bluetooth low energy devices should carefully monitor developments involving new vulnerabilities, threats, and additional security control recommendations.# Bluetooth Security Overview

## 4.1 Bluetooth Vulnerabilities
Table 4-1 provides an overview of a number of known security vulnerabilities associated with Bluetooth. The Bluetooth security checklist in Section 4.4 addresses these vulnerabilities.

**NOTE:** As mentioned previously, depending on the Bluetooth hardware of a device, it may be able to perform both BR/EDR/HS and low energy functionalities (dual-mode) or only low energy functionalities.

## 4.2 Bluetooth Threats
Bluetooth offers several benefits and advantages, but the benefits are not provided without risk. Bluetooth and associated devices are susceptible to general wireless networking threats, such as denial of service attacks, eavesdropping, MITM attacks, message modification, and resource misappropriation. They are also threatened by more specific Bluetooth-related attacks, such as the following:

- **Bluesnarfing:** Bluesnarfing enables attackers to gain access to a Bluetooth-enabled device by exploiting a firmware flaw in older (circa 2003) devices. This attack forces a connection to a Bluetooth device, allowing access to data stored on the device including the device’s international mobile equipment identity (IMEI). The IMEI is a unique identifier for each device that an attacker could potentially use to route all incoming calls from the user’s device to the attacker’s device.

- **Bluejacking:** Bluejacking is an attack conducted on Bluetooth-enabled mobile devices, such as cell phones. An attacker initiates bluejacking by sending unsolicited messages to the user of a Bluetooth-enabled device. The actual messages do not cause harm to the user’s device, but they may entice the user to respond in some fashion or add the new contact to the device’s address book. This message-sending attack resembles spam and phishing attacks conducted against email users. Bluejacking can cause harm when a user initiates a response to a bluejacking message sent with harmful intent.

- **Bluebugging:** Bluebugging exploits a security flaw in the firmware of some older (circa 2004) Bluetooth devices to gain access to the device and its commands. This attack uses the commands of the device without informing the user, allowing the attacker to access data, place phone calls, eavesdrop on phone calls, send messages, and exploit other services or features offered by the device.

- **Car Whisperer:** Car Whisperer is a software tool developed by European security researchers that exploits the use of a standard (non-random) passkey in hands-free Bluetooth car kits installed in automobiles. The Car Whisperer software allows an attacker to send to or receive audio from the car kit. An attacker could transmit audio to the car’s speakers or receive audio (eavesdrop) from the microphone in the car.

- **Denial of Service:** Like other wireless technologies, Bluetooth is susceptible to DoS attacks.# Bluetooth Security Threats and Mitigation

## Types of Bluetooth Attacks

### 1. Denial of Service Attacks
Denial of Service (DoS) attacks can render a device's Bluetooth interface unusable and drain its battery. These attacks are generally not significant due to the proximity required for Bluetooth use, and they can usually be easily averted by simply moving out of range.

### 2. Fuzzing Attacks
Bluetooth fuzzing attacks involve sending malformed or non-standard data to a device's Bluetooth radio and observing the device's reaction. If the device's operation is slowed or stopped by these attacks, it may indicate a serious vulnerability in the protocol stack.

### 3. Pairing Eavesdropping
PIN/Legacy Pairing (Bluetooth 2.0 and earlier) and low energy Legacy Pairing are susceptible to eavesdropping attacks. An eavesdropper who collects all pairing frames can determine the secret key(s) over time, allowing for trusted device impersonation and active/passive data decryption.

### 4. Secure Simple Pairing Attacks
Various techniques can force a remote device to use Just Works Secure Simple Pairing (SSP) and exploit its lack of Man-in-the-Middle (MITM) protection. For instance, an attack device may claim it has no input/output capabilities. Additionally, fixed passkeys could enable an attacker to perform MITM attacks.

## Risk Mitigation and Countermeasures

Organizations should mitigate risks to their Bluetooth implementations by applying countermeasures that address specific threats and vulnerabilities. Some countermeasures cannot be achieved through security features built into the Bluetooth specifications.

### Recommendations
The countermeasures recommended in the checklist in Section 4.4 do not guarantee a secure Bluetooth environment and cannot prevent all adversary penetrations. Furthermore, security comes at a cost, including expenses related to security equipment, inconvenience, maintenance, and operation. Each organization should evaluate the acceptable level of risk based on various factors, which will influence the level of security implemented.

To be effective, Bluetooth security should be integrated throughout the entire lifecycle of Bluetooth solutions.

### Security Categories
FIPS Publication (PUB) 199 establishes three security categories—low, moderate, and high—based on the potential impact of a security breach involving a particular system. NIST SP 800-53 provides recommendations for minimum security controls for information systems based on the FIPS PUB 199 impact categories. These recommendations can assist organizations in identifying the controls needed to protect Bluetooth implementations, in addition to the specific recommendations for Bluetooth listed in this document.

### Knowledge and Understanding
The first line of defense is to provide an adequate level of knowledge and understanding for those who will deal with Bluetooth-enabled devices. Organizations using Bluetooth should establish and document security policies that address the use of Bluetooth-enabled devices.# Bluetooth Security Guidelines

## Responsibilities
Organizations should include awareness-based education to support staff understanding and knowledge of Bluetooth. Policy documents should include a list of approved uses for Bluetooth and the type of information that may be transferred over Bluetooth networks. The security policy should also specify a proper password usage scheme. When feasible, a centralized security policy management approach should be used in coordination with an endpoint security product installed on the Bluetooth devices to ensure that the policy is locally and universally enforced.

## Challenges
The general nature and mobility of Bluetooth-enabled devices increases the difficulty of employing traditional security measures across the enterprise. Nevertheless, a number of countermeasures can be enacted to secure Bluetooth devices and communications, ranging from distance and power output to general operation practices. Several countermeasures that could be employed are provided in the checklist in Section 4.4.

## 4.4 Bluetooth Security Checklist
Table 4-2 provides a Bluetooth security checklist with guidelines and recommendations for creating and maintaining secure Bluetooth piconets.

For each recommendation or guideline in the checklist, a justification column lists areas of concern for Bluetooth devices, the security threats and vulnerabilities associated with those areas, risk mitigations for securing the devices from these threats, and vulnerabilities. In addition, for each recommendation, three checklist columns are provided:

- **Recommended Practice**: If checked, this entry represents a recommendation for all organizations.
- **Should Consider**: If checked, this means that the entry’s recommendation should be considered carefully by an organization for one or more of the following reasons:
- Implementing the recommendation may provide a higher level of security for the wireless environment by offering some additional protection.
- The recommendation supports a defense-in-depth strategy.
- It may have significant performance, operational, or cost impacts. In summary, if the Should Consider column is checked, organizations should carefully consider the option and weigh the costs versus the benefits.
- **Status**: This column is intentionally left blank to allow organization representatives to use this table as a true checklist. For instance, an individual performing a wireless security audit in a Bluetooth environment can quickly check off each recommendation for the organization, asking, “Have I done this?”

## NIST Security Controls
Table 4-3 lists the security controls from NIST Special Publication (SP) 800-53 Revision 4, Security and Privacy Controls for Federal Information Systems and Organizations, that map to the recommendations in Table 4-2. The left column gives the number and name of the control from NIST SP 800-53, and the right column provides the Table 4-2 recommendation.# NIST SP 800-53 Control Overview

## Introduction
The list of controls in Table 4-3 is not intended to be fully comprehensive or authoritative. Rather, it lists those controls that are most directly supported by the Table 4-2 recommendations.

## Key Points
- The controls correspond to the NIST SP 800-53 framework.
- Table 4-3 highlights specific controls relevant to the recommendations in Table 4-2.